//license
! function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? t(exports, require("jquery")) : "function" == typeof define && define.amd ? define(["exports", "jquery"], t) : t(e.GEOBIM = e.GEOBIM || {}, e.jQuery)
}(this, function(e, t) {
    "use strict";

    function i() {
        this._handleEvent = {}, this._handleId = {}, this._handleMap = new function() {
            var e = 0;
            this.add = function() {
                return e++
            }, this.remove = function() {
                return e
            }
        }
    }

    function n(e) {
        this.viewer = e.viewer, this.dotRadius = e.dotRadius || .8, this.dotFillColor = e.dotFillColor || "#FC36F0", this.lineWidth = e.lineWidth || 2, this.lineColor = e.lineColor || "#1AE99E", this.fontSize = e.fontSize || 24, this.polylineEntity = [], this.labelEntity = [], this.result = {}, this.hitV3 = e.hitV3, this.preV3 = e.preV3, this.preV3 && (this.drawLine(this.hitV3, this.preV3), this.showDistanceResult(this.hitV3, this.preV3), this.showOtherDistance(this.hitV3, this.preV3)), this.drawDot()
    }

    function o(e, t, i) {
        var n = performance.now();
        return new Cesium.CallbackProperty(function(o, s) {
            Cesium.defined(s) || (s = []);
            var r = performance.now(),
                a = e.getValue(o, s[0]),
                l = t.getValue(o, s[1]),
                c = Math.min(1, (r - n) / i);
            return Cesium.Cartesian3.lerp(a, l, c, l), s[0] = a, s[1] = l, s.length = 2, s
        }, !1)
    }

    function s(e) {
        this._url = e.url, this._name = e.name, this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._region = e.region, this._active = Cesium.defaultValue(e.active, !0), this._cesiumViewer = void 0, this._layer = void 0, this._className = "ImageryLayer", this._show = e.show || !0, this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._viewChangedEvent = new Cesium.Event, this._type = e.type, this._mapId = e.mapId || "mapbox.streets", this._accessToken = e.accessToken || "pk.eyJ1IjoicDI5NjMzOTUyOCIsImEiOiJjamZ0ZTdrM28wYW5oMzJudmhnNnBjZ3poIn0.jpA-QAHpFk1sq-d4PzFwmg", "TemplateTile" == e.type && (this._minimumLevel = e.minimumLevel, this._maximumLevel = e.maximumLevel)
    }

    function r(e, t) {
        console.log("GEOBIM", pt);
        var t = Cesium.defaultValue(t, {}),
            n = {
                imageryProvider: t.imageryProvider || s.create("ArcGIS_Imagery"),
                animation: !1,
                baseLayerPicker: !1,
                fullscreenButton: !1,
                geocoder: !1,
                homeButton: !1,
                infoBox: !1,
                selectionIndicator: !1,
                timeline: !1,
                sceneModePicker: !1,
                navigationHelpButton: !1
            };
        vt.appKey = t.appKey || vt.appKey, vt.code = t.code || vt.code, vt.password = t.password || vt.password, vt.host = t.host || vt.host, this._cesiumViewer = new Cesium.Viewer(e, n), this._id = Cesium.createGuid(), this._listener = new i, this.startPosition = {}, this._selectedIds = [], this._container = e || "cesiumContainer", this.init()
    }

    function a(e) {
        var t = this;
        a = function(e) {
            return t
        }, this._cesiumViewerInstance = e, this._modules = [], this._mouseMoveEvents = !1, this._mouseClickEvents = !1, this._eventHandler = new Cesium.ScreenSpaceEventHandler(this._cesiumViewerInstance.scene.canvas), this._cameraEventAggregator = new Cesium.CameraEventAggregator(this._cesiumViewerInstance.scene.canvas), this._activeModules = void 0, this.activateMouseClickEvents(!0), this.activateMouseMoveEvents(!0), Cesium.knockout.track(this, ["_activeModules"])
    }

    function l(e) {
        var t;
        t = location.host.indexOf("8000") > -1 ? "/proxy/" : location.protocol + "//" + location.host + "/proxy/", this._defaultProxy = new Cesium.DefaultProxy(t), this._url = e.url, this._name = e.name, this._className = "PhotogrammetryLayer", this._show = e.show || !0, this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._active = Cesium.defaultValue(e.active, !0), this._highlightedObjects = new Array, this._clickedObjects = new Array, this._hiddenObjects = new Array, this._cesiumViewer = void 0, this._tileset = void 0, this._offsetHeight = Cesium.defaultValue(e.offsetHeight, 0), this._listener = new i, this._highlightColor = new Cesium.Color(.4, 1, .4, .8), this._mouseOverhighlightColor = new Cesium.Color(0, .3, 0, 1), this._configParameters = {
            id: this.id,
            name: this.name,
            url: this.url
        }, this.clippingtype = "", this.isclip = !1, this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._viewChangedEvent = new Cesium.Event
    }

    function c(e) {
        this.scene = e, this.camera = e.camera, this.cameraKeys = [], this.looptime = 0, this.currentKey = -1, this.startTime = Date.now(), this.pauseTime = Date.now(), this._pause = !1, this._listener = new i
    }

    function h(e) {
        var i = this,
            n = e.viewer,
            o = t("#" + n._container),
            r = o.offset().left,
            h = o.offset().top,
            p = o.width(),
            m = o.height(),
            f = r + .5 * p,
            g = h + .5 * m,
            v = window.innerWidth - r - p,
            C = e,
            y = n.scene.camera,
            _ = new c(n.scene);
        new a(n._cesiumViewer).addModule(gt);
        var b = (e.layers, e.infoBox),
            w = Cesium.createGuid(),
            x = {
                home: !0,
                shadows: !0,
                roam: !0,
                restore: !0,
                hide: !0,
                baseLayer: !0,
                modelTree: !0,
                attribute: !0,
                measurement: !0,
                movemodel: !0,
                clipping: !0
            },
            E = {
                baseLayer: !1,
                roam: !1,
                shadows: !1,
                sectioning: !1,
                multiple: !1,
                fullScreen: !1,
                attribute: !1,
                search: !1,
                measurement: !1,
                modelTree: !1,
                treeDataLoad: !1,
                movemodel: !1,
                clipping: !1,
                setting: !1
            },
            T = null,
            O = null,
            L = -1,
            k = -1;
        C._selectListener.on("updated", function(e) {
            E.attribute && i.showComponentAttribute(e)
        }), C._listener.on("clicked", function(e) {
            !e.layer || null != e.key && e.layer instanceof l ? null == e.layer && (t("#tab-properties" + w).find("table tbody tr").remove(), t("#tab-properties" + w).find("table tbody").append('<tr class="noprop"><td>未选中构件！</td></tr>')) : (t("#tab-properties" + w).find("table tbody tr").remove(), t("#tab-properties" + w).find("table tbody").append('<tr class="noprop"><td>该构件暂不支持属性显示！</td></tr>'))
        }), C._toolListener.on("check", function() {
            t("#treeview-checkable").treeview("checkAll", {
                silent: !0
            })
        });
        var I = [],
            M = document.createElement("a");
        M.style.display = "none", document.body.appendChild(M);
        var S = document.createElement("form");
        S.style.display = "none", document.body.appendChild(S);
        var P = document.createElement("input");
        P.type = "file", P.addEventListener("change", function(e) {
            var t = P.files[0],
                i = t.name,
                n = (i.split(".").pop().toLowerCase(), new FileReader);
            n.addEventListener("load", function(e) {
                var t, i = e.target.result;
                try {
                    t = JSON.parse(i), j(t)
                } catch (e) {
                    return void b.notify("info", {
                        size: "mini",
                        sound: !1,
                        delay: 1500,
                        position: {
                            left: f - 180,
                            top: g
                        },
                        msg: "请导入指定格式的JSON文件！"
                    })
                }
            }, !1), n.readAsText(t), S.reset()
        }), S.appendChild(P);
        var j = function(e) {
                t("#removePoint").click();
                for (var i = "", n = 0; n < e.length; n++) {
                    var o = e[n];
                    I.push(o.pointObj), i += '<tr id="' + o.pointObj.guid + '"">', i += '<td contenteditable="true">' + o["名称"] + '</td><td contenteditable="true">' + o["描述"] + '</td><td contenteditable="true" class="td-time">' + o.pointObj.timeInterval + "</td>", i += '<td><span class="table-remove glyphicon glyphicon-remove" title="删除视点"></span><span class="table-up glyphicon glyphicon-arrow-up" title="视点上移"></span><span class="table-down glyphicon glyphicon-arrow-down" title="视点下移"></span><span class="table-fly glyphicon glyphicon-send" title="视点定位"></td></tr>'
                }
                t("#wareTable").append(i)
            },
            D = mt.getCoreURL(),
            N = [],
            A = [];
        this.initProjectData = function() {
            var e = C._projectCollection.values;
            N = [];
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (i != C._projectCollection._defaultProject) {
                    for (var n = i.nodes, o = [], s = 0; s < n.length; s++) {
                        var r = n[s];
                        o.push({
                            state: {
                                checked: r.show || !1
                            },
                            text: r.name,
                            layerId: r.id
                        })
                    }
                    N.push({
                        state: i._state,
                        text: i._name,
                        small_icon_name: "fa fa-desktop",
                        nodes: o
                    })
                }
            }
        }, this.addProject = function(e) {
            if (e instanceof Array)
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    N.push({
                        state: {
                            checked: !0
                        },
                        text: i.name,
                        small_icon_name: "fa fa-desktop",
                        nodes: []
                    })
                } else N.push({
                    state: {
                        checked: !0
                    },
                    text: e.name,
                    small_icon_name: "fa fa-desktop",
                    nodes: []
                })
        }, this.createTool2 = function(e) {
            var o = t('<div class="yj-group"></div>');
            o.appendTo(e);
            var s = t('<button type="button" class="yj-but" title="项目图层管理" id="modelTree' + w + '"><div class="yj-icon modelTree-icon" ></div></button>');
            i.options.modelTree && s.appendTo(o);
            var r = t('<button type="button" class="yj-but" title="测量" id="measurement' + w + '"><div class="yj-icon measurement-icon"></div></button>');
            i.options.measurement && r.appendTo(o);
            var a = t('<button type="button" class="yj-but" title="漫游" id="roam' + w + '"><div class="yj-icon roam-icon"></div></button>');
            i.options.roam && a.appendTo(o);
            var l = t('<div class="yj-group"></div>');
            if (l.appendTo(e), i.options.movemodel || i.options.clipping) {
                var c = t('<button type="button" class="yj-but" title="高级功能" id="setting' + w + '"><div class="yj-icon setting-icon"></div></button>');
                c.appendTo(l);
                var p = c[0].offsetTop;
                if (i.options.movemodel && i.options.clipping) var m = 116;
                else var m = 58;
                var f = t('<div id="advanceFun_div" style="display:none;background:rgba(42, 42, 42, 0.5);border-radius:5px;width:' + m + "px;height:48px;position:absolute;top:" + p + 'px;left:50px;"></div>');
                if (f.appendTo(e), i.options.movemodel) {
                    t('<button type="button" class="yj-but" title="移动" style="margin:0px 5px;-webkit-border-radius: 6px;-moz-border-radius: 6px;border-radius: 6px;" id="movemodel' + w + '"><div class="yj-icon move-icon"></div></button>').appendTo(f)
                }
                if (i.options.clipping) {
                    t('<button type="button" class="yj-but" title="裁切" style="margin:0px 5px;-webkit-border-radius: 6px;-moz-border-radius: 6px;border-radius: 6px;" id="clipping' + w + '"><div class="yj-icon clipping-icon"></div></button>').appendTo(f)
                }
            }
            e.find("button").mouseenter(function(e) {
                -1 != e.target.className.indexOf("yj-") && (this.style.backgroundColor = "#1f89de")
            }), e.find("button").mouseleave(function(e) {
                E[this.id.split(w)[0]] || (this.style.backgroundColor = "")
            }), t(document).bind("click", function(e) {
                e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !1
            });
            var g = {
                title: "项目图层管理",
                width: 334,
                height: .5 * window.innerHeight + 100,
                closeOnEsc: !1,
                closeButton: !0,
                afterWindowHide: function(e) {
                    var t = document.getElementById("modelTree" + w);
                    E.modelTree = !1, t && (t.style.backgroundColor = "")
                },
                content: '<div class="modelTree"><div class="modelTree-body"><div id="treeview-checkable" class=""></div></div></div>'
            };
            i.modelTreeWindow = b.window(g), i.modelTreeWindow.setPosition({
                left: "",
                right: 100 + v,
                top: 100 + h
            }), i.modelTreeWindow.windowHide();
            var y = {
                title: "测量数据",
                width: 500,
                height: 460,
                closeOnEsc: !1,
                closeButton: !0,
                afterWindowHide: function(e) {
                    gt.stop(), C.activateMouseClickEvents(!0), C.activateMouseMoveEvents(!0);
                    var i = document.getElementById("measurement" + w);
                    t(".measurement-body").find(".cl-result").text("---"), E.measurement = !1, i && (i.style.backgroundColor = "")
                },
                content: '<div class="measurement-body"><div class="radius-5"><table class="cl-table measure-data"><colgroup style="width:50%"><col style="width:40px"><col style="width:40px"><col style="width:auto"></colgroup><colgroup style="width:50%"><col style="width:40px"><col style="width:40px"><col style="width:auto"></colgroup><tbody><tr><td class="text-right"><span>起点:</span></td><td class="h-branch"></td><td><span>经度：</span><span class="cl-start-x cl-result">---</span><br><span>纬度：</span><span class="cl-start-y cl-result">---</span><br><span>高度：</span><span class="cl-start-z cl-result">---</span></td><td class="text-right"><span>终点:</span></td><td class="h-branch"></td><td><span>经度：</span><span class="cl-end-x cl-result">---</span><br><span>纬度：</span><span class="cl-end-y cl-result">---</span><br>高度：<span class="cl-end-z cl-result">---</span></td></tr></tbody></table></div><h4>测量结果</h4><div class="radius-5" style="margin-top:15px;"><table class="cl-table measure-result"><tbody><tr style="color:#FF5965"><td><span>水平距离:&nbsp;</span></td><td><span class="cl-result-x cl-result"></span></td></tr><tr style="color:#18D96E"><td><span>垂直距离:&nbsp;</span></td><td><span class="cl-result-y cl-result"></span></td></tr><tr style="color:#107BDF;"><td><span>空间距离:&nbsp;</span></td><td><span class="cl-result-z cl-result"></span></td></tr><tr style="color:#eeeeee;"></tr></tbody></table></div><div class="clearfix" style="margin-top:15px;"><button type="button" class="btn-measure pull-right">重新测量</button></div>'
            };
            i.measurementWindow = b.window(y), i.measurementWindow.setPosition({
                left: "",
                right: 5 + v,
                top: 110 + h
            }), i.measurementWindow.windowHide(), e.find('[id="modelTree' + w + '"]').on("click", function() {
                E.modelTree ? (this.style.backgroundColor = "", i.modelTreeWindow.windowHide()) : (E.modelTree = !E.modelTree, this.style.backgroundColor = "#1f89de", i.modelTreeWindow.windowShow(), E.treeDataLoad ? i.updateTree() : (E.treeDataLoad = !0, i.loadTree()))
            }), e.find('[id="search' + w + '"]').on("click", function() {
                E.search ? (this.style.backgroundColor = "", i.searchWindow.windowHide()) : (E.search = !E.attribute, this.style.backgroundColor = "#1f89de", i.searchWindow.windowShow())
            }), e.find('[id="measurement' + w + '"]').on("click", function() {
                E.measurement ? (this.style.backgroundColor = "", i.measurementWindow.windowHide(), gt.stop(), C.activateMouseClickEvents(!0)) : (E.measurement = !E.measurement, this.style.backgroundColor = "#1f89de", i.measurementWindow.windowShow(), C.activateMouseClickEvents(!1), gt.start(function(e) {
                    e.start && (t(".cl-start-x").text(e.start.lon + " °"), t(".cl-start-y").text(e.start.lat + " °"), t(".cl-start-z").text(e.start.height + " 米")), e.end && (t(".cl-end-x").text(e.end.lon + " °"), t(".cl-end-y").text(e.end.lat + " °"), t(".cl-end-z").text(e.end.height + " 米")), e.result && (t(".cl-result-x").text(e.result.x), t(".cl-result-y").text(e.result.y), t(".cl-result-z").text(e.result.z))
                }))
            }), t(".btn-measure").on("click", function() {
                gt.stop(), t(".measurement-body").find(".cl-result").text("---"), C.activateMouseClickEvents(!1), gt.start(function(e) {
                    e.start && (t(".cl-start-x").text(e.start.lon + " °"), t(".cl-start-y").text(e.start.lat + " °"), t(".cl-start-z").text(e.start.height + " 米")), e.end && (t(".cl-end-x").text(e.end.lon + " °"), t(".cl-end-y").text(e.end.lat + " °"), t(".cl-end-z").text(e.end.height + " 米")), e.result && (t(".cl-result-x").text(e.result.x), t(".cl-result-y").text(e.result.y), t(".cl-result-z").text(e.result.z))
                })
            }), e.find('[id="roam' + w + '"]').on("click", function() {
                E.roam ? (this.style.backgroundColor = "", E.roam = !1, t(".flyBotttom").hide(), i.viewLineWindow.windowHide()) : (t(".flyBotttom").show(), E.roam = !E.roam, this.style.backgroundColor = "#1f89de")
            }), e.find('[id="setting' + w + '"]').on("click", function() {
                E.setting ? (t("#advanceFun_div").hide(), E.setting = !1) : (t("#advanceFun_div").show(), E.setting = !0)
            }), e.find('[id="movemodel' + w + '"]').on("click", function() {
                if (E.movemodel) T && (i.moveModelWindow.windowHide(), T = null, L > -1 && n.off(L), k > -1 && n.off(k)), E.movemodel = !1;
                else {
                    if (i.moveModelWindow) T = new GEOBIM.MoveModel(n, !0, !1, i.moveModelWindow);
                    else {
                        T = new GEOBIM.MoveModel(n, !0, b, !1);
                        for (var e = C.layers, o = e.length, s = '<option value="0"></option>', r = 0; r < o; r++) {
                            var a = '<option value="';
                            "PhotogrammetryLayer" != e[r].className && "Model3DLayer" != e[r].className || (a = a + e[r].id + '">' + e[r].name + "</option>", s += a)
                        }
                        t("#move_name").append(s), t("#move_name").change(function() {
                            var e = t(this).val();
                            if (c = C.getLayerbyId(e), "Model3DLayer" == c.className) l = T.modelToparams(c), T.init(l, c, "model", c.id), c.zoomTo();
                            else if ("PhotogrammetryLayer" == c.className) {
                                if (c._tileset._root && c._tileset._root.transform) {
                                    var i = c._tileset._root.transform;
                                    0 == i[12] && 0 == i[13] && 0 == i[14] ? (l = T.tileToparams(c._tileset), T.init(l, c._tileset, "3dtile_sphere", c.id)) : (l = T.tileToparams(c._tileset), T.init(l, c._tileset, "3dtile", c.id))
                                }
                                c.zoomTo()
                            }
                        }), i.moveModelWindow = T.moveModelWindow, i.moveModelWindow._afterWindowHide = function(e) {
                            if (T) {
                                T.MoveModelClearAll(), T = null, L > -1 && n.off(L), k > -1 && n.off(k);
                                var t = document.getElementById("movemodel" + w);
                                t && (t.style.backgroundColor = ""), E.movemodel = !1
                            }
                        }
                    }
                    E.movemodel = !0;
                    var l, c;
                    L = n.listentoSelectObjs(function(e, t, i) {
                        if (e)
                            if (c = e, "Model3DLayer" == e.className) l = T.modelToparams(e);
                            else if ("PhotogrammetryLayer" == e.className && e._tileset._root && e._tileset._root.transform) {
                            var n = e._tileset._root.transform;
                            l = (0 == n[12] && 0 == n[13] && n[14], T.tileToparams(e._tileset))
                        }
                    }), k = n.on("pick", function(e) {
                        if (c)
                            if (l && (l.lon1 = e.lon, l.lat1 = e.lat, l.height1 = e.height), "Model3DLayer" == c.className) T.init(l, c, "model", c.id);
                            else if ("PhotogrammetryLayer" == c.className) {
                            if (c._tileset._root && c._tileset._root.transform) {
                                var t = c._tileset._root.transform;
                                0 == t[12] && 0 == t[13] && 0 == t[14] ? T.init(l, c._tileset, "3dtile_sphere", c.id) : T.init(l, c._tileset, "3dtile", c.id)
                            }
                        } else T.clearAllPram()
                    }), document.addEventListener("keydown", function(e) {
                        84 == e.keyCode && T && T.viewer && T.setDownCamera()
                    }, !1)
                }
            }), e.find('[id="clipping' + w + '"]').on("click", function() {
                if (E.clipping) O.closeClipping(), E.clipping = !1;
                else {
                    var e = [];
                    if (!O) {
                        O = new GEOBIM.Clipping(n);
                        var t = C.layers,
                            o = t.length,
                            s = {
                                id: "allselect",
                                name: "全选",
                                plane: 1,
                                hole: 1
                            };
                        e.push(s);
                        for (var r = 0; r < o; r++) {
                            var a = {};
                            if (a.id = t[r].id, a.name = t[r].name, "PhotogrammetryLayer" == t[r].className) {
                                if (a.plane = 1, a.hole = 1, t[r]._tileset._root && t[r]._tileset._root._boundingVolume) {
                                    var l = t[r]._tileset._root._boundingVolume.boundingVolume;
                                    l.halfAxes ? (a.hole = 1, O.addClippingLayer(t[r], "tile")) : l.radius && O.addClippingLayer(t[r], "photo"), e.push(a)
                                }
                            } else "Model3DLayer" == t[r].className && (a.plane = 1, a.hole = 1, O.addClippingLayer(t[r], "model"), e.push(a))
                        }
                    }
                    O.initHtml(e, b), i.clippingWindow || (i.clippingWindow = O.clippingWindow, i.clippingWindow._afterWindowHide = function(e) {
                        if (O) {
                            O.closeClippingWindow();
                            var t = document.getElementById("clipping" + w);
                            t && (t.style.backgroundColor = ""), E.clipping = !1
                        }
                    }), E.clipping = !0
                }
            }), i.loadTree = function(e) {
                i.initProjectData(), i.projectTreeObj = t("#treeview-checkable").treeview({
                    data: N,
                    showIcon: !0,
                    showCheckbox: !0,
                    selectedBackColor: '#"rgba(27,98,151,0.5)"',
                    showTags: !0,
                    onNodeChecked: function(e, i) {
                        if (console.log("Checked", e, i), i.nodes) {
                            if (i.notCurChecked) return;
                            for (var n = i.nodes.length - 1; n >= 0; n--) {
                                var o = C.getLayerbyId(i.nodes[n].layerId);
                                i.state.checked ? o.showAll() : o.hideAll(), t("#treeview-checkable").treeview("checkNode", i.nodes[n].nodeId, {
                                    silent: !0
                                })
                            }
                        } else {
                            var s = t("#treeview-checkable").treeview("getParent", i.nodeId);
                            s.notCurChecked = !0, t("#treeview-checkable").treeview("checkNode", s.nodeId, {
                                silent: !0
                            });
                            var o = C.getLayerbyId(i.layerId);
                            if (o._className && "TerrainLayer" == o._className) {
                                var r = C.getLayersbyClass("TerrainLayer");
                                if (r.length > 0)
                                    for (var n = 0; n < r.length; n++)
                                        if (r[n].id !== o.id) {
                                            var a = t("#treeview-checkable").treeview("findNodes", [r[n].id, "g", "layerId"]);
                                            a.length > 0 && t("#treeview-checkable").treeview("uncheckNode", a[0].nodeId, {
                                                silent: !1
                                            })
                                        }
                            }
                            i.state.checked ? o.showAll() : o.hideAll()
                        }
                    },
                    onNodeUnchecked: function(e, t) {
                        console.log("UnChecked", e, t), t.notCurChecked = !1;
                        var i = C.getLayerbyId(t.layerId);
                        i && (t.state.checked ? i.showAll() : i.hideAll()), u(t), d(t)
                    },
                    onNodeSelected: function(e, t) {
                        console.log("Selected", e, t), t.layerId && C.getLayerbyId(t.layerId).zoomTo()
                    }
                }), A = t("#treeview-checkable").treeview("getEnabled"), A.length - C._projectCollection.length == C._projectCollection.nodeLength && (C.on("uncheck", function(e) {
                    for (var i = 0; i < A.length; i++) e == A[i].layerId && t("#treeview-checkable").treeview("uncheckNode", [A[i].nodeId, {
                        silent: !0
                    }])
                }), C.on("check", function(e) {
                    for (var i = 0; i < A.length; i++) e == A[i].layerId && t("#treeview-checkable").treeview("checkNode", [A[i].nodeId, {
                        silent: !0
                    }])
                }))
            }
        }, this.updateTree = function() {
            A.length - C._projectCollection.length != C._projectCollection.nodeLength && (i.initProjectData(), i.projectTreeObj = t("#treeview-checkable").treeview({
                data: N,
                showIcon: !0,
                showCheckbox: !0,
                selectedBackColor: '#"rgba(27,98,151,0.5)"',
                showTags: !0,
                onNodeChecked: function(e, i) {
                    if (console.log("Checked", e, i), i.nodes) {
                        if (i.notCurChecked) return;
                        for (var n = i.nodes.length - 1; n >= 0; n--) {
                            var o = C.getLayerbyId(i.nodes[n].layerId);
                            i.state.checked ? o.showAll() : o.hideAll(), t("#treeview-checkable").treeview("checkNode", i.nodes[n].nodeId, {
                                silent: !0
                            })
                        }
                    } else {
                        var s = t("#treeview-checkable").treeview("getParent", i.nodeId);
                        s.notCurChecked = !0, t("#treeview-checkable").treeview("checkNode", s.nodeId, {
                            silent: !0
                        });
                        var o = C.getLayerbyId(i.layerId);
                        i.state.checked ? o.showAll() : o.hideAll()
                    }
                },
                onNodeUnchecked: function(e, t) {
                    console.log("UnChecked", e, t), t.notCurChecked = !1;
                    var i = C.getLayerbyId(t.layerId);
                    i && (t.state.checked ? i.showAll() : i.hideAll()), u(t), d(t)
                },
                onNodeSelected: function(e, t) {
                    console.log("Selected", e, t), t.layerId && C.getLayerbyId(t.layerId).zoomTo()
                }
            }), A = t("#treeview-checkable").treeview("getEnabled"), A.length - C._projectCollection.length == C._projectCollection.nodeLength && (C.on("uncheck", function(e) {
                for (var i = 0; i < A.length; i++) e == A[i].layerId && t("#treeview-checkable").treeview("uncheckNode", [A[i].nodeId, {
                    silent: !0
                }])
            }), C.on("check", function(e) {
                for (var i = 0; i < A.length; i++) e == A[i].layerId && t("#treeview-checkable").treeview("checkNode", [A[i].nodeId, {
                    silent: !0
                }])
            })))
        }, this.createTool = function(e) {
            i.options = t.extend({}, x, e);
            var s = t('<div class="yj-tool" id="my-tool' + w + '" ></div>');
            s.appendTo(o);
            var r = t('<div class="yj-group"></div>');
            r.appendTo(s);
            var a = t('<button type="button" class="yj-but" title="初始化" id="home' + w + '"><div class="yj-icon home-icon" ></div></button>');
            i.options.home && a.appendTo(r);
            var l = t('<button type="button" class="yj-but" title="复位" id="restore' + w + '"><div class="yj-icon restore-icon"></div></button>');
            i.options.restore && l.appendTo(r), i.createTool3(s, r);
            var c = t('<button type="button" class="yj-but" aria-expanded="false" title="天空盒" id="skybox' + w + '"><div class="yj-icon skybox-icon" ></div></button>'),
                u = t('<ul class="dropdown-menu skyboxModal" role="menu" id="skyboxModal' + w + '" ><li><a href="#">bluesky</a></li><li><a href="#">CloudyLightRays</a></li><li><a href="#">FullMoon</a></li><li><a href="#">SunSet</a></li><li><a href="#">ThickCloudsWater</a></li><li><a href="#">TropicalSunnyDay</a></li></ul>');
            i.options.skybox && (c.appendTo(r), u.appendTo(r));
            var d = t('<div class="yj-group"></div>');
            d.appendTo(s);
            var p = t('<button type="button" class="yj-but" title="阴影" id="shadows' + w + '"><div class="yj-icon shadows-icon" ></div></button>');
            i.options.shadows && p.appendTo(d);
            var m = t('<button type="button" class="yj-but" title="构件隐藏" id="hide' + w + '"><div class="yj-icon hide-icon"></div></button>');
            i.options.hide && m.appendTo(d);
            var y = t('<button type="button" class="yj-but" title="构件属性" id="attribute' + w + '"><div class="yj-icon attribute-icon" ></div></button>');
            i.options.attribute && y.appendTo(d), s.find("button").mouseenter(function(e) {
                -1 != e.target.className.indexOf("yj-") && (this.style.backgroundColor = "#1f89de")
            }), s.find("button").mouseleave(function(e) {
                E[this.id.split(w)[0]] || (this.style.backgroundColor = "")
            }), t(document).bind("click", function(e) {
                e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !1
            }), s.find('[id="home' + w + '"]').on("click", function() {
                n.flyHome()
            }), s.find('[id="shadows' + w + '"]').on("click", function() {
                E.shadows ? (this.style.backgroundColor = "", n.shadows = !1) : (this.style.backgroundColor = "#1f89de", n.shadows = !0), E.shadows = !E.shadows
            }), s.find('[id="restore' + w + '"]').on("click", function() {
                C.restore()
            }), s.find('[id="skybox' + w + '"]').on("click", function() {
                s.find('[id="skyboxModal' + w + '"]').toggle()
            }), s.find('[id="skyboxModal' + w + '"]').on("click", function() {
                n.setSkyBox(event.target.innerText), s.find('[id="skyboxModal' + w + '"]').toggle()
            }), s.find('[id="hide' + w + '"]').on("click", function() {
                if (!C.activeLayer) return void b.notify("info", {
                    size: "mini",
                    sound: !1,
                    delay: 1500,
                    position: {
                        left: f - 180,
                        top: g
                    },
                    msg: "请选择要隐藏的构件！"
                });
                C.activeLayer.hideObjects()
            });
            var _ = {
                title: "属性",
                width: 334,
                height: .5 * window.innerHeight + 100,
                closeOnEsc: !1,
                closeButton: !0,
                afterWindowHide: function(e) {
                    var t = document.getElementById("attribute" + w);
                    E.attribute = !1, t && (t.style.backgroundColor = "")
                },
                content: '<div class="tab-body" id="tab-properties' + w + '"> <table class="sx-table table-no-top"><thead></thead><tbody><tr class="noprop"><td>尚未选择构件</td></tr></tbody></table></div>'
            };
            i.attributeWindow = b.window(_), i.attributeWindow.setPosition({
                left: "",
                right: 5 + v,
                top: 60 + h
            }), i.attributeWindow.windowHide(), s.find('[id="attribute' + w + '"]').on("click", function() {
                E.attribute ? (this.style.backgroundColor = "", i.attributeWindow.windowHide()) : (E.attribute = !E.attribute, this.style.backgroundColor = "#1f89de", 0 != n.selectedIds.length ? (console.log(n.selectedIds[0]), i.showComponentAttribute(n.selectedIds[0])) : (t("#tab-properties" + w).find("table tbody tr").remove(), t("#tab-properties" + w).find("table tbody").append('<tr class="noprop"><td>未选中构件！</td></tr>')), i.attributeWindow.windowShow())
            }), i.createTool2(s), i.createRoamTool(s)
        }, this.createRoamTool = function(e) {
            function s(e) {
                return "" !== e && (!isNaN(e) && Number(e) > 0)
            }

            function r(e, t) {
                var i = new Blob([e], {
                    type: "text/plain"
                });
                M.href = URL.createObjectURL(i), M.download = t || "data.json", M.click()
            }
            t('<div class="flyBotttom" id="flyBotttom" style="display: none;"><div class="flyContral"><span class="playbtn1"><i class="flyAdd" id="flyAdd" title="添加路线"></i><i class="flyPlay" id="flyPlay" title="播放"></i><i class="flyHelp" id="flyHelp" title="帮助"></i></span><span class="playbtn2" style="display:none"><i class="start" id="start"></i><font>暂停</font><i class="stop" id="stop"></i><font>结束</font></span></div>').appendTo(o);
            var a = {
                title: "足迹路线",
                width: 400,
                height: 440,
                closeOnEsc: !1,
                closeButton: !0,
                afterWindowHide: function(e) {},
                content: '<div class="pointInfo"><div class="popover-content"><table id="wareTable" class="table-fill"><thead><tr><th class="head-name text-center">名称</th><th class="head-describe text-center">描述</th><th class="head-time text-center">秒</th><th class="head-handle text-center">操作</th></tr></thead></table></div><div class="pointBottom"><button id="pointAdd" title="添加视点" class="btn btn-primary"> 添加</button><button id="removePoint" title="清空视点" class="btn btn-default"> 清空</button><button id="pointImport" title="导入视点" class="btn btn-outline-default"> 导入</button><button id="pointExport" title="导出视点" class="btn btn-outline-default"> 导出</button></div></div>'
            };
            i.viewLineWindow = b.window(a), i.viewLineWindow.setPosition({
                left: "",
                right: 5 + v,
                top: 110 + h
            }), i.viewLineWindow.windowHide(), t(".flyBotttom .flyHelp").on("click", function() {
                if (0 == t(".introjs-overlay").length) {
                    var e = t('<div class="introjs-overlay"></div>'),
                        i = t('<div class="introjs-content"><div class="introjs-step1"><span></span><img src="' + D + 'images/step/step1.png"/></div><div class="introjs-step2"><span></span><img src="' + D + 'images/step/step2.png"/></div><div class="introjs-step3"><span></span><img src="' + D + 'images/step/step3.png"/></div><div class="introjs-step4"><span></span><img src="' + D + 'images/step/step4.png"/></div><div class="introjs-step5"><span></span><img src="' + D + 'images/step/step5.png"/></div></div>');
                    e.appendTo(o), i.appendTo(o)
                } else t(".introjs-overlay").show(), t(".introjs-content").show(), t(".introjs-content").children().css("display", "none"), t(".introjs-content div").first().css("display", "block")
            }), t("body").on("click", ".introjs-overlay", function() {
                t(this).is(":visible") && (t(this).hide(), t(".introjs-content").hide())
            }), t("body").on("click", ".introjs-content span", function() {
                if (t(this).parent().hide(), 0 == t(this).parent().next().length) return void t(".introjs-overlay").hide();
                t(this).parent().next().show()
            }), t(".point-close").on("click", function() {
                i.viewLineWindow.windowHide()
            }), t("#flyAdd").on("click", function() {
                i.viewLineWindow.windowShow()
            }), t("#wareTable").on("click", ".table-remove", function() {
                var e = t(this).parents("tr").attr("id");
                t(this).parents("tr").detach();
                for (var i = 0; i < I.length; i++)
                    if (I[i].guid == e) return void I.splice(i, 1)
            }), t("#wareTable").on("click", ".table-up", function() {
                var e = t(this).parents("tr"),
                    i = e.attr("id");
                if (0 !== e.index()) {
                    e.prev().before(e.get(0));
                    for (var n = 0; n < I.length; n++)
                        if (I[n].guid == i) return void(I[n] = I.splice(n - 1, 1, I[n])[0])
                }
            }), t("#wareTable").on("click", ".table-fly", function() {
                for (var e = t(this).parents("tr"), i = e.attr("id"), o = 0; o < I.length; o++) I[o].guid == i && n.flyTo({
                    xyz: [I[o].posx, I[o].posy, I[o].posz],
                    direction: [I[o].directionx, I[o].directiony, I[o].directionz],
                    up: [I[o].upx, I[o].upy, I[o].upz]
                })
            }), t("#wareTable").on("click", ".table-down", function() {
                var e = t(this).parents("tr"),
                    i = e.attr("id");
                if (e.index() !== I.length - 1) {
                    e.next().after(e.get(0));
                    for (var n = 0; n < I.length; n++)
                        if (I[n].guid == i) return void(I[n] = I.splice(n + 1, 1, I[n])[0])
                }
            });
            var l = "";
            t("#wareTable").on("focus", ".td-time", function() {
                l = t(this).html()
            }).on("blur paste", ".td-time", function() {
                l != t(this).html() && (l = t(this).html(), s(l) ? t(this).trigger("change") : (t(this).html("2"), b.notify("info", {
                    size: "mini",
                    sound: !1,
                    delay: 2e3,
                    position: {
                        left: f - 180,
                        top: g
                    },
                    msg: "请输入大于零的正数!"
                })))
            }), t("#wareTable").on("change", ".td-time", function() {
                for (var e = t(this).parents("tr").attr("id"), i = 0; i < I.length; i++)
                    if (I[i].guid == e) return void(I[i].timeInterval = Number(l))
            }), t("#pointAdd").on("click", function() {
                var e = y.position,
                    i = y.up,
                    n = y.direction,
                    o = I.length,
                    s = {
                        guid: Cesium.createGuid(),
                        directionx: n.x,
                        directiony: n.y,
                        directionz: n.z,
                        posx: e.x,
                        posy: e.y,
                        posz: e.z,
                        timeInterval: 2,
                        upx: i.x,
                        upy: i.y,
                        upz: i.z
                    };
                I.push(s);
                var r = '<tr id="' + s.guid + '"">';
                r += '<td contenteditable="true">视点' + (o + 1) + '</td><td contenteditable="true">-</td><td contenteditable="true" class="td-time">' + s.timeInterval + "</td>", r += '<td><span class="table-remove glyphicon glyphicon-remove" title="删除视点"></span><span class="table-up glyphicon glyphicon-arrow-up" title="视点上移"></span><span class="table-down glyphicon glyphicon-arrow-down" title="视点下移"></span><span class="table-fly glyphicon glyphicon-send" title="视点定位"></td></tr>', t("#wareTable").append(t(r))
            }), t("#flyPlay").on("click", function() {
                0 != I.length ? (t(".playbtn1").hide(), t(".playbtn2").show(), _.clear(), _.loadLine(I), i.viewLineWindow.windowHide()) : b.notify("info", {
                    size: "mini",
                    sound: !1,
                    delay: 2e3,
                    position: {
                        left: f - 180,
                        top: g
                    },
                    msg: "请先添加路线!"
                })
            }), t("#removePoint").on("click", function() {
                t("#wareTable").find("tbody").remove(), I = []
            }), jQuery.fn.pop = [].pop, jQuery.fn.shift = [].shift, t("#pointExport").click(function() {
                var e = t("#wareTable").find("tr:not(:hidden)"),
                    i = ["名称", "描述", "秒", "pointObj"],
                    n = [];
                if (e.each(function() {
                        var e = t(this).find("td");
                        if (0 == e.length) return !0;
                        var o = {},
                            s = t(this).index();
                        i.forEach(function(t, i) {
                            o[t] = 3 == i ? I[s] : e.eq(i).text()
                        }), n.push(o)
                    }), 0 == n.length) return void b.notify("info", {
                    size: "mini",
                    sound: !1,
                    delay: 2e3,
                    position: {
                        left: f - 180,
                        top: g
                    },
                    msg: "无视点可导出，请先添加视点!"
                });
                console.log(JSON.stringify(n)), r(JSON.stringify(n))
            }), t("#pointImport").click(function() {
                P.click()
            }), t("#start").on("click", function() {
                var e = t(this);
                e.hasClass("active") ? (_.play(), e.removeClass("active"), e.next().html("暂停")) : (e.addClass("active"), e.next().html("继续 "), _.pause())
            }), _.on("end", function() {
                t(".playbtn1").show(), t(".playbtn2").hide()
            }), t("#stop").on("click", function() {
                _.stop(), _.clear()
            })
        }, this.createTool3 = function(e, o) {
            var r = '<div id="baseLayerModal' + w + '" class="baseLayerModal"><div id="baselayerWraper" class="service-items"><div class="service-item"><div class="service-itemIcon" data-id="TianDiTu_Street"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/tdt_vec.png" title="天地图"></div><div class="service-itemLabel">天地图-街道</div></div><div class="service-item"><div class="service-itemIcon" data-id="TianDiTu_Imagery"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/tdt_img.png" title="ArcGIS"></div><div class="service-itemLabel">天地图-影像</div></div><div class="service-item"><div class="service-itemIcon" data-id="Google_Street"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/google_vec.png" title="ArcGIS"></div><div class="service-itemLabel">Google-街道</div></div><div class="service-item"><div class="service-itemIcon" data-id="Google_Imagery"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/google_img.png" title="谷歌"></div><div class="service-itemLabel">Google-影像</div></div><div class="service-item"><div class="service-itemIcon" data-id="ArcGIS_Street"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/esriWorldStreetMap.png" title="ArcGIS"></div><div class="service-itemLabel">Esri-街道</div></div><div class="service-item"><div class="service-itemIcon" data-id="ArcGIS_Imagery"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/esriWorldImagery.png" title="ArcGIS"></div><div class="service-itemLabel">Esri-影像</div></div><div class="service-item"><div class="service-itemIcon" data-id="None"><img style="width:100%;height:100%;" src="' + D + 'images/basemaps/transparent.png" title="隐藏底图"></div><div class="service-itemLabel">无</div></div><div class="service-item"><div class="service-itemIcon" data-id="Color"><input type="text" name="colorPaletteSelect" id="colorPaletteSelect" style="display: none;"></div><div class="service-itemLabel">纯色</div></div></div></div>',
                a = t('<button type="button" data-toggle="dropdown" aria-expanded="false" class="yj-but" title="底图设置" id="baseLayer' + w + '"><div class="yj-icon baseLayer-icon" ></div>' + r + "</button>");
            i.options.baseLayer && a.appendTo(o);
            var l = t('<button type="button" class="yj-but" title="开发帮助" id="help' + w + '"><div class="yj-icon help-icon" ></div></button>');
            i.options.help && l.appendTo(o), t("#colorPaletteSelect").spectrum({
                showPaletteOnly: !0,
                showPalette: !0,
                hideAfterPaletteSelect: !0,
                color: "blue",
                palette: [
                    ["black", "white", "blanchedalmond", "rgb(255, 128, 0);", "hsv 100 70 50"],
                    ["red", "yellow", "green", "blue", "violet"]
                ],
                change: function(e) {
                    n.switch("Color", e.toRgbString()), s._type = !1, t(".baseLayerModal").find(".service-itemIcon-selected").removeClass("service-itemIcon-selected"), t(".baseLayerModal").find(".service-itemLabel-selected").removeClass("service-itemLabel-selected");
                    var i = t(".baseLayerModal").find('[data-id="Color"]');
                    i.addClass("service-itemIcon-selected"), i.siblings().addClass("service-itemLabel-selected")
                }
            }), t(document).bind("click", function(e) {});
            var c = o.find('[id="baseLayerModal' + w + '"]');
            o.find('[id="baseLayer' + w + '"]').on("click", function(e) {
                if (e.preventDefault(), c.is(":hidden")) {
                    if (c.css("display", "inline-block"), !s._type) return;
                    var i = t(".baseLayerModal").find('[data-id="' + s._type + '"]');
                    i.addClass("service-itemIcon-selected"), i.siblings().addClass("service-itemLabel-selected"), E.baseLayer = !0
                } else c.hide(), E.baseLayer = !1
            }), o.on("click", ".service-item", function(e) {
                e.preventDefault(), t(this).siblings().children().removeClass("service-itemIcon-selected"), t(this).siblings().children().removeClass("service-itemLabel-selected");
                var i = t(this).find('[class="service-itemIcon"]').attr("data-id");
                "None" == i && (s._type = !1), t(this).find('[class="service-itemIcon"]').addClass("service-itemIcon-selected"), t(this).find('[class="service-itemLabel"]').addClass("service-itemLabel-selected"), i && n.switch(i)
            })
        }, this.showBIMAttribute = function() {
            var e, i, n = function(e, n, o) {
                var s = t('<tr class="sx-active"></tr>');
                i.find("table tbody").append(s);
                var r = t("<td colspan=\"2\" style='font-size: 14px'></td>");
                s.append(r), r.append("<b>BIM构建属性</b>");
                for (var a = 0; a < n; a++) {
                    var l = o[a],
                        c = e.getProperty(l),
                        h = t("<tr></tr>");
                    s.after(h), h.append("<td>" + l + "</td>");
                    var u = t("<td>"),
                        d = t('<span class="value nonEditable">' + (null == c ? "" : c) + "</span>");
                    u.append(d), h.append(u)
                }
            };
            return function(o) {
                if (e) {
                    var s = e.getProperty("originalColorValue");
                    e.color = s
                }
                if (i = i || t("#tab-properties" + w), i.find("table tbody tr").remove(), !o) return i.find("table tbody").append('<tr class="noprop"><td>属性加载失败</td></tr>'), null;
                var r = o.getPropertyNames(),
                    a = r.length;
                if (!(a > 0)) return i.find("table tbody").append('<tr class="noprop"><td>没有属性</td></tr>'), null;
                e = o, Cesium.defined(e.getProperty("originalColorValue")) || e.setProperty("originalColorValue", Cesium.Color.clone(o.color)), o.color = new Cesium.Color(.4, 1, .4, .8), i.find("table tbody").append('<tr class="noprop"><th><span class="value nonEditable">名称</span></th><th><span class="value nonEditable">值</span></th></tr>'), n(o, a, r)
            }
        }(), this.showComponentAttribute = function() {
            var e, i = "",
                o = function(i, n) {
                    var o = t('<tr class="sx-active"></tr>');
                    e.find("table tbody").append(o);
                    var s = t("<td colspan=\"2\" style='font-size: 14px'></td>");
                    o.append(s), s.append("<b>" + i + "</b>");
                    for (var r in n) {
                        var a = r,
                            l = n[r],
                            c = t("<tr></tr>");
                        o.after(c), c.append("<td>" + a + "</td>");
                        var h = t("<td>"),
                            u = t('<span class="value nonEditable">' + (null == l ? "" : l) + "</span>");
                        h.append(u), c.append(h)
                    }
                };
            return function(s) {
                if (s != i) {
                    if (void 0 == s) return;
                    e = e || t("#tab-properties" + w), i = s, n.getComponentAttribute(s, function(t) {
                        if (e.find("table tbody tr").remove(), null === t) return e.find("table tbody").append('<tr class="noprop"><td>没有属性</td></tr>'), null;
                        if (void 0 === t) return e.find("table tbody").append('<tr class="noprop"><td>属性加载失败</td></tr>'), null;
                        e.find("table tbody").append('<tr class="noprop"><th><span class="value nonEditable">名称</span></th><th><span class="value nonEditable">值</span></th></tr>');
                        var i = t;
                        for (var n in i) "object" == typeof i[n] && o(n, i[n])
                    })
                }
            }
        }()
    }

    function u(e) {
        t("#treeview-checkable").treeview("uncheckNode", e.nodeId, {
            silent: !0
        }), e.notCurChecked = !1;
        var i = t("#treeview-checkable").treeview("getSiblings", e.nodeId),
            n = t("#treeview-checkable").treeview("getParent", e.nodeId);
        if (!("nodeId" in n)) return void(n.notCurChecked = !1);
        var o = !0;
        for (var s in i)
            if (i[s].state.checked) {
                o = !1;
                break
            }
        o && u(n)
    }

    function d(e) {
        if (t("#treeview-checkable").treeview("uncheckNode", e.nodeId, {
                silent: !0
            }), null != e.nodes && e.nodes.length > 0)
            for (var i in e.nodes) d(e.nodes[i])
    }

    function p(e) {
        e = Cesium.defaultValue(e, {}), this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._name = e.name, this._url = e.url, this._active = Cesium.defaultValue(e.active, !0), this._type = Cesium.defaultValue(e.type, ""), this._cesiumViewer = void 0, this._terrain = void 0, this._className = "DynamicLayer", this._points = [], this._socket = void 0, this._pointEntity = void 0, this._polylineEntitys = [], this._config = {
            showStatus: !0
        }, this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._viewChangedEvent = new Cesium.Event
    }

    function m(e, t, i) {
        var n = performance.now();
        return new Cesium.CallbackProperty(function(o, s) {
            Cesium.defined(s) || (s = []);
            var r = performance.now(),
                a = e.getValue(o, s[0]),
                l = t.getValue(o, s[1]),
                c = Math.min(1, (r - n) / i);
            return Cesium.Cartesian3.lerp(a, l, c, l), s[0] = a, s[1] = l, s.length = 2, s
        }, !1)
    }

    function f(e) {
        this._id = e.id || Cesium.createGuid(), this._name = e.name || "项目", this._state = {
            checked: e.checked || !0
        }, this._nodes = [], this._sortNodes = []
    }

    function g(e) {
        return function(t, i) {
            return t[e] - i[e]
        }
    }

    function v() {
        this._id = Cesium.createGuid(), this._projects = [], this._defaultProject
    }

    function C(e) {
        this._viewer = e, this._cesiumViewerInstance = e instanceof r ? e._cesiumViewer : e, this._infoBox = new yt, this._layers = [], this._mouseMoveEvents = !1, this._mouseClickEvents = !1, this._eventHandler = new Cesium.ScreenSpaceEventHandler(this._cesiumViewerInstance.scene.canvas), this._cameraEventAggregator = new Cesium.CameraEventAggregator(this._cesiumViewerInstance.scene.canvas), this._activeLayer = void 0, this._projectCollection = new v, this._listener = e._listener, this._selectListener = new i, this._toolListener = new i, this.registerMouseEventHandlers(), this.activateViewChangedEvent(!0), this.activateMouseClickEvents(!0)
    }

    function y(e) {
        this._url = e.url, this._name = e.name, this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._active = Cesium.defaultValue(e.active, !0), this._highlightedObjects = new Array, this._hiddenObjects = new Array, this._clickedObjects = new Array, this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._className = "VectorLayer", this._show = e.show || !0, this._cesiumViewer = void 0, this._geoJsonDataSource = void 0, this._entities = void 0, this._layerType = void 0, this._viewChangedEvent = new Cesium.Event, this._highlightColor = new Cesium.Color(.4, .4, 0, 1), this._mouseOverhighlightColor = new Cesium.Color(0, .3, 0, 1), this._symbol = Cesium.defaultValue(e.symbol, !1), this._uniformStyle = Cesium.defaultValue(e.uniformStyle, !1), this._fieldMap = Cesium.defaultValue(e.fieldMap, !1), this._listener = new i, this._styleConfig = {
            show: e.show || !0,
            height: e.height || 0,
            fill: e.fill || !0,
            outline: e.outline || !1,
            outlineColor: e.outlineColor || Cesium.Color.BLACK,
            outlineWidth: e.outlineWidth || 1,
            perPositionHeight: e.perPositionHeight || !1,
            width: e.width || 1,
            fillColor: e.fillColor || Cesium.Color.WHITE,
            pixelOffset: e.pixelOffset || Cesium.Cartesian2.ZERO,
            scale: e.scale || 1
        }
    }

    function _(e) {
        var i = t('<div class="popover fade top in popover-box" id="infoDiv">');
        i.append('<div class="before"></div><h3 class="popover-title text-left">建筑基本信息</h3>');
        var n = t('<div class="popover-content"></div>');
        i.append(n);
        var o = t('<table class="properties"><tr><td>属性名</td><td>属性值</td></tr></table>');
        n.append(o);
        for (var s = e.propertyNames, r = 0; r < s.length; r++) {
            var a = s[r],
                l = e[a]._value; - 1 == a.indexOf("Shape") || isNaN(l) || (l = parseFloat(l).toFixed(6));
            var c = t("<tr></tr>"),
                h = "<td>" + a + "</td>",
                u = "<td>" + l + "</td>";
            c.append(h + u), o.append(c)
        }
        return i
    }

    function b(e) {
        t("#infoDiv .popover-content").html("");
        var i = t('<table class="properties"><tr><td>属性名</td><td>属性值</td></tr></table>');
        t("#infoDiv .popover-content").append(i);
        for (var n = e.propertyNames, o = 0; o < n.length; o++) {
            var s = n[o],
                r = e[s]._value; - 1 == s.indexOf("Shape") || isNaN(r) || (r = parseFloat(r).toFixed(6));
            var a = t("<tr></tr>"),
                l = "<td>" + s + "</td>",
                c = "<td>" + r + "</td>";
            a.append(l + c), i.append(a)
        }
    }

    function w(e) {
        e = Cesium.defaultValue(e, {}), this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._name = e.name, this._active = Cesium.defaultValue(e.active, !0), this._type = Cesium.defaultValue(e.type, ""), this._url = e.url, this._cesiumViewer = void 0, this._terrain = void 0, this._className = "TerrainLayer", this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._viewChangedEvent = new Cesium.Event
    }

    function x(e) {
        this._url = e.url, this._name = e.name;
        var t = e.modelMatrix ? Cesium.Transforms.headingPitchRollToFixedFrame(Cesium.Cartesian3.fromDegrees(e.modelMatrix[0], e.modelMatrix[1], e.modelMatrix[2]), new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(e.modelMatrix[3]), 0, 0)) : new Cesium.Matrix4;
        this._modelMatrix = t, this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._active = Cesium.defaultValue(e.active, !0), this._highlightedObjects = {}, this._hiddenObjects = [], this._isInHighlight = !1, this._cesiumViewer = void 0, this._model = void 0, this._show = e.show || !0, this._className = "Model3DLayer", this._highlightColor = new Cesium.Color(.4, 1, .4, .8), this._mouseOverhighlightColor = new Cesium.Color(0, .3, 0, 1), this._listener = new i, this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._viewChangedEvent = new Cesium.Event
    }

    function E(e) {
        this.oWorker = new Worker(e), this.oListeners = {}, this._isSleep = !1, this.initialWorker()
    }

    function T(e) {
        this.oTask = null, this.citydbKmlLayerInstance = e, this.dataPool = {}, this.cachedObjects = {}
    }

    function O(e, t) {
        e = I(e), t = I(t);
        for (var i = {}, n = {}, o = 0; o < e.length; o++) {
            var s = [e[o], e[(o + 1) % e.length]];
            i[o] = [W(e[o])];
            for (var r = 0; r < t.length; r++) {
                0 == o && (n[r] = [W(t[r])]);
                var a = [t[r], t[(r + 1) % t.length]],
                    l = S(s, a);
                if (l.onLine1 && l.onLine2) {
                    if (D(l, e[o])) i[o][0].isCrossPoint = !0, i[o][0].isOriginalPoint = !0, i[o][0].crossingLine = a;
                    else if (D(l, e[(o + 1) % e.length]));
                    else {
                        var c = W(l);
                        c.isCrossPoint = !0, c.crossingLine = a, c.distanceFromPreviousPoint = V(e[o], c);
                        for (var h = i[o].length - 1; i[o][h].distanceFromPreviousPoint && i[o][h].distanceFromPreviousPoint > c.distanceFromPreviousPoint;) h--;
                        D(i[o][h], c) || D(i[o][h + 1], c) || i[o].splice(h + 1, 0, c)
                    }
                    if (D(l, t[r])) n[r][0].isCrossPoint = !0, n[r][0].isOriginalPoint = !0, n[r][0].crossingLine = s;
                    else if (D(l, t[(r + 1) % t.length]));
                    else {
                        var u = W(l);
                        for (u.isCrossPoint = !0, u.crossingLine = s, u.distanceFromPreviousPoint = V(t[r], u), h = n[r].length - 1; n[r][h].distanceFromPreviousPoint && n[r][h].distanceFromPreviousPoint > u.distanceFromPreviousPoint;) h--;
                        D(n[r][h], u) || D(n[r][h + 1], u) || n[r].splice(h + 1, 0, u)
                    }
                }
            }
        }
        var d = [];
        for (o = 0; o < e.length; o++)
            for (r = 0; r < i[o].length; r++) {
                var p = i[o][r];
                d.push(p)
            }
        var m = [],
            f = null,
            g = null,
            v = null,
            C = null,
            y = null,
            _ = null,
            b = 0;
        for (o = 0; o < t.length; o++)
            for (r = 0; r < n[o].length; r++) {
                var w = n[o][r];
                m.push(w), null == f && w.isCrossPoint && (f = w, _ = b), b++
            }
        if (null == f) {
            if (M(t[0], e)) f = m[0], g = m, v = d, C = 0;
            else {
                if (!M(e[0], t)) return [];
                f = d[0], g = d, v = m, C = 0
            }
        } else g = m, v = d, C = _;
        var x = [f],
            E = !1;
        if (f.isCrossPoint) {
            E = !M(k(C, g), v)
        } else E = !1;
        if (E) {
            var T = g;
            g = v, v = T, C = U(g, function(e) {
                return D(f, e)
            })
        }
        for (y = g[(C + 1) % g.length], C = (C + 1) % g.length; !D(y, f);) {
            if (x.push(y), y.isCrossPoint) {
                if (y.crossingLine && y.isOriginalPoint) {
                    var O = L(C, g),
                        P = k(C, g);
                    if (j(O, y.crossingLine) == j(P, y.crossingLine));
                    else {
                        var T = g;
                        g = v, v = T
                    }
                } else {
                    var T = g;
                    g = v, v = T
                }
                C = U(g, function(e) {
                    return D(y, e)
                })
            }
            C = (C + 1) % g.length, y = g[C]
        }
        return x
    }

    function L(e, t) {
        var i = t[e],
            n = (t.length + e - 1) % t.length,
            o = t[n];
        return {
            x: (i.x + o.x) / 2,
            y: (i.y + o.y) / 2
        }
    }

    function k(e, t) {
        var i = t[e],
            n = (e + 1) % t.length,
            o = t[n];
        return {
            x: (i.x + o.x) / 2,
            y: (i.y + o.y) / 2
        }
    }

    function I(e) {
        for (var t = 0, i = [], n = [], o = 0; o < e.length; o++) {
            var s = e[o],
                r = e[(o + 1) % e.length];
            D(s, r) || (i.push(s), n.splice(0, 0, s)), t += (r.x - s.x) * (r.y + s.y)
        }
        return t > 0 ? e : n
    }

    function M(e, t, i) {
        for (var n = [e, {
                x: e.x,
                y: e.y + 1
            }], o = 0, s = 0, r = 0; r < t.length; r++) {
            var a = [t[r], t[(r + 1) % t.length]],
                l = S(n, a);
            if (l.onLine2) {
                if (D(e, l)) return !i;
                l.y > e.y ? o++ : s++
            }
        }
        return o % 2 != 0 && s % 2 != 0
    }

    function S(e, t, i, n) {
        return P(e[0].x, e[0].y, e[1].x, e[1].y, t[0].x, t[0].y, t[1].x, t[1].y, i, n)
    }

    function P(e, t, i, n, o, s, r, a, l, c) {
        var h, u, d, p, m, f = {
            x: null,
            y: null,
            onLine1: !1,
            onLine2: !1
        };
        return 0 == (h = (a - s) * (i - e) - (r - o) * (n - t)) ? f : (u = t - s, d = e - o, p = (r - o) * u - (a - s) * d, m = (i - e) * u - (n - t) * d, u = p / h, d = m / h, f.x = e + u * (i - e), f.y = t + u * (n - t), !l && N(u, 0) && (f.onLine1 = !0), c && N(u, 1) && (f.onLine1 = !0), A(u, 0) && H(u, 1) && (f.onLine1 = !0), !l && N(d, 0) && (f.onLine2 = !0), c && N(d, 1) && (f.onLine2 = !0), A(d, 0) && H(d, 1) && (f.onLine2 = !0), f)
    }

    function j(e, t) {
        var i = t[0],
            n = t[1];
        return (n.x - i.x) * (e.y - i.y) - (n.y - i.y) * (e.x - i.x) > 0
    }

    function D(e, t) {
        return !!e && (!!t && N(V(e, t), 0))
    }

    function N(e, t) {
        return Math.abs(t - e) < 1e-14
    }

    function A(e, t) {
        return !N(e, t) && e > t
    }

    function H(e, t) {
        return !N(e, t) && e < t
    }

    function V(e, t) {
        return Math.pow(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2), .5)
    }

    function W(e) {
        return jQuery.noConflict().extend({}, e)
    }

    function B(e, t) {
        return jQuery.noConflict().grep(e, t)[0]
    }

    function U(e, t) {
        var i = B(e, t);
        return e.indexOf(i)
    }

    function R(e) {
        var t = e.slice(0, Math.min(4, e.size)),
            i = ni.defer(),
            n = new FileReader;
        return n.addEventListener("load", function() {
            i.resolve(1347093252 === new DataView(n.result).getUint32(0, !1))
        }), n.addEventListener("error", function() {
            i.reject(n.error)
        }), n.readAsArrayBuffer(t), i.promise
    }

    function F(e) {
        var t = ni.defer(),
            i = new FileReader;
        return i.addEventListener("load", function() {
            t.resolve(i.result)
        }), i.addEventListener("error", function() {
            t.reject(i.error)
        }), i.readAsText(e), t.promise
    }

    function K(e, t, i, n) {
        t.getData(new oi.TextWriter, function(e) {
            i.kml = Ei.parseFromString(e, "application/xml"), n.resolve()
        })
    }

    function z(e, t, i, n) {
        var o = It(xi.detectFromFilename(t.filename), "application/octet-stream");
        t.getData(new oi.Data64URIWriter(o), function(e) {
            i[t.filename] = e, n.resolve()
        })
    }

    function G(e, t, i, n) {
        for (var o = n.keys, s = new ii("."), r = e.querySelectorAll(t), a = 0; a < r.length; a++) {
            var l = r[a],
                c = l.getAttribute(i),
                h = new ii(c).resolve(s).toString(),
                u = o.indexOf(h);
            if (-1 !== u) {
                var d = o[u];
                l.setAttribute(i, n[d]), "a" === t && null === l.getAttribute("download") && l.setAttribute("download", d)
            }
        }
    }

    function q(e, t) {
        return Mt(t) && new ii(e).isAbsolute() && (e = t.getURL(e)), e
    }

    function J(e, t, i, n) {
        var o = te(e, "id");
        o = Mt(o) && 0 !== o.length ? o : kt(), Mt(i) && (o = i + o);
        var s = t.getById(o);
        return Mt(s) && (o = kt(), Mt(i) && (o = i + o)), s = t.add(new hi({
            id: o
        })), Mt(s.kml) || (s.addProperty("kml"), s.addProperty("layerId"), s.kml = new tt, s.layerId = n), s
    }

    function X(e) {
        return Mt(e) && Mt(e.id) && 0 !== e.id.length ? e.id : kt()
    }

    function Y(e, t) {
        return "absolute" === e || "relativeToGround" === e || "relativeToSeaFloor" === t
    }

    function Q(e) {
        if (!Mt(e)) return xt.fromDegrees(0, 0, 0);
        var t = e.match(/[^\s,\n]+/g);
        if (!Mt(t)) return xt.fromDegrees(0, 0, 0);
        var i = parseFloat(t[0]),
            n = parseFloat(t[1]),
            o = parseFloat(t[2]);
        return i = isNaN(i) ? 0 : i, n = isNaN(n) ? 0 : n, o = isNaN(o) ? 0 : o, xt.fromDegrees(i, n, o)
    }

    function Z(e) {
        if (Mt(e)) {
            var t = e.textContent.match(/[^\s\n]+/g);
            if (Mt(t)) {
                for (var i = t.length, n = new Array(i), o = 0, s = 0; s < i; s++) n[o++] = Q(t[s]);
                return n
            }
        }
    }

    function ee(e, t) {
        if (Mt(e)) {
            var i = e.getAttribute(t);
            if (null !== i) {
                var n = parseFloat(i);
                return isNaN(n) ? void 0 : n
            }
        }
    }

    function te(e, t) {
        if (Mt(e)) {
            var i = e.getAttribute(t);
            return null !== i ? i : void 0
        }
    }

    function ie(e, t, i) {
        if (Mt(e))
            for (var n = e.childNodes, o = n.length, s = 0; s < o; s++) {
                var r = n[s];
                if (r.localName === t && -1 !== i.indexOf(r.namespaceURI)) return r
            }
    }

    function ne(e, t, i) {
        if (Mt(e)) {
            for (var n = [], o = e.getElementsByTagNameNS("*", t), s = o.length, r = 0; r < s; r++) {
                var a = o[r];
                a.localName === t && -1 !== i.indexOf(a.namespaceURI) && n.push(a)
            }
            return n
        }
    }

    function oe(e, t, i) {
        if (!Mt(e)) return [];
        for (var n = [], o = e.childNodes, s = o.length, r = 0; r < s; r++) {
            var a = o[r];
            a.localName === t && -1 !== i.indexOf(a.namespaceURI) && n.push(a)
        }
        return n
    }

    function se(e, t, i) {
        var n = ie(e, t, i);
        if (Mt(n)) {
            var o = parseFloat(n.textContent);
            return isNaN(o) ? void 0 : o
        }
    }

    function re(e, t, i) {
        var n = ie(e, t, i);
        if (Mt(n)) return n.textContent.trim()
    }

    function ae(e, t, i) {
        var n = ie(e, t, i);
        if (Mt(n)) {
            var o = n.textContent.trim();
            return "1" === o || /^true$/i.test(o)
        }
    }

    function le(e, t, i, n) {
        if (Mt(e)) {
            var o = !1;
            if (Mt(n)) {
                var s = n[e];
                if (Mt(s)) o = !0, e = s;
                else {
                    s = n[Nt(e, i)], Mt(s) && (o = !0, e = s)
                }
            }
            return !o && Mt(i) && (e = Nt(e, Nt(i)), e = q(e, t)), e
        }
    }

    function ce(e, t) {
        if (Mt(e) && !/^\s*$/gm.test(e)) {
            "#" === e[0] && (e = e.substring(1));
            var i = parseInt(e.substring(0, 2), 16) / 255,
                n = parseInt(e.substring(2, 4), 16) / 255,
                o = parseInt(e.substring(4, 6), 16) / 255,
                s = parseInt(e.substring(6, 8), 16) / 255;
            return t ? (s > 0 ? Ni.maximumRed = s : Ni.red = 0, o > 0 ? Ni.maximumGreen = o : Ni.green = 0, n > 0 ? Ni.maximumBlue = n : Ni.blue = 0, Ni.alpha = i, Lt.fromRandom(Ni)) : new Lt(s, o, n, i)
        }
    }

    function he(e, t, i) {
        var n = re(e, t, i);
        if (Mt(n)) return ce(n, "random" === re(e, "colorMode", i))
    }

    function ue(e) {
        var t = ie(e, "TimeStamp", Di.kmlgx),
            i = re(t, "when", Di.kmlgx);
        if (Mt(t) && Mt(i) && 0 !== i.length) {
            var n = $t.fromIso8601(i),
                o = new Xt;
            return o.addInterval(new Jt({
                start: n,
                stop: Vt.MAXIMUM_VALUE
            })), o
        }
    }

    function de(e) {
        var t = ie(e, "TimeSpan", Di.kmlgx);
        if (Mt(t)) {
            var i, n = ie(t, "begin", Di.kmlgx),
                o = Mt(n) ? $t.fromIso8601(n.textContent) : void 0,
                s = ie(t, "end", Di.kmlgx),
                r = Mt(s) ? $t.fromIso8601(s.textContent) : void 0;
            if (Mt(o) && Mt(r)) {
                if ($t.lessThan(r, o)) {
                    var a = o;
                    o = r, r = a
                }
                i = new Xt, i.addInterval(new Jt({
                    start: o,
                    stop: r
                }))
            } else Mt(o) ? (i = new Xt, i.addInterval(new Jt({
                start: o,
                stop: Vt.MAXIMUM_VALUE
            }))) : Mt(r) && (i = new Xt, i.addInterval(new Jt({
                start: Vt.MINIMUM_VALUE,
                stop: r
            })));
            return i
        }
    }

    function pe() {
        var e = new si;
        return e.width = Oi, e.height = Oi, e.scaleByDistance = new Ft(Li, ki, Ii, Mi), e.pixelOffsetScaleByDistance = new Ft(Li, ki, Ii, Mi), e
    }

    function me() {
        var e = new fi;
        return e.outline = !0, e.outlineColor = Lt.WHITE, e
    }

    function fe() {
        var e = new pi;
        return e.translucencyByDistance = new Ft(3e6, 1, 5e6, 0), e.pixelOffset = new wt(17, 0), e.horizontalOrigin = Qt.LEFT, e.font = "16px sans-serif", e.style = Zt.FILL_AND_OUTLINE, e
    }

    function ge(e, t, i, n, o) {
        var s = re(e, "href", Di.kml);
        if (Mt(s) && 0 !== s.length) {
            if (0 === s.indexOf("root://icons/palette-")) {
                var r = s.charAt(21),
                    a = It(se(e, "x", Di.gx), 0),
                    l = It(se(e, "y", Di.gx), 0);
                a = Math.min(a / 32, 7), l = 7 - Math.min(l / 32, 7);
                s = "https://maps.google.com/mapfiles/kml/pal" + r + "/icon" + (8 * l + a) + ".png"
            }
            if (s = le(s, t._proxy, i, n), o) {
                var c = re(e, "refreshMode", Di.kml),
                    h = re(e, "viewRefreshMode", Di.kml);
                "onInterval" === c || "onExpire" === c ? console.log("KML - Unsupported Icon refreshMode: " + c) : "onStop" !== h && "onRegion" !== h || console.log("KML - Unsupported Icon viewRefreshMode: " + h);
                var u = It(re(e, "viewBoundScale", Di.kml), 1),
                    d = "onStop" === h ? "BBOX=[bboxWest],[bboxSouth],[bboxEast],[bboxNorth]" : "",
                    p = It(re(e, "viewFormat", Di.kml), d),
                    m = re(e, "httpQuery", Di.kml),
                    f = Ke(p, m),
                    g = Wt(s, f, !1);
                return ze(t._camera, t._canvas, g, u, t._lastCameraView.bbox)
            }
            return s
        }
    }

    function ve(e, t, i, n, o) {
        var s = se(t, "scale", Di.kml),
            r = se(t, "heading", Di.kml),
            a = he(t, "color", Di.kml),
            l = ie(t, "Icon", Di.kml),
            c = ge(l, e, n, o, !1),
            h = se(l, "x", Di.gx),
            u = se(l, "y", Di.gx),
            d = se(l, "w", Di.gx),
            p = se(l, "h", Di.gx),
            m = ie(t, "hotSpot", Di.kml),
            f = ee(m, "x"),
            g = ee(m, "y"),
            v = te(m, "xunits"),
            C = te(m, "yunits"),
            y = i.billboard;
        Mt(y) || (y = pe(), i.billboard = y), y.image = c, y.scale = s, y.color = a, (Mt(h) || Mt(u) || Mt(d) || Mt(p)) && (y.imageSubRegion = new bt(h, u, d, p)), Mt(r) && 0 !== r && (y.rotation = Rt.toRadians(-r), y.alignedAxis = xt.UNIT_Z), s = It(s, 1);
        var _, b;
        Mt(f) && ("pixels" === v ? _ = -f * s : "insetPixels" === v ? _ = (f - Oi) * s : "fraction" === v && (_ = -f * Oi * s), _ += .5 * Oi * s), Mt(g) && ("pixels" === C ? b = g * s : "insetPixels" === C ? b = (-g + Oi) * s : "fraction" === C && (b = g * Oi * s), b -= .5 * Oi * s), (Mt(_) || Mt(b)) && (y.pixelOffset = new wt(_, b))
    }

    function Ce(e, t, i, n, o) {
        for (var s = 0, r = t.childNodes.length; s < r; s++) {
            var a = t.childNodes.item(s);
            if ("IconStyle" === a.localName) ve(e, a, i, n, o);
            else if ("LabelStyle" === a.localName) {
                var l = i.label;
                Mt(l) || (l = fe(), i.label = l), l.scale = It(se(a, "scale", Di.kml), l.scale), l.fillColor = It(he(a, "color", Di.kml), l.fillColor), l.text = i.name
            } else if ("LineStyle" === a.localName) {
                var c = i.polyline;
                Mt(c) || (c = new gi, i.polyline = c), c.width = se(a, "width", Di.kml), c.material = he(a, "color", Di.kml), Mt(he(a, "outerColor", Di.gx)) && console.log("KML - gx:outerColor is not supported in a LineStyle"), Mt(se(a, "outerWidth", Di.gx)) && console.log("KML - gx:outerWidth is not supported in a LineStyle"), Mt(se(a, "physicalWidth", Di.gx)) && console.log("KML - gx:physicalWidth is not supported in a LineStyle"), Mt(ae(a, "labelVisibility", Di.gx)) && console.log("KML - gx:labelVisibility is not supported in a LineStyle")
            } else if ("PolyStyle" === a.localName) {
                var h = i.polygon;
                Mt(h) || (h = me(), i.polygon = h), h.material = It(he(a, "color", Di.kml), h.material), h.fill = It(ae(a, "fill", Di.kml), h.fill), h.outline = It(ae(a, "outline", Di.kml), h.outline)
            } else if ("BalloonStyle" === a.localName) {
                var u = It(ce(re(a, "bgColor", Di.kml)), Lt.WHITE),
                    d = It(ce(re(a, "textColor", Di.kml)), Lt.BLACK),
                    p = re(a, "text", Di.kml);
                i.addProperty("balloonStyle"), i.balloonStyle = {
                    bgColor: u,
                    textColor: d,
                    text: p
                }
            } else if ("ListStyle" === a.localName) {
                var m = re(a, "listItemType", Di.kml);
                "radioFolder" !== m && "checkOffOnly" !== m || console.log("KML - Unsupported ListStyle with listItemType: " + m)
            }
        }
    }

    function ye(e, t, i, n, o, s) {
        for (var r, a = new hi, l = -1, c = i.childNodes, h = c.length, u = 0; u < h; u++) {
            var d = c[u];
            "Style" !== d.localName && "StyleMap" !== d.localName || (l = u)
        }
        if (-1 !== l) {
            var p = c[l];
            if ("Style" === p.localName) Ce(t, p, a, o, s);
            else
                for (var m = oe(p, "Pair", Di.kml), f = 0; f < m.length; f++) {
                    var g = m[f],
                        v = re(g, "key", Di.kml);
                    if ("normal" === v) {
                        var C = re(g, "styleUrl", Di.kml);
                        if (Mt(C)) r = n.getById(C), Mt(r) || (r = n.getById("#" + C)), Mt(r) && a.merge(r);
                        else {
                            var y = ie(g, "Style", Di.kml);
                            Ce(t, y, a, o, s)
                        }
                    } else console.log("KML - Unsupported StyleMap key: " + v)
                }
        }
        var _ = re(i, "styleUrl", Di.kml);
        if (Mt(_)) {
            var b = _;
            if ("#" !== _[0] && -1 !== _.indexOf("#")) {
                var w = _.split("#"),
                    x = w[0];
                Mt(o) && (x = Nt(x, Nt(o))), b = x + "#" + w[1]
            }
            r = n.getById(b), Mt(r) || (r = n.getById("#" + b)), Mt(r) && a.merge(r)
        }
        return a
    }

    function _e(e, t, i) {
        return Ut(q(t, e._proxy)).then(function(n) {
            return be(e, n, i, t, !0)
        })
    }

    function be(e, t, i, n, o, s) {
        var r, a, l, c, h = ne(t, "Style", Di.kml);
        if (Mt(h)) {
            var u = h.length;
            for (r = 0; r < u; r++) c = h[r], a = te(c, "id"), Mt(a) && (a = "#" + a, o && Mt(n) && (a = n + a), Mt(i.getById(a)) || (l = new hi({
                id: a
            }), i.add(l), Ce(e, c, l, n, s)))
        }
        var d = ne(t, "StyleMap", Di.kml);
        if (Mt(d)) {
            var p = d.length;
            for (r = 0; r < p; r++) {
                var m = d[r];
                if (a = te(m, "id"), Mt(a))
                    for (var f = oe(m, "Pair", Di.kml), g = 0; g < f.length; g++) {
                        var v = f[g],
                            C = re(v, "key", Di.kml);
                        if ("normal" === C && (a = "#" + a, o && Mt(n) && (a = n + a), !Mt(i.getById(a)))) {
                            l = i.getOrCreateEntity(a);
                            var y = re(v, "styleUrl", Di.kml);
                            if (Mt(y)) {
                                "#" !== y[0] && (y = "#" + y), o && Mt(n) && (y = n + y);
                                var _ = i.getById(y);
                                Mt(_) && l.merge(_)
                            } else c = ie(v, "Style", Di.kml), Ce(e, c, l, n, s)
                        }
                    }
            }
        }
        var b = {},
            w = [],
            x = t.getElementsByTagName("styleUrl"),
            E = x.length;
        for (r = 0; r < E; r++) {
            var T = x[r].textContent;
            if ("#" !== T[0]) {
                var O = T.split("#");
                if (2 === O.length) {
                    var L = O[0];
                    Mt(b[L]) || (Mt(n) && (L = Nt(L, Nt(n))), w.push(_e(e, L, i, n)))
                }
            }
        }
        return w
    }

    function we(e, t, i) {
        var n = new yi(e, t.id, ["position"]),
            o = new bi(t.position);
        t.polyline = Mt(i.polyline) ? i.polyline.clone() : new gi, t.polyline.positions = new vi([n, o])
    }

    function xe(e, t) {
        return !Mt(e) && !Mt(t) || "clampToGround" === e ? Yt.CLAMP_TO_GROUND : "relativeToGround" === e ? Yt.RELATIVE_TO_GROUND : "absolute" === e ? Yt.NONE : "clampToSeaFloor" === t ? (console.log("KML - <gx:altitudeMode>:clampToSeaFloor is currently not supported, using <kml:altitudeMode>:clampToGround."), Yt.CLAMP_TO_GROUND) : "relativeToSeaFloor" === t ? (console.log("KML - <gx:altitudeMode>:relativeToSeaFloor is currently not supported, using <kml:altitudeMode>:relativeToGround."), Yt.RELATIVE_TO_GROUND) : (Mt(e) ? console.log("KML - Unknown <kml:altitudeMode>:" + e + ", using <kml:altitudeMode>:CLAMP_TO_GROUND.") : console.log("KML - Unknown <gx:altitudeMode>:" + t + ", using <kml:altitudeMode>:CLAMP_TO_GROUND."), Yt.CLAMP_TO_GROUND)
    }

    function Ee(e, t, i) {
        return "relativeToSeaFloor" === i || "absolute" === t || "relativeToGround" === t ? e : ((Mt(t) && "clampToGround" !== t || Mt(i) && "clampToSeaFloor" !== i) && console.log("KML - Unknown altitudeMode: " + It(t, i)), new bi(e))
    }

    function Te(e, t, i) {
        if (Mt(e)) {
            if ("relativeToSeaFloor" === i || "absolute" === t || "relativeToGround" === t) return e;
            (Mt(t) && "clampToGround" !== t || Mt(i) && "clampToSeaFloor" !== i) && console.log("KML - Unknown altitudeMode: " + It(t, i));
            for (var n = e.length, o = 0; o < n; o++) {
                var s = e[o];
                jt.WGS84.scaleToGeodeticSurface(s, s)
            }
            return e
        }
    }

    function Oe(e, t, i, n) {
        var o = t.label;
        Mt(o) || (o = Mt(i.label) ? i.label.clone() : fe(), t.label = o), o.text = t.name;
        var s = t.billboard;
        Mt(s) || (s = Mt(i.billboard) ? i.billboard.clone() : pe(), t.billboard = s), Mt(s.image) || (s.image = e._pinBuilder.fromColor(Lt.YELLOW, 64));
        var r = 1;
        Mt(s.scale) && (r = s.scale.getValue(), 0 !== r ? o.pixelOffset = new wt(16 * r + 1, 0) : (o.pixelOffset = void 0, o.horizontalOrigin = void 0)), Mt(n) && e._clampToGround && (s.heightReference = n, o.heightReference = n)
    }

    function Le(e, t, i) {
        var n = t.path;
        Mt(n) || (n = new mi, n.leadTime = 0, t.path = n);
        var o = i.polyline;
        Mt(o) && (n.material = o.material, n.width = o.width)
    }

    function ke(e, t, i, n, o) {
        var s = re(i, "coordinates", Di.kml),
            r = re(i, "altitudeMode", Di.kml),
            a = re(i, "altitudeMode", Di.gx),
            l = ae(i, "extrude", Di.kml),
            c = Q(s);
        return n.position = c, Oe(e, n, o, xe(r, a)), l && Y(r, a) && we(t, n, o), !0
    }

    function Ie(e, t, i, n, o) {
        var s = ie(i, "coordinates", Di.kml),
            r = re(i, "altitudeMode", Di.kml),
            a = re(i, "altitudeMode", Di.gx),
            l = ae(i, "extrude", Di.kml),
            c = ae(i, "tessellate", Di.kml),
            h = Y(r, a);
        Mt(se(i, "drawOrder", Di.gx)) && console.log("KML - gx:drawOrder is not supported in LineStrings");
        var u = Z(s),
            d = o.polyline;
        if (h && l) {
            var p = new WallGraphics;
            n.wall = p, p.positions = u;
            var m = o.polygon;
            Mt(m) && (p.fill = m.fill, p.outline = m.outline, p.material = m.material), Mt(d) && (p.outlineColor = Mt(d.material) ? d.material.color : Lt.WHITE, p.outlineWidth = d.width)
        } else if (e._clampToGround && !h && c) {
            var f = new ai;
            n.corridor = f, f.positions = u, Mt(d) ? (f.material = Mt(d.material) ? d.material.color.getValue(Vt.MINIMUM_VALUE) : Lt.WHITE, f.width = It(d.width, 1)) : (f.material = Lt.WHITE, f.width = 1)
        } else d = Mt(d) ? d.clone() : new gi, n.polyline = d, d.positions = Te(u, r, a), c && !h || (d.followSurface = !1);
        return !0
    }

    function Me(e, t, i, n, o) {
        var s = ie(i, "outerBoundaryIs", Di.kml),
            r = ie(s, "LinearRing", Di.kml),
            a = ie(r, "coordinates", Di.kml),
            l = Z(a),
            c = ae(i, "extrude", Di.kml),
            h = re(i, "altitudeMode", Di.kml),
            u = re(i, "altitudeMode", Di.gx),
            d = Y(h, u),
            p = Mt(o.polygon) ? o.polygon.clone() : me(),
            m = o.polyline;
        if (Mt(m) && (p.outlineColor = Mt(m.material) ? m.material.color : Lt.WHITE, p.outlineWidth = m.width), n.polygon = p, d ? (p.perPositionHeight = !0, p.extrudedHeight = c ? 0 : void 0) : e._clampToGround || (p.height = 0), Mt(l)) {
            for (var f = new zt(l), g = oe(i, "innerBoundaryIs", Di.kml), v = 0; v < g.length; v++) {
                r = oe(g[v], "LinearRing", Di.kml);
                for (var C = 0; C < r.length; C++) a = ie(r[C], "coordinates", Di.kml), l = Z(a), Mt(l) && f.holes.push(new zt(l))
            }
            p.hierarchy = f
        }
        return !0
    }

    function Se(e, t, i, n, o) {
        var s = re(i, "altitudeMode", Di.kml),
            r = re(i, "altitudeMode", Di.gx),
            a = oe(i, "coord", Di.gx),
            l = oe(i, "angles", Di.gx),
            c = oe(i, "when", Di.kml),
            h = ae(i, "extrude", Di.kml),
            u = Y(s, r);
        l.length > 0 && console.log("KML - gx:angles are not supported in gx:Tracks");
        for (var d = Math.min(a.length, c.length), p = [], m = [], f = 0; f < d; f++) {
            var g = Q(a[f].textContent);
            p.push(g), m.push($t.fromIso8601(c[f].textContent))
        }
        var v = new _i;
        return v.addSamples(m, p), n.position = v, Oe(e, n, o, xe(s, r)), Le(e, n, o), n.availability = new Xt, c.length > 0 && n.availability.addInterval(new Jt({
            start: m[0],
            stop: m[m.length - 1]
        })), u && h && we(t, n, o), !0
    }

    function Pe(e, t, i, n, o, s, r, a, l) {
        var c = e[0],
            h = e[e.length - 1],
            u = new _i;
        u.addSamples(e, t), i.intervals.addInterval(new Jt({
            start: c,
            stop: h,
            isStartIncluded: l,
            isStopIncluded: l,
            data: Ee(u, r, a)
        })), n.addInterval(new Jt({
            start: c,
            stop: h,
            isStartIncluded: l,
            isStopIncluded: l
        })), o.intervals.addInterval(new Jt({
            start: c,
            stop: h,
            isStartIncluded: l,
            isStopIncluded: l,
            data: s
        }))
    }

    function je(e, t, i, n, o) {
        for (var s, r, a, l = ae(i, "interpolate", Di.gx), c = oe(i, "Track", Di.gx), h = !1, u = new wi, d = new Xt, p = new ri, m = 0, f = c.length; m < f; m++) {
            var g = c[m],
                v = oe(g, "when", Di.kml),
                C = oe(g, "coord", Di.gx),
                y = re(g, "altitudeMode", Di.kml),
                _ = re(g, "altitudeMode", Di.gx),
                b = Y(y, _),
                w = ae(g, "extrude", Di.kml),
                x = Math.min(C.length, v.length),
                E = [];
            s = [];
            for (var T = 0; T < x; T++) {
                var O = Q(C[T].textContent);
                E.push(O), s.push($t.fromIso8601(v[T].textContent))
            }
            l && (Mt(r) && Pe([r, s[0]], [a, E[0]], p, d, u, !1, "absolute", void 0, !1), r = s[x - 1], a = E[E.length - 1]), Pe(s, E, p, d, u, b && w, y, _, !0), h = h || b && w
        }
        return n.availability = d, n.position = p, Oe(e, n, o), Le(e, n, o), h && (we(t, n, o), n.polyline.show = u), !0
    }

    function De(e, t, i, n, o, s) {
        for (var r = i.childNodes, a = !1, l = 0, c = r.length; l < c; l++) {
            var h = r.item(l),
                u = Hi[h.localName];
            if (Mt(u)) {
                var d = J(h, t, s, e._layerId);
                d.parent = n, d.name = n.name, d.availability = n.availability, d.description = n.description, d.kml = n.kml, u(e, t, h, d, o) && (a = !0)
            }
        }
        return a
    }

    function Ne(e, t) {
        var i = ie(e, "ExtendedData", Di.kml);
        if (Mt(i)) {
            Mt(ie(i, "SchemaData", Di.kml)) && console.log("KML - SchemaData is unsupported"), Mt(te(i, "xmlns:prefix")) && console.log("KML - ExtendedData with xmlns:prefix is unsupported");
            var n = {},
                o = oe(i, "Data", Di.kml);
            if (Mt(o))
                for (var s = o.length, r = 0; r < s; r++) {
                    var a = o[r],
                        l = te(a, "name");
                    Mt(l) && (n[l] = {
                        displayName: re(a, "displayName", Di.kml),
                        value: re(a, "value", Di.kml)
                    })
                }
            t.kml.extendedData = n
        }
    }

    function Ae(e, t, i, n) {
        var o, s, r, a = t.kml,
            l = a.extendedData,
            c = re(e, "description", Di.kml),
            h = It(t.balloonStyle, i.balloonStyle),
            u = Lt.WHITE,
            d = Lt.BLACK,
            p = c;
        Mt(h) && (u = It(h.bgColor, Lt.WHITE), d = It(h.textColor, Lt.BLACK), p = It(h.text, c));
        var m;
        if (Mt(p)) {
            if (p = p.replace("$[name]", It(t.name, "")), p = p.replace("$[description]", It(c, "")), p = p.replace("$[address]", It(a.address, "")), p = p.replace("$[Snippet]", It(a.snippet, "")), p = p.replace("$[id]", t.id), p = p.replace("$[geDirections]", ""), Mt(l)) {
                var f = p.match(/\$\[.+?\]/g);
                if (null !== f)
                    for (o = 0; o < f.length; o++) {
                        var g = f[o],
                            v = g.substr(2, g.length - 3),
                            C = /\/displayName$/.test(v);
                        v = v.replace(/\/displayName$/, ""), m = l[v], Mt(m) && (m = C ? m.displayName : m.value), Mt(m) && (p = p.replace(g, It(m, "")))
                    }
            }
        } else if (Mt(l) && (r = Object.keys(l), r.length > 0)) {
            for (p = '<table class="cesium-infoBox-defaultTable cesium-infoBox-defaultTable-lighter"><tbody>', o = 0; o < r.length; o++) s = r[o], m = l[s], p += "<tr><th>" + It(m.displayName, s) + "</th><td>" + It(m.value, "") + "</td></tr>";
            p += "</tbody></table>"
        }
        if (Mt(p)) {
            p = Ti.link(p), Ai.innerHTML = p;
            var y = Ai.querySelectorAll("a");
            for (o = 0; o < y.length; o++) y[o].setAttribute("target", "_blank");
            Mt(n) && n.keys.length > 1 && (G(Ai, "a", "href", n), G(Ai, "img", "src", n));
            var _ = '<div class="cesium-infoBox-description-lighter" style="';
            _ += "overflow:auto;", _ += "word-wrap:break-word;", _ += "background-color:" + u.toCssColorString() + ";", _ += "color:" + d.toCssColorString() + ";", _ += '">', _ += Ai.innerHTML + "</div>", Ai.innerHTML = "", t.description = _
        }
    }

    function He(e, t, i, n, o, s, r, a, l) {
        function c(e) {
            return !e || e.show && c(e.parent)
        }
        var h = J(i, n, l, e._layerId),
            u = h.kml,
            d = ye(h, e, i, o, s, r),
            p = re(i, "name", Di.kml);
        h.name = p, h.parent = t;
        var m = de(i);
        Mt(m) || (m = ue(i)), h.availability = m, Ze(h);
        var f = ae(i, "visibility", Di.kml);
        h.show = c(t) && It(f, !0);
        var g = ie(i, "author", Di.atom),
            v = u.author;
        v.name = re(g, "name", Di.atom), v.uri = re(g, "uri", Di.atom), v.email = re(g, "email", Di.atom);
        var C = ie(i, "link", Di.atom),
            y = u.link;
        return y.href = te(C, "href"), y.hreflang = te(C, "hreflang"), y.rel = te(C, "rel"), y.type = te(C, "type"), y.title = te(C, "title"), y.length = te(C, "length"), u.address = re(i, "address", Di.kml), u.phoneNumber = re(i, "phoneNumber", Di.kml), u.snippet = re(i, "Snippet", Di.kml), Ne(i, h), Ae(i, h, d, r), Mt(ie(i, "Camera", Di.kml)) && console.log("KML - Unsupported view: Camera"), Mt(ie(i, "LookAt", Di.kml)) && console.log("KML - Unsupported view: LookAt"), Mt(ie(i, "Region", Di.kml)) && console.log("KML - Placemark Regions are unsupported"), {
            entity: h,
            styleEntity: d
        }
    }

    function Ve(e, t, i, n, o, s, r) {
        var a = ie(i, "Location", Di.kml),
            l = se(a, "longitude", Di.kml),
            c = se(a, "latitude", Di.kml),
            h = se(a, "altitude", Di.kml),
            u = Cesium.Cartesian3.fromDegrees(l, c, h),
            d = ie(i, "Orientation", Di.kml),
            p = se(d, "heading", Di.kml);
        Mt(p) || (p = 0);
        var m = se(d, "tilt", Di.kml);
        Mt(m) || (m = 0);
        var f = se(d, "roll", Di.kml);
        Mt(f) || (f = 0);
        var g = Cesium.Math.toRadians(p),
            v = Cesium.Math.toRadians(m),
            C = Cesium.Math.toRadians(f);
        if ("0.8" == mt.parse_query_string("gltf_version", window.location.href)) var g = Cesium.Math.toRadians(p - 180),
            v = Cesium.Math.toRadians(180);
        var y = new Cesium.HeadingPitchRoll(g, v, C),
            _ = Cesium.Transforms.headingPitchRollQuaternion(u, y),
            b = ie(i, "Link", Di.kml),
            w = r.substring(0, r.lastIndexOf("/")),
            x = w.concat("/", re(b, "href", Di.kml).replace(".dae", ".gltf").trim());
        n.label = "", n.position = u, n.orientation = _, n.model = {
            uri: x,
            asynchronous: !1
        }
    }

    function We(e, t, i, n, o, s, r, a, l) {
        for (var c = Object.keys(Ri), h = c.length, u = 0; u < h; u++)
            for (var d = c[u], p = Ri[d], m = i.childNodes, f = m.length, g = 0; g < f; g++) {
                var v = m[g];
                v.localName !== d || -1 === Di.kml.indexOf(v.namespaceURI) && -1 === Di.gx.indexOf(v.namespaceURI) || p(e, t, v, n, o, s, r, a, l)
            }
    }

    function $e(e, t, i, n, o, s, r, a, l) {
        console.log("loading 3DCityDB KML Networklink files...");
        var c = s.substring(0, s.lastIndexOf("/")),
            h = new hi(X(i)),
            u = ie(i, "NetworkLink", Di.kml);
        if (void 0 !== u) {
            var d = ie(u, "Link", Di.kml),
                p = c.concat("/", re(d, "href", Di.kml).trim()),
                m = ie(ie(u, "Region", Di.kml), "LatLonAltBox", Di.kml),
                f = se(m, "west", Di.kml),
                g = se(m, "south", Di.kml),
                v = se(m, "east", Di.kml),
                C = se(m, "north", Di.kml);
            h._pathSubscription = {
                minX: f,
                minY: g,
                maxX: v,
                maxY: C,
                kmlUrl: p
            }, h.name = re(i, "name", Di.kml), n.add(h)
        } else t = new hi(X(i)), t.name = re(i, "name", Di.kml), n.add(t), We(e, t, i, n, o, s, r)
    }

    function Be(e, t, i, n, o, s, r, a, l) {
        for (var c = He(e, t, i, n, o, s, r, a, l), h = c.entity, u = c.styleEntity, d = !1, p = i.childNodes, m = 0, f = p.length; m < f && !d; m++) {
            var g = p.item(m),
                v = Hi[g.localName];
            Mt(v) && (v(e, n, g, h, u, h.id, s), d = !0)
        }
        d || (h.merge(u), Oe(e, h, u))
    }

    function Ue(e, t, i, n, o, s, r, a, l) {
        var c, h = He(e, t, i, n, o, s, r, a, l),
            u = h.entity,
            d = !1,
            p = Z(ie(i, "LatLonQuad", Di.gx));
        if (Mt(p)) c = me(), c.hierarchy = new zt(p), u.polygon = c, d = !0;
        else {
            c = new Ci, u.rectangle = c;
            var m = ie(i, "LatLonBox", Di.kml);
            if (Mt(m)) {
                var f = se(m, "west", Di.kml),
                    g = se(m, "south", Di.kml),
                    v = se(m, "east", Di.kml),
                    C = se(m, "north", Di.kml);
                Mt(f) && (f = Rt.negativePiToPi(Rt.toRadians(f))), Mt(g) && (g = Rt.clampToLatitudeRange(Rt.toRadians(g))), Mt(v) && (v = Rt.negativePiToPi(Rt.toRadians(v))), Mt(C) && (C = Rt.clampToLatitudeRange(Rt.toRadians(C))), c.coordinates = new Gt(f, g, v, C);
                var y = se(m, "rotation", Di.kml);
                Mt(y) && (c.rotation = Rt.toRadians(y))
            }
        }
        var _ = ie(i, "Icon", Di.kml),
            b = ge(_, e, s, r, !0);
        if (Mt(b)) {
            d && console.log("KML - gx:LatLonQuad Icon does not support texture projection.");
            var w = se(_, "x", Di.gx),
                x = se(_, "y", Di.gx),
                E = se(_, "w", Di.gx),
                T = se(_, "h", Di.gx);
            (Mt(w) || Mt(x) || Mt(E) || Mt(T)) && console.log("KML - gx:x, gx:y, gx:w, gx:h aren't supported for GroundOverlays"), c.material = b, c.material.color = he(i, "color", Di.kml), c.material.transparent = !0
        } else c.material = he(i, "color", Di.kml);
        var O = re(i, "altitudeMode", Di.kml);
        Mt(O) ? "absolute" === O ? c.height = se(i, "altitude", Di.kml) : "clampToGround" !== O && console.log("KML - Unknown altitudeMode: " + O) : (O = re(i, "altitudeMode", Di.gx), "relativeToSeaFloor" === O ? (console.log("KML - altitudeMode relativeToSeaFloor is currently not supported, treating as absolute."), c.height = se(i, "altitude", Di.kml)) : "clampToSeaFloor" === O ? console.log("KML - altitudeMode clampToSeaFloor is currently not supported, treating as clampToGround.") : Mt(O) && console.log("KML - Unknown altitudeMode: " + O))
    }

    function Re(e, t, i, n, o, s, r, a, l) {
        e._unsupportedNode.raiseEvent(e, t, i, n, o, s, r), console.log("KML - Unsupported feature: " + i.localName)
    }

    function Fe(e) {
        if (!Mt(e) || 0 === e.length) return "";
        var t = e[0];
        return "&" === t && e.splice(0, 1), "?" !== t && (e = "?" + e), e
    }

    function Ke(e, t) {
        var i = "";
        return (Mt(e) && e.length > 0 || Mt(t) && t.length > 0) && (i += Wt(Fe(e), Fe(t), !1)), i
    }

    function ze(e, t, i, n, o) {
        function s(e) {
            return e < -Rt.PI_OVER_TWO ? -Rt.PI_OVER_TWO : e > Rt.PI_OVER_TWO ? Rt.PI_OVER_TWO : e
        }

        function r(e) {
            return e > Rt.PI ? e - Rt.TWO_PI : e < -Rt.PI ? e + Rt.TWO_PI : e
        }
        if (Mt(e) && e._mode !== ei.MORPHING) {
            var a, l, c = jt.WGS84;
            if (o = It(o, Wi), Mt(t) && (Bi.x = .5 * t.clientWidth, Bi.y = .5 * t.clientHeight, a = e.pickEllipsoid(Bi, c, Ui)), Mt(a) ? l = c.cartesianToCartographic(a, $i) : (l = Gt.center(o, $i), a = c.cartographicToCartesian(l)), Mt(n) && !Rt.equalsEpsilon(n, 1, Rt.EPSILON9)) {
                var h = o.width * n * .5,
                    u = o.height * n * .5;
                o = new Gt(r(l.longitude - h), s(l.latitude - u), r(l.longitude + h), s(l.latitude + u))
            }
            i = i.replace("[bboxWest]", Rt.toDegrees(o.west).toString()), i = i.replace("[bboxSouth]", Rt.toDegrees(o.south).toString()), i = i.replace("[bboxEast]", Rt.toDegrees(o.east).toString()), i = i.replace("[bboxNorth]", Rt.toDegrees(o.north).toString());
            var d = Rt.toDegrees(l.longitude).toString(),
                p = Rt.toDegrees(l.latitude).toString();
            i = i.replace("[lookatLon]", d), i = i.replace("[lookatLat]", p), i = i.replace("[lookatTilt]", Rt.toDegrees(e.pitch).toString()), i = i.replace("[lookatHeading]", Rt.toDegrees(e.heading).toString()), i = i.replace("[lookatRange]", xt.distance(e.positionWC, a)), i = i.replace("[lookatTerrainLon]", d), i = i.replace("[lookatTerrainLat]", p), i = i.replace("[lookatTerrainAlt]", l.height.toString()), c.cartesianToCartographic(e.positionWC, $i), i = i.replace("[cameraLon]", Rt.toDegrees($i.longitude).toString()), i = i.replace("[cameraLat]", Rt.toDegrees($i.latitude).toString()), i = i.replace("[cameraAlt]", Rt.toDegrees($i.height).toString());
            var m = e.frustum,
                f = m.aspectRatio,
                g = "",
                v = "";
            if (Mt(f)) {
                var C = Rt.toDegrees(m.fov);
                f > 1 ? (g = C, v = C / f) : (v = C, g = C * f)
            }
            i = i.replace("[horizFov]", g.toString()), i = i.replace("[vertFov]", v.toString())
        } else i = i.replace("[bboxWest]", "-180"), i = i.replace("[bboxSouth]", "-90"), i = i.replace("[bboxEast]", "180"), i = i.replace("[bboxNorth]", "90"), i = i.replace("[lookatLon]", ""), i = i.replace("[lookatLat]", ""), i = i.replace("[lookatRange]", ""), i = i.replace("[lookatTilt]", ""), i = i.replace("[lookatHeading]", ""), i = i.replace("[lookatTerrainLon]", ""), i = i.replace("[lookatTerrainLat]", ""), i = i.replace("[lookatTerrainAlt]", ""), i = i.replace("[cameraLon]", ""), i = i.replace("[cameraLat]", ""), i = i.replace("[cameraAlt]", ""), i = i.replace("[horizFov]", ""), i = i.replace("[vertFov]", "");
        return Mt(t) ? (i = i.replace("[horizPixels]", t.clientWidth), i = i.replace("[vertPixels]", t.clientHeight)) : (i = i.replace("[horizPixels]", ""), i = i.replace("[vertPixels]", "")), i = i.replace("[terrainEnabled]", "1"), i = i.replace("[clientVersion]", "1"), i = i.replace("[kmlVersion]", "2.2"), i = i.replace("[clientName]", "Cesium"), i = i.replace("[language]", "English")
    }

    function Ge(e, t, i, n, o, s, r, a, l) {
        e._lookAt = {
            lat: se(i, "latitude", Di.kml),
            lon: se(i, "longitude", Di.kml),
            range: se(i, "range", Di.kml),
            tilt: se(i, "tilt", Di.kml),
            heading: se(i, "heading", Di.kml),
            altitude: se(i, "altitude", Di.kml)
        }
    }

    function qe(e, t, i, n, o, s, r, a, l) {
        var c = Ri[t.localName];
        Mt(c) ? c(e, i, t, n, o, s, r, a, l) : Re(e, i, t, n, o, s, r, a, l)
    }

    function Je(e, t, i, n, o, s) {
        t.removeAll();
        var r = [],
            a = i.documentElement,
            l = "Document" === a.localName ? a : ie(a, "Document", Di.kml),
            c = re(l, "name", Di.kml);
        !Mt(c) && Mt(n) && (c = Ht(n)), Mt(e._name) || (e._name = c);
        var h = new di(e);
        return ni.all(be(e, i, h, n, !1, o, s)).then(function() {
            var a = i.documentElement;
            if ("kml" === a.localName)
                for (var l = a.childNodes, c = 0; c < l.length; c++) {
                    var u = l[c];
                    if (Mt(Ri[u.localName])) {
                        a = u;
                        break
                    }
                }
            return t.suspendEvents(), qe(e, a, void 0, t, h, n, o, r, s), t.resumeEvents(), ni.all(r).then(function() {
                return i.documentElement
            })
        })
    }

    function Xe(e, t, i, n) {
        var o = ni.defer();
        return oi.createReader(new oi.BlobReader(i), function(i) {
            i.getEntries(function(s) {
                for (var r, a, l = [], c = {}, h = 0; h < s.length; h++) {
                    var u = s[h];
                    if (!u.directory) {
                        var d = ni.defer();
                        l.push(d.promise), /\.kml$/i.test(u.filename) ? Mt(r) && /\//i.test(u.filename) ? z(i, u, c, d) : (Mt(r) && z(i, r, c, a), r = u, a = d) : z(i, u, c, d)
                    }
                }
                Mt(r) && K(i, r, c, a), ni.all(l).then(function() {
                    return i.close(), Mt(c.kml) ? (c.keys = Object.keys(c), Je(e, t, c.kml, n, c)) : void o.reject(new qt("KMZ file does not contain a KML document."))
                }).then(o.resolve).otherwise(o.reject)
            })
        }, function(e) {
            o.reject(e)
        }), o.promise
    }

    function Ye(e, t, i, n) {
        n = It(n, It.EMPTY_OBJECT);
        var o = n.sourceUri,
            s = n.uriResolver,
            r = n.context,
            a = i;
        return "string" == typeof i && (a = Bt(q(i, e._proxy)), o = It(o, i)), ni(a).then(function(i) {
            return i instanceof Blob ? R(i).then(function(n) {
                return n ? Xe(e, t, i, o) : F(i).then(function(i) {
                    var n, a;
                    try {
                        n = Ei.parseFromString(i, "application/xml")
                    } catch (e) {
                        a = e.toString()
                    }
                    if (Mt(a) || n.body || "parsererror" === n.documentElement.tagName) {
                        var l = Mt(a) ? a : n.documentElement.firstChild.nodeValue;
                        throw l || (l = n.body.innerText), new qt(l)
                    }
                    return Je(e, t, n, o, s, r)
                })
            }) : Je(e, t, i, o, s, r)
        }).otherwise(function(t) {
            return e._error.raiseEvent(e, t), console.log(t), ni.reject(t)
        })
    }

    function Qe(e) {
        e = It(e, {});
        var t = e.camera,
            i = e.canvas;
        if (!Mt(t)) throw new Pt("options.camera is required.");
        if (!Mt(i)) throw new Pt("options.canvas is required.");
        this._changed = new Dt, this._error = new Dt, this._loading = new Dt, this._refresh = new Dt, this._unsupportedNode = new Dt, this._clock = void 0, this._entityCollection = new di(this), this._name = void 0, this._isLoading = !1, this._proxy = e.proxy, this._pinBuilder = new Kt, this._networkLinks = new _t, this._entityCluster = new ui, this._canvas = i, this._camera = t, this._lastCameraView = {
            position: Mt(t) ? xt.clone(t.positionWC) : void 0,
            direction: Mt(t) ? xt.clone(t.directionWC) : void 0,
            up: Mt(t) ? xt.clone(t.upWC) : void 0,
            bbox: Mt(t) ? t.computeViewRectangle() : Gt.clone(Gt.MAX_VALUE)
        }, this._layerId = e.layerId, this._id = Cesium.createGuid(), this._lookAt = null
    }

    function Ze(e) {
        var t = e.parent;
        if (Mt(t)) {
            var i = t.availability;
            if (Mt(i)) {
                var n = e.availability;
                Mt(n) ? n.intersect(i) : e.availability = i
            }
        }
    }

    function et(e, t, i, n, o) {
        return function(s) {
            function r(e) {
                v.remove(e);
                for (var t = e._children, i = t.length, n = 0; n < i; ++n) r(t[n])
            }
            if (n.contains(t.id)) {
                var a = !1,
                    l = ie(s, "NetworkLinkControl", Di.kml),
                    c = Mt(l),
                    h = 0;
                if (c) {
                    if (Mt(ie(l, "Update", Di.kml))) return console.log("KML - NetworkLinkControl updates aren't supported."), t.updating = !1, void n.remove(t.id);
                    t.cookie = It(re(l, "cookie", Di.kml), ""), h = It(se(l, "minRefreshPeriod", Di.kml), 0)
                }
                var u = $t.now(),
                    d = t.refreshMode;
                if (d === Vi.INTERVAL) Mt(l) && (t.time = Math.max(h, t.time));
                else if (d === Vi.EXPIRE) {
                    var p;
                    if (Mt(l) && (p = re(l, "expires", Di.kml)), Mt(p)) try {
                        var m = $t.fromIso8601(p),
                            f = $t.secondsDifference(m, u);
                        f > 0 && f < h && $t.addSeconds(u, h, m), t.time = m
                    } catch (e) {
                        console.log("KML - NetworkLinkControl expires is not a valid date"), a = !0
                    } else console.log("KML - refreshMode of onExpire requires the NetworkLinkControl to have an expires element"), a = !0
                }
                var g = t.entity,
                    v = e._entityCollection,
                    C = i.values;
                v.suspendEvents();
                for (var y = v.values.slice(), _ = 0; _ < y.length; ++_) {
                    var b = y[_];
                    b.parent === g && (b.parent = void 0, r(b))
                }
                for (v.resumeEvents(), v.suspendEvents(), _ = 0; _ < C.length; _++) {
                    var w = C[_];
                    Mt(w.parent) || (w.parent = g, Ze(w)), v.add(w)
                }
                v.resumeEvents(), a ? n.remove(t.id) : t.lastUpdated = u;
                var x = v.computeAvailability(),
                    E = x.start,
                    T = x.stop,
                    O = $t.equals(E, Vt.MINIMUM_VALUE),
                    L = $t.equals(T, Vt.MAXIMUM_VALUE);
                if (!O || !L) {
                    var k = e._clock;
                    k.startTime === E && k.stopTime === T || (k.startTime = E, k.stopTime = T, e._changed.raiseEvent(e))
                }
                t.updating = !1, t.needsUpdate = !1, e._refresh.raiseEvent(e, o)
            }
        }
    }

    function tt() {
        this.author = {
            name: void 0,
            uri: void 0,
            email: void 0
        }, this.link = {
            href: void 0,
            hreflang: void 0,
            rel: void 0,
            type: void 0,
            title: void 0,
            length: void 0
        }, this.address = void 0, this.phoneNumber = void 0, this.snippet = void 0, this.extendedData = void 0
    }

    function it(e, t, i, n) {
        var o = i.viewMatrix,
            s = Zi.multiplyByVector(o, qi.fromElements(e.x, e.y, e.z, 1, cn), cn),
            r = Gi.multiplyComponents(t, Gi.normalize(s, hn), hn);
        return s.x += t.x + r.x, s.y += t.y + r.y, s.z += r.z, Zi.multiplyByVector(i.frustum.projectionMatrix, s, n)
    }

    function nt(e) {
        this.oTask = null, this.citydbKmlLayerInstance = e, this.dataPoolKml = new Object, this.networklinkCache = new Object, this.boundingboxEntity = null, this.timer = null, this.startPrefetching = !0, this.taskNumber = 0
    }

    function ot(e, t) {
        var i = O(e, t),
            n = mt.polygonArea(i);
        if (n > 0) {
            var o = e[0].x,
                s = e[0].y,
                r = e[1].x,
                a = e[1].y,
                l = e[2].x,
                c = e[2].y,
                h = e[3].x,
                u = e[3].y;
            return (Math.sqrt((o - l) * (o - l) + (s - c) * (s - c)) + Math.sqrt((r - h) * (r - h) + (a - u) * (a - u))) / 2
        }
        return Math.sqrt(n)
    }

    function st(e, t) {
        return t.mode == Cesium.SceneMode.SCENE3D ? t.globe.pick(t.camera.getPickRay(e), t) : t.camera.pickEllipsoid(e)
    }

    function rt(e) {
        this._url = e.url, this._name = e.name, this._className = "CitydbKmlLayer", this._id = Cesium.defaultValue(e.id, Cesium.createGuid()), this._active = Cesium.defaultValue(e.active, !0), this._highlightedObjects = new Object, this._hiddenObjects = new Array, this._cameraPosition = new Object, this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._show = e.show || !0, this._cesiumViewer = void 0, this._thematicDataUrl = Cesium.defaultValue(e.thematicDataUrl, ""), this._thematicDataProvider = Cesium.defaultValue(e.thematicDataProvider, ""), this._cityobjectsJsonUrl = e.cityobjectsJsonUrl, this._cityobjectsJsonData = new Object, this._maxSizeOfCachedTiles = Cesium.defaultValue(e.maxSizeOfCachedTiles, 50), this._maxCountOfVisibleTiles = Cesium.defaultValue(e.maxCountOfVisibleTiles, 200), this._minLodPixels = Cesium.defaultValue(e.minLodPixels, Number.MIN_VALUE), this._maxLodPixels = Cesium.defaultValue(e.maxLodPixels, Number.MAX_VALUE), this._citydbKmlDataSource = void 0, this._activeHighlighting = Cesium.defaultValue(e.activeHighlighting, !0), this._citydbKmlHighlightingManager = this._activeHighlighting ? new T(this) : null, this._citydbKmlTilingManager = new nt(this), this._layerType = void 0, this._jsonLayerInfo = void 0, this._urlSuffix = void 0, this._viewChangedEvent = new Cesium.Event, this._listener = new i, this._highlightColor = new Cesium.Color(.4, .4, 0, 1), this._mouseOverhighlightColor = new Cesium.Color(0, .3, 0, 1), this._configParameters = {
            id: this.id,
            url: this.url,
            name: this.name,
            thematicDataUrl: this.thematicDataUrl,
            thematicDataProvider: this._thematicDataProvider,
            cityobjectsJsonUrl: this.cityobjectsJsonUrl,
            minLodPixels: this.minLodPixels,
            maxLodPixels: this.maxLodPixels,
            maxSizeOfCachedTiles: this.maxSizeOfCachedTiles,
            maxCountOfVisibleTiles: this.maxCountOfVisibleTiles
        }, Cesium.knockout.track(this, ["_highlightedObjects", "_hiddenObjects"])
    }

    function at(e, t) {
        var i = Cesium.when.defer(),
            n = e._url;
        return Cesium.loadJson(n).then(function(n) {
            e._jsonLayerInfo = n, e._layerType = n.displayform, e._cameraPosition = {
                lat: (n.bbox.ymax + n.bbox.ymin) / 2,
                lon: (n.bbox.xmax + n.bbox.xmin) / 2,
                range: 800,
                pitch: -50,
                heading: 6,
                altitude: 40
            }, t && (e._minLodPixels || (e._minLodPixels = -1 == n.minLodPixels ? Number.MIN_VALUE : n.minLodPixels), e._maxLodPixels || (e._maxLodPixels = -1 == n.maxLodPixels ? Number.MAX_VALUE : n.maxLodPixels)), e._active && ("json" == e._urlSuffix && e._citydbKmlTilingManager.doStart(), e._cesiumViewer.dataSources.add(e._citydbKmlDataSource));
            var o = e._cityobjectsJsonUrl;
            Cesium.defined(o) ? Cesium.loadJson(o).then(function(t) {
                i.resolve(e), e._cityobjectsJsonData = t
            }).otherwise(function() {
                i.resolve(e)
            }) : i.resolve(e)
        }).otherwise(function(e) {
            i.reject(new Cesium.DeveloperError("Failed to load: " + n))
        }), i.promise
    }

    function lt(e, t) {
        for (var i = e.values, n = 0; n < i.length; n++) {
            var o = i[n];
            o.layerId || (o.addProperty("layerId"), o.layerId = t)
        }
    }

    function ct(e) {
        this._name = e.name, this._id = Cesium.defaultValue(e.id, Cesium.createGuid());
        var t = Cesium.defaultValue(e.position, [0, 0, 0]),
            n = Cesium.defaultValue(e.symbol, {});
        this._symbol = n, this._active = Cesium.defaultValue(e.active, !0), this._cesiumViewer = void 0, this._model = void 0, this._className = "MarkerLayer", this._clickEvent = new Cesium.Event, this._ctrlClickEvent = new Cesium.Event, this._mouseInEvent = new Cesium.Event, this._mouseOutEvent = new Cesium.Event, this._viewChangedEvent = new Cesium.Event, this._listener = new i, this._config = {
            position: 2 == t.length ? [t[0], t[1], 0] : t,
            text: n.text || "",
            textFont: n.textFont || "sans-serif",
            textSize: n.textSize || 20,
            textFillColor: n.textFillColor,
            textOffset: n.textOffset || [0, 0],
            textEyeOffset: n.textEyeOffset || [0, 0, 0],
            textScale: n.textScale || 1,
            textOutlineColor: n.textOutlineColor,
            textOutlineWidth: n.textOutlineWidth,
            point: n.point || !1,
            pointColor: n.pointColor,
            pointPixelSize: n.pointPixelSize,
            pointOutlineColor: n.pointOutlineColor,
            pointOutlineWidth: n.pointOutlineWidth,
            imageUrl: n.imageUrl || "",
            imageWidth: n.imageWidth || void 0,
            imageHeight: n.imageHeight || void 0,
            imageScale: n.imageScale || 1,
            imageOffset: n.imageOffset || [0, 0],
            imageEyeOffset: n.imageEyeOffset || [0, 0, 0]
        }
    }

    function ht(e, t, i, n) {
        this.viewer = null, this.show = !1, this.oldpos = null, this.oldMatx = null, this._eventHandler = null, this.moveobj = null, this.movetype = "", this.layertyle = "", this.infoBox = i || null, this.idshowhtml = t || !1, this._highlightColor = new Cesium.Color(.4, .4, 0, 1), this._highlightObject = null, this.mousemove = !1, this.follow = !1, this.polylines = null, this.axisLable = null, this.moveModelWindow = n || null, e._cesiumViewer ? this.initHtml(e._cesiumViewer) : this.initHtml(e)
    }

    function ut(e) {
        if (this.viewer = null, this.isshowhtml = !1, this.showScheme = !1, this.clippingGlode = !0, this.isSchemeShow = !1, this.isShowTable = !1, this.clippingWindow = null, this.PhotoClipLayer = [], this.TileClipLayer = [], this.ModelClipLayer = [], this.praScheme = {}, this.handle = null, this.pointEnt = [], e._cesiumViewer ? this.viewer = e._cesiumViewer : this.viewer = e, e._container) {
            var t = $("#" + e._container),
                i = t.offset().left,
                n = t.offset().top,
                o = t.width(),
                s = t.height();
            this._containerCenterX = i + .5 * o, this._containerCenterY = n + .5 * s
        }
        this.viewer.scene.globe.depthTestAgainstTerrain = !0
    }

    function dt(e, t) {
        var i = Cesium.Matrix4.inverse(t, new Cesium.Matrix4),
            n = Cesium.Matrix4.multiplyByPoint(i, e[0], new Cesium.Cartesian3),
            o = Cesium.Matrix4.multiplyByPoint(i, e[1], new Cesium.Cartesian3),
            s = Cesium.Matrix4.multiplyByPoint(i, e[2], new Cesium.Cartesian3),
            r = Cesium.Cartesian3.subtract(n, o, new Cesium.Cartesian3),
            a = Cesium.Cartesian3.subtract(o, s, new Cesium.Cartesian3);
        return r.y * a.x - r.x * a.y > 0
    }
    t = "default" in t ? t.default : t, void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Math.sign && (Math.sign = function(e) {
        return e < 0 ? -1 : e > 0 ? 1 : +e
    }), void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }), void 0 === Object.assign && function() {
        Object.assign = function(e) {
            if (void 0 === e || null === e) throw new TypeError("Cannot convert undefined or null to object");
            for (var t = Object(e), i = 1; i < arguments.length; i++) {
                var n = arguments[i];
                if (void 0 !== n && null !== n)
                    for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o])
            }
            return t
        }
    }();
    var pt = "V1.0";
    i.prototype.on = function(e, t, i) {
        this._handleEvent[e] || (this._handleEvent[e] = {});
        var n = this._handleMap.add();
        return this._handleEvent[e][n] = {
            scope: i || this,
            callback: t
        }, this._handleId[n] = e, n
    }, i.prototype.off = function(e) {
        var t = this._handleId[e];
        if (t) {
            delete this._handleId[e];
            var i = this._handleEvent[t];
            i && delete i[e]
        }
    }, i.prototype.once = function(e, t, i) {
        var n = this,
            o = this.on(e, function(e) {
                n.off(o), t(e)
            }, i)
    }, i.prototype.fire = function(e, t, i) {
        var n, o = this._handleEvent[e];
        if (o)
            for (var s in o) o.hasOwnProperty(s) && (n = o[s], n.callback.call(n.scope, t))
    };
    var mt = {
            generateUUID: function() {
                var e = (new Date).getTime(),
                    t = "xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx".replace(/[xy]/g, function(t) {
                        var i = (e + 16 * Math.random()) % 16 | 0;
                        return e = Math.floor(e / 16), ("x" == t ? i : 7 & i | 8).toString(16)
                    });
                return t = "UUID_" + t
            },
            retrieveURL: function(e) {
                var t = document.getElementsByTagName("script");
                if (t && t.length > 0)
                    for (var i in t)
                        if (t[i].src && t[i].src.match(new RegExp(e + "\\.js$"))) return t[i].src.replace(new RegExp("(.*)" + e + "\\.js$"), "$1")
            },
            getCoreURL: function() {
                var e = mt.retrieveURL("geobim");
                return void 0 === e && (e = mt.retrieveURL("geobim.min")), e
            },
            polygonArea: function(e) {
                for (var t = 0, i = e.length - 1, n = 0; n < e.length; n++) t += (e[i].x + e[n].x) * (e[i].y - e[n].y), i = n;
                return t / 2
            },
            parse_query_string: function(e, t) {
                e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                var i = "[\\?&#']" + e + "=([^&#]*)",
                    n = new RegExp(i),
                    o = n.exec(t);
                return null == o ? "" : o[1]
            },
            get_host_and_path_from_URL: function(e) {
                return e.lastIndexOf("/") == e.length - 1 || -1 == e.lastIndexOf("/") ? null : e.substring(0, e.lastIndexOf("/") + 1)
            },
            get_suffix_from_filename: function(e) {
                return -1 == e.lastIndexOf(".") ? e : e.substring(e.lastIndexOf(".") + 1, e.length)
            },
            showAlertWindow: function(e, t, i, n, o) {
                function s() {
                    h.style.maxHeight = Math.max(Math.round(.9 * r.clientHeight - 100), 30) + "px"
                }
                var r = cesiumViewer.cesiumWidget._element,
                    a = document.createElement("div");
                a.className = "cesium-widget-errorPanel";
                var l = document.createElement("div");
                l.className = "cesium-widget-errorPanel-content", a.appendChild(l);
                var c = document.createElement("div");
                c.className = "cesium-widget-errorPanel-header", c.appendChild(document.createTextNode(t)), l.appendChild(c);
                var h = document.createElement("div");
                if (h.className = "cesium-widget-errorPanel-scroll", l.appendChild(h), s(), Cesium.defined(window.addEventListener) && window.addEventListener("resize", s, !1), Cesium.defined(i)) {
                    var u = document.createElement("div");
                    u.className = "cesium-widget-errorPanel-message", u.innerHTML = "<p>" + i + "</p>", h.appendChild(u)
                }
                var d = document.createElement("div");
                if (d.className = "cesium-widget-errorPanel-buttonPanel", l.appendChild(d), "YESNO" == e) {
                    var p = document.createElement("button");
                    p.setAttribute("type", "button"), p.className = "cesium-button", p.appendChild(document.createTextNode("Yes")), p.onclick = function() {
                        Cesium.defined(s) && Cesium.defined(window.removeEventListener) && window.removeEventListener("resize", s, !1), r.removeChild(a), Cesium.defined(n) && n.call(this)
                    };
                    var m = document.createElement("button");
                    m.setAttribute("type", "button"), m.className = "cesium-button", m.appendChild(document.createTextNode("No")), m.onclick = function() {
                        Cesium.defined(s) && Cesium.defined(window.removeEventListener) && window.removeEventListener("resize", s, !1), r.removeChild(a), Cesium.defined(o) && o.call(this)
                    }, d.appendChild(p), d.appendChild(m)
                } else if ("OK" == e) {
                    var f = document.createElement("button");
                    f.setAttribute("type", "button"), f.className = "cesium-button", f.appendChild(document.createTextNode("OK")), f.onclick = function() {
                        Cesium.defined(s) && Cesium.defined(window.removeEventListener) && window.removeEventListener("resize", s, !1), r.removeChild(a), Cesium.defined(n) && n.call(this)
                    }, d.appendChild(f)
                }
                r.appendChild(a), document.getElementsByClassName("cesium-widget-errorPanel-content")[0].style.width = "400px"
            }
        },
        ft = {
            version: 1,
            entities: []
        };
    ft.removeAll = function() {
        for (var e = ft.entities.length - 1; e >= 0; e--) viewer.entities.remove(ft.entities[e])
    }, ft.getCameraHeight = function() {
        return viewer.scene.globe.ellipsoid.cartesianToCartographic(viewer.camera.position).height
    }, ft.getScreenXYFromWGS84 = function(e, t) {
        var i = Cesium.Cartesian3.fromDegrees(e, t);
        return Cesium.SceneTransforms.wgs84ToWindowCoordinates(viewer.scene, i)
    }, ft.getCePoint = function(e) {
        var t;
        t = e ? Cesium.Cartesian3.clone(e) : viewer.camera.pickEllipsoid(new Cesium.Cartesian2(.5 * viewer.canvas.clientWidth, .5 * viewer.canvas.clientHeight));
        var i = Cesium.Ellipsoid.WGS84.cartesianToCartographic(t);
        return {
            lon: 180 * i.longitude / Math.PI,
            lat: 180 * i.latitude / Math.PI,
            height: i.height
        }
    }, ft.MarkPoint = function(e) {
        e instanceof Cesium.Cartographic && (e = scene.globe.ellipsoid.cartographicToCartesian(e));
        var t = viewer.entities.add({
            position: e,
            ellipsoid: {
                radii: new Cesium.Cartesian3(.8, .8, .8)
            }
        });
        ft.entities.push(t)
    }, ft.MarkRectangle = function(e) {
        var e = e || Cesium.Rectangle.fromDegrees(116.89933933524398, 39.71007807547379, 116.90008359718045, 39.71341308493743);
        ft.removeAll();
        var t = viewer.entities.add({
            rectangle: {
                coordinates: e,
                fill: !1,
                outline: !0,
                outlineColor: Cesium.Color.WHITE
            }
        });
        ft.entities.push(t)
    }, ft.MarkBoundingVolume = function(e) {
        var t = Cesium.Cartesian3.clone(e.center),
            i = e.radius;
        viewer.entities.add({
            name: "Yellow ellipsoid outline",
            position: t,
            ellipsoid: {
                radii: new Cesium.Cartesian3(i, i, i),
                fill: !1,
                outline: !0,
                outlineColor: Cesium.Color.YELLOW,
                slicePartitions: 24,
                stackPartitions: 36
            }
        })
    }, ft.LocalToCar3 = function(e, t) {
        return Cesium.Matrix4.multiplyByPoint(e, t, new Cesium.Cartesian3)
    }, ft.Car3ToLocal = function(e, t) {
        var i = Cesium.Matrix4.inverse(e, new Cesium.Matrix4);
        return Cesium.Matrix4.multiplyByPoint(i, t, new Cesium.Cartesian3)
    }, n.prototype.drawDot = function() {
        var e = new Cesium.Entity({
            position: Cesium.Cartesian3.fromDegrees(this.hitV3.lon, this.hitV3.lat, this.hitV3.height),
            point: {
                pixelSize: 12,
                color: Cesium.Color.fromCssColorString(this.dotFillColor)
            }
        });
        this.pointEntity = e, this.viewer.entities.add(e)
    }, n.prototype.drawLine = function(e, t) {
        this.startC3 = Cesium.Cartesian3.fromDegrees(e.lon, e.lat, e.height), this.endC3 = Cesium.Cartesian3.fromDegrees(t.lon, t.lat, t.height);
        var i = new Cesium.ConstantPositionProperty(this.startC3),
            n = new Cesium.ConstantPositionProperty(this.endC3),
            s = new Cesium.Entity({
                polyline: {
                    positions: o(n, i, 500),
                    width: 2,
                    material: Cesium.Color.fromCssColorString(this.lineColor)
                }
            });
        this.polylineEntity.push(s), this.viewer.entities.add(s)
    }, n.prototype.clear = function() {
        if (this.polylineEntity.length > 0) {
            for (var e = this.polylineEntity.length - 1; e >= 0; e--) this.viewer.entities.remove(this.polylineEntity[e]);
            this.polylineEntity = []
        }
        if (this.pointEntity && this.viewer.entities.remove(this.pointEntity), this.labelEntity.length > 0) {
            for (var e = this.labelEntity.length - 1; e >= 0; e--) this.viewer.entities.remove(this.labelEntity[e]);
            this.labelEntity = []
        }
    }, n.prototype.clearOther = function() {
        if (this.polylineEntity.length > 0)
            for (var e = this.polylineEntity.length - 1; e >= 0; e--) "other" == this.polylineEntity[e]._name && this.viewer.entities.remove(this.polylineEntity[e]);
        if (this.labelEntity.length > 0)
            for (var e = this.labelEntity.length - 1; e >= 0; e--) "other" == this.labelEntity[e]._name && this.viewer.entities.remove(this.labelEntity[e])
    }, n.prototype.clearTotalDistance = function() {
        if (this.labelEntity.length > 0)
            for (var e = this.labelEntity.length - 1; e >= 0; e--) "totalDistance" == this.labelEntity[e]._name && this.viewer.entities.remove(this.labelEntity[e])
    }, n.prototype.showTotalDistanceResult = function(e) {
        var t = Cesium.Cartesian3.fromDegrees(this.hitV3.lon, this.hitV3.lat, this.hitV3.height),
            i = new Cesium.Entity({
                position: t,
                name: "totalDistance",
                label: {
                    text: "总长：" + e.toFixed(3) + "米",
                    showBackground: !0,
                    style: Cesium.LabelStyle.FILL_AND_OUTLINE,
                    horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
                    verticalOrigin: Cesium.VerticalOrigin.TOP,
                    fillColor: Cesium.Color.RED,
                    scale: .65,
                    disableDepthTestDistance: Number.POSITIVE_INFINITY,
                    backgroundPadding: new Cesium.Cartesian2(10, 10),
                    pixelOffset: new Cesium.Cartesian2(100, -40)
                }
            });
        this.labelEntity.push(i), this.viewer.entities.add(i)
    }, n.prototype.showDistanceResult = function(e, t, i) {
        var n = Cesium.Cartesian3.fromDegrees(e.lon, e.lat, e.height),
            o = Cesium.Cartesian3.fromDegrees(t.lon, t.lat, t.height),
            s = Cesium.Cartesian3.fromDegrees(.5 * (e.lon + t.lon), .5 * (e.lat + t.lat), .5 * (e.height + t.height)),
            r = i || "空间距离",
            a = Cesium.Cartesian3.distance(n, o),
            l = new Cesium.Entity({
                position: s,
                label: {
                    text: a.toFixed(3) + "米",
                    showBackground: !0,
                    style: Cesium.LabelStyle.FILL_AND_OUTLINE,
                    horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
                    verticalOrigin: Cesium.VerticalOrigin.TOP,
                    scale: .65,
                    disableDepthTestDistance: Number.POSITIVE_INFINITY,
                    backgroundPadding: new Cesium.Cartesian2(10, 10),
                    pixelOffset: new Cesium.Cartesian2(0, -40)
                }
            });
        i && (l.name = "other", l.show = !1), this.labelEntity.push(l), this.viewer.entities.add(l), "空间距离" == r ? this.result.z = a.toFixed(3) + "米" : "水平距离" == r ? this.result.x = a.toFixed(3) + "米" : this.result.y = a.toFixed(3) + "米"
    }, n.prototype.showOtherDistance = function(e, t) {
        var i, n, o;
        e.height < t.height ? (i = Cesium.Cartesian3.fromDegrees(e.lon, e.lat, t.height), n = "垂直距离", o = "水平距离") : (i = Cesium.Cartesian3.fromDegrees(t.lon, t.lat, e.height), n = "水平距离", o = "垂直距离");
        new Cesium.Entity({
            name: "other",
            polyline: {
                positions: [this.startC3, i, this.endC3],
                width: 1,
                material: new Cesium.PolylineDashMaterialProperty({
                    color: Cesium.Color.RED,
                    dashLength: 8
                })
            }
        }), Cesium.Cartesian3.distance(this.startC3, i), Cesium.Cartesian3.distance(this.endC3, i);
        this.showDistanceResult.call(this, e, ft.getCePoint(i), n), this.showDistanceResult.call(this, t, ft.getCePoint(i), o)
    };
    var gt = function() {
            var e, t, i, o = [],
                s = {},
                r = 0,
                a = Cesium.createGuid(),
                l = {};
            return {
                id: a,
                enable: !1,
                distanceList: o,
                currDistance: s,
                setViewer: function(e) {
                    t = e
                },
                start: function(e) {
                    gt.enable = !0, "function" == typeof e && (i = e)
                },
                Click: function(e, i) {
                    t = e;
                    var n, o = e.scene.pick(i.position);
                    if (n = e.scene.pickPositionSupported && Cesium.defined(o) ? e.scene.pickPosition(i.position) : e.camera.pickEllipsoid(i.position), Cesium.defined(n)) {
                        var r = Cesium.Cartographic.fromCartesian(n),
                            a = parseFloat(Cesium.Math.toDegrees(r.longitude).toFixed(6)),
                            l = parseFloat(Cesium.Math.toDegrees(r.latitude).toFixed(6)),
                            c = parseFloat(r.height.toFixed(6));
                        if (s.hitV3 && Math.abs(s.hitV3.lon - a) < 1e-5 && Math.abs(s.hitV3.lat - l) < 1e-5) return;
                        gt.addPoint({
                            lon: a,
                            lat: l,
                            height: c
                        })
                    }
                },
                MouseMove: function(e, t) {
                    var i = e.scene.pick(t.endPosition);
                    if (e.scene.pickPositionSupported && Cesium.defined(i)) {
                        var n = e.scene.pickPosition(t.endPosition);
                        if (Cesium.defined(n)) {
                            var o = Cesium.Cartographic.fromCartesian(n);
                            parseFloat(Cesium.Math.toDegrees(o.longitude).toFixed(6)), parseFloat(Cesium.Math.toDegrees(o.latitude).toFixed(6)), parseFloat(o.height.toFixed(6))
                        }
                    }
                },
                stop: function() {
                    gt.enable = !1, gt.closeAll()
                },
                distance: function(e, t) {
                    gt.stop(), i = null;
                    var n, o = Cesium.Cartesian3.fromDegrees(e.lon, e.lat, e.height),
                        s = Cesium.Cartesian3.fromDegrees(t.lon, t.lat, t.height),
                        r = {};
                    return e.height < t.height ? (n = Cesium.Cartesian3.fromDegrees(e.lon, e.lat, t.height), r.h = Cesium.Cartesian3.distance(s, n), r.v = Cesium.Cartesian3.distance(o, n)) : (n = Cesium.Cartesian3.fromDegrees(t.lon, t.lat, e.height), r.v = Cesium.Cartesian3.distance(s, n), r.h = Cesium.Cartesian3.distance(o, n)), r.d = Cesium.Cartesian3.distance(o, s), gt.addPoint(e), gt.addPoint(t), r
                },
                addPoint: function(a) {
                    if (o.length > 0) {
                        e = new n({
                            viewer: t,
                            hitV3: a,
                            preV3: o[o.length - 1].hitV3
                        }), l = {
                            start: o[o.length - 1].hitV3,
                            end: a,
                            result: e.result
                        };
                        var c = Cesium.Cartesian3.fromDegrees(l.start.lon, l.start.lat, l.start.height),
                            h = Cesium.Cartesian3.fromDegrees(l.end.lon, l.end.lat, l.end.height);
                        r += Cesium.Cartesian3.distance(c, h), o.length > 1 && (s.clearTotalDistance(), e.showTotalDistanceResult(r))
                    } else e = new n({
                        viewer: t,
                        hitV3: a
                    }), l = {
                        start: a
                    };
                    o.length > 1 && o[o.length - 1].clearOther(), o.push(e), s = e, "function" == typeof i && i(l)
                },
                closeAll: function() {
                    for (var e = o.length - 1; e >= 0; e--) {
                        o[e].clear(), o.splice(e, 1)
                    }
                    s = {}, r = 0
                }
            }
        }(),
        vt = {};
    vt.appKey = "n045cef82fb1422296b1f657410cfb84", vt.code = "fxkulou", vt.password = "19911224", vt.host = "http://api.rickricks.com/v1-2/", Object.defineProperties(s.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        className: {
            get: function() {
                return this._className
            }
        },
        show: {
            get: function() {
                return this._show && this._layer.show
            },
            set: function(e) {
                this._show = e
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        id: {
            get: function() {
                return this._id
            },
            set: function(e) {
                this._id = e
            }
        },
        region: {
            get: function() {
                return this._region
            }
        }
    }), s.prototype.addToCesium = function(e) {
        var t = this;
        this._cesiumViewer = e instanceof r ? e._cesiumViewer : e;
        var i;
        switch (this._type) {
            case "BingMaps":
                i = new Cesium.BingMapsImageryProvider({
                    url: "https://dev.virtualearth.net",
                    key: "get-yours-at-https://www.bingmapsportal.com/",
                    mapStyle: Cesium.BingMapsStyle.AERIAL
                });
                break;
            case "TemplateTile":
                i = new Cesium.UrlTemplateImageryProvider({
                    url: t._url,
                    tilingScheme: new Cesium.WebMercatorTilingScheme,
                    minimumLevel: t._minimumLevel,
                    maximumLevel: t._maximumLevel,
                    rectangle: Cesium.Rectangle.fromDegrees(t._region[0], t._region[1], t._region[2], t._region[3])
                });
                break;
            case "SingleTile":
                i = new Cesium.SingleTileImageryProvider({
                    url: t._url,
                    rectangle: Cesium.Rectangle.fromDegrees(t._region[0], t._region[1], t._region[2], t._region[3])
                });
                break;
            case "OpenStreetMaps":
                i = Cesium.createOpenStreetMapImageryProvider({
                    url: "https://a.tile.openstreetmap.org/"
                });
                break;
            case "Mapbox":
                i = new Cesium.MapboxImageryProvider({
                    url: t._url,
                    mapId: this._mapId,
                    accessToken: this._accessToken
                });
                break;
            case "GoogleEarth":
                i = new Cesium.GoogleEarthEnterpriseMapsProvider({
                    url: "https://earth.localdomain",
                    channel: 1008
                });
                break;
            case "Google_Imagery":
                i = new Cesium.UrlTemplateImageryProvider({
                    url: "http://mt1.google.cn/vt/lyrs=s&hl=zh-CN&x={x}&y={y}&z={z}"
                });
                break;
            case "Location_Map":
                i = new Cesium.UrlTemplateImageryProvider({
                    //url: "http://mt1.google.cn/vt/lyrs=s&hl=zh-CN&x={x}&y={y}&z={z}"
                    url: "http://127.0.0.1:8082/service/v1/tile?map=googlevect&x={x}&y={y}&z={z}"
                });
                break;
            case "Google_Street":
                i = new Cesium.UrlTemplateImageryProvider({
                    url: "http://mt1.google.cn/vt/lyrs=m&hl=zh-CN&x={x}&y={y}&z={z}"
                });
                break;
            case "ArcGIS_Street":
                i = new Cesium.ArcGisMapServerImageryProvider({
                    url: "https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"
                });
                break;
            case "ArcGIS_Imagery":
                i = new Cesium.ArcGisMapServerImageryProvider({
                    url: "https://server.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer"
                });
                break;
            case "TianDiTu_Street":
                i = new Cesium.WebMapTileServiceImageryProvider({
                    url: "http://t1.tianditu.com/vec_c/wmts?service=WMTS&version=1.0.0&request=GetTile&tilematrix={TileMatrix}&layer=vec&style={style}&tilerow={TileRow}&tilecol={TileCol}&tilematrixset={TileMatrixSet}&format=tiles",
                    layer: "vec",
                    style: "default",
                    format: "tiles",
                    tileMatrixSetID: "c",
                    subdomains: ["t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7"],
                    maximumLevel: 17,
                    tilingScheme: new Cesium.GeographicTilingScheme,
                    tileMatrixLabels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"]
                });
                break;
            case "TianDiTu_Imagery":
                i = new Cesium.WebMapTileServiceImageryProvider({
                    url: "http://t1.tianditu.com/img_c/wmts?service=WMTS&version=1.0.0&request=GetTile&tilematrix={TileMatrix}&layer=img&style={style}&tilerow={TileRow}&tilecol={TileCol}&tilematrixset={TileMatrixSet}&format=tiles",
                    layer: "img",
                    style: "default",
                    format: "tiles",
                    tileMatrixSetID: "c",
                    subdomains: ["t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7"],
                    maximumLevel: 17,
                    tilingScheme: new Cesium.GeographicTilingScheme,
                    tileMatrixLabels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"]
                })
        }
        this._layer = this._cesiumViewer.imageryLayers.addImageryProvider(i)
    }, s.create = function(e, t) {
        var i;
        switch (this._type = e, e) {
            case "BingMaps":
                i = new Cesium.BingMapsImageryProvider({
                    url: "https://dev.virtualearth.net",
                    key: "get-yours-at-https://www.bingmapsportal.com/",
                    mapStyle: Cesium.BingMapsStyle.AERIAL
                });
                break;
            case "OpenStreetMaps":
                i = Cesium.createOpenStreetMapImageryProvider({
                    url: "https://a.tile.openstreetmap.org/"
                });
                break;
            case "Mapbox":
                i = new Cesium.MapboxImageryProvider({
                    mapId: t || "mapbox.streets",
                    accessToken: "pk.eyJ1IjoicDI5NjMzOTUyOCIsImEiOiJjamZ0ZTdrM28wYW5oMzJudmhnNnBjZ3poIn0.jpA-QAHpFk1sq-d4PzFwmg"
                });
                break;
            case "GoogleEarth":
                i = new Cesium.GoogleEarthEnterpriseMapsProvider({
                    url: "https://earth.localdomain",
                    channel: 1008
                });
                break;
            case "SingleTile":
                i = new Cesium.SingleTileImageryProvider({
                    url: that._url,
                    rectangle: Cesium.Rectangle.fromDegrees(that._region[0], that._region[1], that._region[2], that._region[3])
                });
                break;
            case "Google_Imagery":
                i = new Cesium.UrlTemplateImageryProvider({
                    url: "http://mt1.google.cn/vt/lyrs=s&hl=zh-CN&x={x}&y={y}&z={z}"
                });
                break;
            case "Location_Map":
                i = new Cesium.UrlTemplateImageryProvider({
                    //url: "http://mt1.google.cn/vt/lyrs=s&hl=zh-CN&x={x}&y={y}&z={z}"
                    url: "http://127.0.0.1:8082/service/v1/tile?map=googleimage&x={x}&y={y}&z={z}"
                });
                break;
            case "Google_Street":
                i = new Cesium.UrlTemplateImageryProvider({
                    url: "http://mt1.google.cn/vt/lyrs=m&hl=zh-CN&x={x}&y={y}&z={z}"
                });
                break;
            case "ArcGIS_Street":
                i = new Cesium.ArcGisMapServerImageryProvider({
                    url: "https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"
                });
                break;
            case "ArcGIS_Imagery":
                i = new Cesium.ArcGisMapServerImageryProvider({
                    url: "https://server.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer"
                });
                break;
            case "TianDiTu_Street":
                i = new Cesium.WebMapTileServiceImageryProvider({
                    url: "http://t1.tianditu.com/vec_c/wmts?service=WMTS&version=1.0.0&request=GetTile&tilematrix={TileMatrix}&layer=vec&style={style}&tilerow={TileRow}&tilecol={TileCol}&tilematrixset={TileMatrixSet}&format=tiles",
                    layer: "vec",
                    style: "default",
                    format: "tiles",
                    tileMatrixSetID: "c",
                    subdomains: ["t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7"],
                    maximumLevel: 17,
                    tilingScheme: new Cesium.GeographicTilingScheme,
                    tileMatrixLabels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"]
                });
                break;
            case "TianDiTu_Imagery":
                i = new Cesium.WebMapTileServiceImageryProvider({
                    url: "http://t1.tianditu.com/img_c/wmts?service=WMTS&version=1.0.0&request=GetTile&tilematrix={TileMatrix}&layer=img&style={style}&tilerow={TileRow}&tilecol={TileCol}&tilematrixset={TileMatrixSet}&format=tiles",
                    layer: "img",
                    style: "default",
                    format: "tiles",
                    tileMatrixSetID: "c",
                    subdomains: ["t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7"],
                    maximumLevel: 17,
                    tilingScheme: new Cesium.GeographicTilingScheme,
                    tileMatrixLabels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"]
                })
        }
        return i
    }, s.prototype.zoomTo = function() {
        "SingleTile" != this._type && "TemplateTile" != this._type || this._cesiumViewer.camera.setView({
            destination: Cesium.Rectangle.fromDegrees(this._region[0], this._region[1], this._region[2], this._region[3])
        })
    }, s.prototype.removeFromCesium = function(e) {
        this.activate(!1)
    }, s.prototype.activate = function(e) {
        this._layer.show = e, this._active = e
    }, s.prototype.hideAll = function() {
        this._layer.show = !1
    }, s.prototype.showAll = function() {
        this._layer.show = !0
    }, s.prototype.showObjects = function() {
        this._layer.show = !0
    }, s.prototype.unHighlightAllObjects = function() {}, s.prototype.remove = function(e) {
        this._cesiumViewer.imageryLayers.remove(this._layer, !1)
    }, s.prototype.ToTop = function() {
        this._cesiumViewer.imageryLayers.raiseToTop(this._layer)
    }, s.prototype.ToBottom = function() {
        this._cesiumViewer.imageryLayers.lowerToBottom(this._layer)
    }, s.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, s.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, s.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? this._clickEvent.raiseEvent(t, i) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, Object.defineProperties(r.prototype, {
        id: {
            get: function() {
                return this._id
            }
        },
        listener: {
            get: function() {
                return this._listener
            }
        },
        cesiumViewer: {
            get: function() {
                return this._cesiumViewer
            }
        },
        scene: {
            get: function() {
                return this._cesiumViewer.scene
            }
        },
        camera: {
            get: function() {
                return this._cesiumViewer.scene.camera
            }
        },
        shadows: {
            get: function() {
                return this._cesiumViewer.shadows
            },
            set: function(e) {
                this._cesiumViewer.shadows = e
            }
        },
        selectedIds: {
            get: function() {
                return this._selectedIds
            },
            set: function(e) {
                this._selectedIds = e
            }
        }
    }), r.prototype.init = function(e) {
        this._cesiumViewer.scene.globe.depthTestAgainstTerrain = !1, this._cesiumViewer.bottomContainer.style.display = "none", t("<span class='logo'/>").appendTo(t("#" + this._container)), gt.setViewer(this._cesiumViewer), this._cesiumViewer.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)
    }, r.prototype.setViewRect = function(e, t, i, n) {
        var o;
        o = e instanceof Cesium.Rectangle ? rectangle : new Cesium.Rectangle.fromDegrees(e, t, i, n), this._cesiumViewer.camera.setView({
            destination: o
        }), this.startPosition.destination = Cesium.Cartesian3.clone(this._cesiumViewer.scene.camera.positionWC), this.startPosition.heading = this._cesiumViewer.scene.camera.heading, this.startPosition.pitch = this._cesiumViewer.scene.camera.pitch, this.startPosition.roll = this._cesiumViewer.scene.camera.roll
    }, r.prototype.getViewRect = function() {
        var e, t = this._cesiumViewer.scene.camera,
            i = this._cesiumViewer.canvas,
            n = t.pickEllipsoid(new Cesium.Cartesian2(0, 0), Cesium.Ellipsoid.WGS84),
            o = t.pickEllipsoid(new Cesium.Cartesian2(i.width, i.height), Cesium.Ellipsoid.WGS84),
            s = t.pickEllipsoid(new Cesium.Cartesian2(0, i.height), Cesium.Ellipsoid.WGS84),
            r = t.pickEllipsoid(new Cesium.Cartesian2(i.width, 0), Cesium.Ellipsoid.WGS84);
        e = Cesium.Ellipsoid.WGS84.cartesianToCartographic(n);
        var a = parseFloat(Cesium.Math.toDegrees(e.latitude).toFixed(6));
        e = Cesium.Ellipsoid.WGS84.cartesianToCartographic(r);
        var l = parseFloat(Cesium.Math.toDegrees(e.longitude).toFixed(6));
        e = Cesium.Ellipsoid.WGS84.cartesianToCartographic(o);
        var c = parseFloat(Cesium.Math.toDegrees(e.latitude).toFixed(6));
        return e = Cesium.Ellipsoid.WGS84.cartesianToCartographic(s), {
            west: parseFloat(Cesium.Math.toDegrees(e.longitude).toFixed(6)),
            south: c,
            east: l,
            north: a
        }
    }, r.prototype.setView = function(e) {
        var t = new Cesium.Cartesian3(e.position[0], e.position[1], e.position[2]),
            i = e.rotate || [0, Cesium.Math.toRadians(-90), 0];
        this._cesiumViewer.scene.camera.setView({
            destination: t,
            duration: 2,
            orientation: {
                heading: i[0] || 0,
                pitch: i[1] || Cesium.Math.toRadians(-90),
                roll: i[2] || 0
            }
        }), this.startPosition.destination = Cesium.Cartesian3.clone(this._cesiumViewer.scene.camera.positionWC), this.startPosition.heading = this._cesiumViewer.scene.camera.heading, this.startPosition.pitch = this._cesiumViewer.scene.camera.pitch, this.startPosition.roll = this._cesiumViewer.scene.camera.roll
    }, r.prototype.flyHome = function() {
        this.startPosition.destination ? this._cesiumViewer.scene.camera.flyTo({
            destination: this.startPosition.destination,
            duration: 5,
            orientation: {
                heading: this.startPosition.heading,
                pitch: this.startPosition.pitch,
                roll: this.startPosition.roll
            }
        }) : this._cesiumViewer.scene.camera.flyHome()
    }, r.prototype.flyTo = function(e, t) {
        var i, n, o = Cesium.when.defer();
        if (e.position) i = Cesium.Cartesian3.fromDegrees(e.position[0], e.position[1], e.position[2]);
        else {
            if (!e.xyz) return;
            i = new Cesium.Cartesian3(e.xyz[0], e.xyz[1], e.xyz[2])
        }
        return n = e.direction && e.up ? {
            direction: new Cesium.Cartesian3(e.direction[0], e.direction[1], e.direction[2]),
            up: new Cesium.Cartesian3(e.up[0], e.up[1], e.up[2])
        } : {
            heading: e.heading || 0,
            pitch: e.pitch || Cesium.Math.toRadians(-90),
            roll: e.roll || 0
        }, this._cesiumViewer.camera.flyTo({
            destination: i,
            duration: e.duration || 2,
            orientation: n,
            complete: function() {
                o.resolve(), t && t()
            }
        }), o.promise
    }, r.prototype.setSkyBox = function(e) {}, r.prototype.switch = function(e, t) {
        var i = this._cesiumViewer.imageryLayers,
            n = i.get(0);
        this._cesiumViewer.scene.globe.show = !0, this._cesiumViewer.scene.globe.baseColor = new Cesium.Color(0, 0, .5, 1), "Color" == e ? this._cesiumViewer.scene.globe.baseColor = Cesium.Color.fromCssColorString(t) : "None" == e ? this._cesiumViewer.scene.globe.show = !1 : i.addImageryProvider(s.create(e, t), 0), i.remove(n)
    }, r.prototype.listentoSelectObjs = function(e) {
        return this._listener.on("clicked", function(t) {
            t ? e(t.layer, t.object, t.key, t.event) : e(null, null, null, t.event)
        })
    }, r.prototype.on = function(e, t) {
        var i = -1;
        return "viewchanged" == e ? i = this._listener.on("viewchanged", t) : "pick" == e && (i = this._listener.on("pick", t)), i
    }, r.prototype.off = function(e) {
        this._listener.off(e)
    }, r.prototype.getComponentAttribute = function() {
        var e = {};
        return function(i, n) {
            r.getAccessToken(e).then(function(o) {
                e = o, t.ajax({
                    type: "GET",
                    url: vt.host + vt.appKey + "/relation/components/" + i + "/to/componentAttributes?access_token=" + o.access_token,
                    success: function(e) {
                        n && n(e[0].attribute)
                    },
                    error: function() {
                        n && n()
                    }
                })
            }, function() {
                n && n()
            })
        }
    }(), r.getAccessToken = function(e) {
        var i = (new Date).getTime();
        return new Promise(function(n, o) {
            if (!e.access_token && parseFloat(e.expires || 0) < i) {
                var s = vt.host + vt.appKey + "/users/login";
                t.ajax({
                    type: "POST",
                    url: s,
                    async: !0,
                    contentType: "application/json",
                    data: JSON.stringify({
                        code: vt.code,
                        password: vt.password
                    }),
                    success: function(t) {
                        e = t.data, e ? n(e) : o()
                    },
                    error: function() {
                        o()
                    }
                })
            } else n(e)
        })
    }, Object.defineProperties(a.prototype, {
        viewer: {
            get: function() {
                return this._viewer
            }
        },
        infoBox: {
            get: function() {
                return this._infoBox
            }
        }
    }), a.prototype.addModule = function(e) {
        for (var t = 0; t < this._modules.length; t++)
            if (e.id == this._modules[t].id) return;
        this._modules.push(e)
    }, a.prototype.passEventToModules = function(e, t) {
        for (var i = this._modules.length - 1; i >= 0; i--) {
            var n = this._modules[i];
            if (n.enable)
                if ("CLICK" == e) {
                    if (!n.Click) return;
                    n.Click(this._cesiumViewerInstance, t)
                } else if ("CTRLCLICK" == e);
            else if ("DOUBLECLICK" == e) {
                if (!n.DoubleClick) return;
                n.DoubleClick(this._cesiumViewerInstance, t)
            } else if ("MOUSEOUT" == e);
            else if ("MOUSEMOVE" == e) {
                if (!n.MouseMove) return;
                n.MouseMove(this._cesiumViewerInstance, t)
            }
        }
    }, a.prototype.activateMouseClickEvents = function(e) {
        if (e) {
            var t = this;
            this._eventHandler.setInputAction(function(e) {
                t.passEventToModules("CLICK", e)
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this._eventHandler.setInputAction(function(e) {
                t.passEventToModules("DOUBLECLICK", e)
            }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK), this._eventHandler.setInputAction(function(e) {
                t.passEventToModules("CTRLCLICK", e)
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK, Cesium.KeyboardEventModifier.CTRL)
        } else this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK), this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK, Cesium.KeyboardEventModifier.CTRL);
        this._mouseClickEvents = e
    }, a.prototype.activateMouseMoveEvents = function(e) {
        var t = !1,
            i = null;
        if (e) {
            var n = this;
            this._eventHandler.setInputAction(function(e) {
                if (!(n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.LEFT_DRAG) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.MIDDLE_DRAG) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.PINCH) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.RIGHT_DRAG) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.WHEEL) || t)) {
                    t = !0;
                    var o = n._cesiumViewerInstance.scene.pick(e.endPosition);
                    i && i != o && n.passEventToModules("MOUSEOUT", i) && (i = null), o && i != o && (i = n.passEventToModules("MOUSEIN", o) ? o : null), t = !1, n.passEventToModules("MOUSEMOVE", e)
                }
            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)
        } else null !== i && (this.passEventToModules("MOUSEOUT", i), i = null), this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE);
        this._mouseMoveEvents = e
    }, Object.defineProperties(l.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        className: {
            get: function() {
                return this._className
            }
        },
        highlightedObjects: {
            get: function() {
                return this._highlightedObjects
            },
            set: function(e) {
                this._highlightedObjects = e
            }
        },
        hiddenObjects: {
            get: function() {
                return this._hiddenObjects
            },
            set: function(e) {
                this._hiddenObjects = e
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        show: {
            get: function() {
                return this._show && this._tileset.show
            },
            set: function(e) {
                this._show = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        id: {
            get: function() {
                return this._id
            },
            set: function(e) {
                this._id = e
            }
        },
        highlightColor: {
            get: function() {
                return this._highlightColor
            },
            set: function(e) {
                this._highlightColor = e
            }
        },
        mouseOverhighlightColor: {
            get: function() {
                return this._mouseOverhighlightColor
            },
            set: function(e) {
                this._mouseOverhighlightColor = e
            }
        },
        configParameters: {
            get: function() {
                return this._configParameters
            }
        }
    }), l.prototype.addToCesium = function(e) {
        var t = this;
        this._cesiumViewer = e;
        var i = Cesium.when.defer();
        return this._tileset = new Cesium.Cesium3DTileset({
            url: this._url,
            maximumScreenSpaceError: 2,
            maximumNumberOfLoadedTiles: 1e3
        }), this._tileset.readyPromise.then(function(n) {
            e.scene.primitives.add(n), n.show = t._active, t.registerClickEventHandlers();
            var o = Cesium.Cartographic.fromCartesian(n.boundingSphere.center),
                s = Cesium.Cartesian3.fromRadians(o.longitude, o.latitude, 0),
                r = Cesium.Cartesian3.fromRadians(o.longitude, o.latitude, t._offsetHeight),
                a = Cesium.Cartesian3.subtract(r, s, new Cesium.Cartesian3);
            n.modelMatrix = Cesium.Matrix4.fromTranslation(a), i.resolve(t)
        }).otherwise(function(e) {
            i.reject(new Cesium.DeveloperError("Failed to load: " + t._url))
        }), i.promise
    }, l.prototype.computeModelMatrix = function(e, t) {
        if (0 == arguments.length) return e;
        var i = Cesium.Transforms.localFrameToFixedFrameGenerator("north", "west"),
            n = Cesium.Matrix3.fromRotationX(Cesium.Math.toRadians(20)),
            o = Cesium.Matrix4.multiplyByMatrix3(e, n, new Cesium.Matrix4),
            s = Cesium.Cartesian3.fromRadians(t.longitude, t.latitude, t.height),
            r = (new Cesium.Cartesian3(0, 10, 0), Cesium.Quaternion.fromHeadingPitchRoll(new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(20), 0, 0), new Cesium.Quaternion)),
            a = Cesium.Matrix4.fromTranslationQuaternionRotationScale(Cesium.Cartesian3.ZERO, r, new Cesium.Cartesian3(1, 1, 1), a);
        Cesium.Matrix4.multiplyTransformation(e, a, new Cesium.Matrix4), Cesium.Transforms.headingPitchRollToFixedFrame(s, new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(20), 0, 0), Cesium.Ellipsoid.WGS84, i);
        return o
    }, l.prototype.registerTilesLoadedEventHandler = function() {
        var e = this;
        this._tileset.tileVisible.addEventListener(function(t) {
            if (t._content instanceof Cesium.PointCloud3DTileContent && (t._content._pointSize = 3), t._content instanceof Cesium.Batched3DModel3DTileContent)
                for (var i = t._content._features, n = t._content.featuresLength, o = 0; o < n; o++)
                    if (Cesium.defined(i)) {
                        var s = i[o],
                            r = s._content._batchTable.batchTableJson.name;
                        if (!Cesium.defined(r)) return;
                        var a = r[s._batchId];
                        e.isInHighlightedList(a) && !Cesium.Color.equals(s.color, e._highlightColor) && e.highlightObject(s), !e.isInHighlightedList(a) && Cesium.Color.equals(s.color, e._highlightColor) && e.unHighlightObject(s), e.isInHiddenList(a) ? e.hideObject(s) : e.showObject(s)
                    }
        })
    }, l.prototype.registerClickEventHandlers = function() {
        var e = (this._highlightColor, this._mouseOverhighlightColor, this);
        e.registerEventHandler("CLICK", function(t) {
            if (t._content instanceof Cesium.Batched3DModel3DTileContent) {
                var i = t._content._batchTable.batchTableJson.batchId,
                    n = t._content._batchTable.batchTableJson.name;
                if (Cesium.defined(i)) {
                    var o = i.indexOf(t._batchId),
                        s = n[o];
                    e._clickedObjects.splice(0, e._clickedObjects.length), e._clickedObjects.push(s), e.isInHighlightedList(s) || (e.unHighlightAllObjects(), e.highlight(s))
                }
            }
        }), e.registerEventHandler("CTRLCLICK", function(t) {
            if (t._content instanceof Cesium.Batched3DModel3DTileContent) {
                var i = t._content._batchTable.batchTableJson.name;
                if (Cesium.defined(i)) {
                    var n = i[t._batchId];
                    e.isInClickedList(n) ? e._clickedObjects.splice($.inArray(n, e._clickedObjects), 1) : e._clickedObjects.push(n), e.isInHighlightedList(n) ? e.unHighlight([n]) : e.highlight(n)
                }
            }
        })
    }, l.prototype.zoomTo = function() {
        this._cesiumViewer.scene.camera.flyToBoundingSphere(this._tileset.boundingSphere);
        var e = this._cesiumViewer.scene.globe.ellipsoid.cartesianToCartographic(this._tileset.boundingSphere.center),
            t = Cesium.Math.toDegrees(e.longitude).toFixed(8),
            i = Cesium.Math.toDegrees(e.latitude).toFixed(8);
        console.log(t, i, e.height)
    }, l.prototype.removeFromCesium = function(e) {
        this.activate(!1)
    }, l.prototype.activate = function(e) {
        this._tileset.show = e, this._active = e
    }, l.prototype.highlight = function(e) {
        if (null != e)
            if (e instanceof Array)
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    this.isInHighlightedList(i) || this._highlightedObjects.push(i);
                    for (var n = this.getObjectById(i), o = 0; o < n.length; o++) this.highlightObject(n[o])
                } else if ("string" == typeof e) {
                    var i = e;
                    this.isInHighlightedList(i) || this._highlightedObjects.push(i);
                    for (var n = this.getObjectById(i), t = 0; t < n.length; t++) this.highlightObject(n[t])
                }
    }, l.prototype.highlightObject = function(e) {
        if (null != e && e._content instanceof Cesium.Batched3DModel3DTileContent) {
            var t = e._content._batchTable.batchTableJson.batchId;
            e._content._batchTable.batchTableJson.name;
            Cesium.defined(t) && (Cesium.defined(e.getProperty("originalColorValue")) || e.setProperty("originalColorValue", Cesium.Color.clone(e.color)), e.color = this._highlightColor)
        }
    }, l.prototype.getObjectById = function(e) {
        for (var t = [], i = this._tileset._selectedTiles, n = 0; n < i.length; n++)
            if (i[n]._content instanceof Cesium.Batched3DModel3DTileContent) {
                var o = i[n]._content.batchTable.batchTableJson.name;
                if (!Cesium.defined(o)) break;
                var s = o.indexOf(e);
                if (s > -1 && Cesium.defined(i[n]._content._features)) {
                    var r = i[n]._content._features[s];
                    t.push(r)
                }
            }
        return t
    }, l.prototype.unHighlight = function(e) {
        if (e instanceof Array)
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (this.isInHighlightedList(i)) {
                    var n = $.inArray(i, this._highlightedObjects);
                    this._highlightedObjects.splice(n, 1)
                }
                for (var o = this.getObjectById(i), s = 0; s < o.length; s++) this.unHighlightObject(o[s])
            } else if ("string" == typeof e) {
                var i = e;
                if (this.isInHighlightedList(i)) {
                    var n = $.inArray(i, this._highlightedObjects);
                    this._highlightedObjects.splice(n, 1)
                }
                for (var o = this.getObjectById(i), s = 0; s < o.length; s++) this.unHighlightObject(o[s])
            } else {
                for (var r = this._highlightedObjects, t = 0; t < r.length; t++)
                    for (var i = r[t], o = this.getObjectById(i), s = 0; s < o.length; s++) this.unHighlightObject(o[s]);
                this._highlightedObjects.splice(0, this._highlightedObjects.length)
            }
    }, l.prototype.unHighlightObject = function(e) {
        var t = e.getProperty("originalColorValue");
        Cesium.defined(t) && (e.color = t)
    }, l.prototype.hideObjects = function(e) {
        if (e instanceof Array)
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                this.isInHiddenList(i) || this._hiddenObjects.push(i);
                for (var n = this.getObjectById(i), o = 0; o < n.length; o++) this.hideObject(n[o])
            } else if ("string" == typeof e) {
                var i = e;
                if (this.isInHiddenList(i)) {
                    var s = $.inArray(i, this._hiddenObjects);
                    this._hiddenObjects.splice(s, 1)
                }
                for (var n = this.getObjectById(i), o = 0; o < n.length; o++) this.hideObject(n[o])
            } else
                for (var r = this._clickedObjects, t = 0; t < r.length; t++) {
                    var i = r[t];
                    this.isInHiddenList(i) || this._hiddenObjects.push(i);
                    for (var n = this.getObjectById(i), o = 0; o < n.length; o++) this.hideObject(n[o])
                }
    }, l.prototype.isInClickedList = function(e) {
        return this._clickedObjects.indexOf(e) > -1
    }, l.prototype.hideObject = function(e) {
        e ? e.show = !1 : this._tileset.show = !1
    }, l.prototype.isInHiddenList = function(e) {
        return this._hiddenObjects.indexOf(e) > -1
    }, l.prototype.hasHiddenObjects = function() {
        return this._hiddenObjects.length > 0
    }, l.prototype.isHiddenObject = function(e) {
        return !e.show
    }, l.prototype.showObjects = function(e) {
        if (e instanceof Array)
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (this.isInHiddenList(i)) {
                    var n = $.inArray(i, this._hiddenObjects);
                    this._hiddenObjects.splice(n, 1)
                }
                for (var o = this.getObjectById(i), s = 0; s < o.length; s++) this.showObject(o[s])
            } else {
                for (var r = this._hiddenObjects, t = 0; t < r.length; t++)
                    for (var i = r[t], o = this.getObjectById(i), s = 0; s < o.length; s++) this.showObject(o[s]);
                this._hiddenObjects.splice(0, this._hiddenObjects.length)
            }
    }, l.prototype.showObject = function(e) {
        e ? e.show = !0 : this._tileset.show = !0
    }, l.prototype.showAll = function() {
        this._tileset.show || (this._tileset.show = !0, this._listener.fire("check", this._id))
    }, l.prototype.hideAll = function() {
        this._tileset.show && (this._tileset.show = !1, this._listener.fire("uncheck", this._id))
    }, l.prototype.unHighlightAllObjects = function() {
        for (var e = this._highlightedObjects, t = 0; t < e.length; t++)
            for (var i = e[t], n = this.getObjectById(i), o = 0; o < n.length; o++) this.unHighlightObject(n[o]);
        this._highlightedObjects.splice(0, this._highlightedObjects.length)
    }, l.prototype.isInHighlightedList = function(e) {
        return this._highlightedObjects.indexOf(e) > -1
    }, l.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, l.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, l.prototype.on = function(e, t) {
        return "click" == e ? this._listener.on("CLICK", t) : this._listener.on(e, t)
    }, l.prototype.off = function(e) {
        this._listener.off(e)
    }, l.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? (this._listener.fire("CLICK", {
            position: i,
            entity: t
        }), this._clickEvent.raiseEvent(t, e)) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, l.prototype.MoveToPraLocation = function(e, t, i, n) {
        if (this._tileset) {
            var o = Cesium.Cartesian3.fromDegrees(e, t, i),
                s = Cesium.Transforms.eastNorthUpToFixedFrame(o),
                r = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(n)));
            Cesium.Matrix4.multiply(s, r, s), this._tileset._root.transform = s
        }
    }, void 0 === Date.now && (Date.now = function() {
        return (new Date).valueOf()
    });
    var Ct = Ct || function() {
        var e = [];
        return {
            REVISION: "13",
            getAll: function() {
                return e
            },
            removeAll: function() {
                e = []
            },
            add: function(t) {
                e.push(t)
            },
            remove: function(t) {
                var i = e.indexOf(t); - 1 !== i && e.splice(i, 1)
            },
            update: function(t) {
                if (0 === e.length) return !1;
                var i = 0;
                for (t = void 0 !== t ? t : "undefined" != typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(); i < e.length;) e[i].update(t) ? i++ : e.splice(i, 1);
                return !0
            }
        }
    }();
    Ct.Tween = function(e) {
        var t = e,
            i = {},
            n = {},
            o = {},
            s = 1e3,
            r = 0,
            a = !1,
            l = !1,
            c = !1,
            h = 0,
            u = null,
            d = Ct.Easing.Linear.None,
            p = Ct.Interpolation.Linear,
            m = [],
            f = null,
            g = !1,
            v = null,
            C = null,
            y = null;
        for (var _ in e) i[_] = parseFloat(e[_], 10);
        this.to = function(e, t) {
            return void 0 !== t && (s = t), n = e, this
        }, this.start = function(e) {
            Ct.add(this), l = !0, g = !1, u = void 0 !== e ? e : "undefined" != typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(), u += h;
            for (var s in n) {
                if (n[s] instanceof Array) {
                    if (0 === n[s].length) continue;
                    n[s] = [t[s]].concat(n[s])
                }
                i[s] = t[s], i[s] instanceof Array == !1 && (i[s] *= 1), o[s] = i[s] || 0
            }
            return this
        }, this.stop = function() {
            return l ? (Ct.remove(this), l = !1, null !== y && y.call(t), this.stopChainedTweens(), this) : this
        }, this.stopChainedTweens = function() {
            for (var e = 0, t = m.length; e < t; e++) m[e].stop()
        }, this.delay = function(e) {
            return h = e, this
        }, this.repeat = function(e) {
            return r = e, this
        }, this.yoyo = function(e) {
            return a = e, this
        }, this.easing = function(e) {
            return d = e, this
        }, this.interpolation = function(e) {
            return p = e, this
        }, this.chain = function() {
            return m = arguments, this
        }, this.onStart = function(e) {
            return f = e, this
        }, this.onUpdate = function(e) {
            return v = e, this
        }, this.onComplete = function(e) {
            return C = e, this
        }, this.onStop = function(e) {
            return y = e, this
        }, this.update = function(e) {
            var l;
            if (e < u) return !0;
            !1 === g && (null !== f && f.call(t), g = !0);
            var y = (e - u) / s;
            y = y > 1 ? 1 : y;
            var _ = d(y);
            for (l in n) {
                var b = i[l] || 0,
                    w = n[l];
                w instanceof Array ? t[l] = p(w, _) : ("string" == typeof w && (w = b + parseFloat(w, 10)), "number" == typeof w && (t[l] = b + (w - b) * _))
            }
            if (null !== v && v.call(t, _), 1 == y) {
                if (r > 0) {
                    isFinite(r) && r--;
                    for (l in o) {
                        if ("string" == typeof n[l] && (o[l] = o[l] + parseFloat(n[l], 10)), a) {
                            var x = o[l];
                            o[l] = n[l], n[l] = x
                        }
                        i[l] = o[l]
                    }
                    return a && (c = !c), u = e + h, !0
                }
                null !== C && C.call(t);
                for (var E = 0, T = m.length; E < T; E++) m[E].start(e);
                return !1
            }
            return !0
        }
    }, Ct.Easing = {
        Linear: {
            None: function(e) {
                return e
            }
        },
        Quadratic: {
            In: function(e) {
                return e * e
            },
            Out: function(e) {
                return e * (2 - e)
            },
            InOut: function(e) {
                return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1)
            }
        },
        Cubic: {
            In: function(e) {
                return e * e * e
            },
            Out: function(e) {
                return --e * e * e + 1
            },
            InOut: function(e) {
                return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2)
            }
        },
        Quartic: {
            In: function(e) {
                return e * e * e * e
            },
            Out: function(e) {
                return 1 - --e * e * e * e
            },
            InOut: function(e) {
                return (e *= 2) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2)
            }
        },
        Quintic: {
            In: function(e) {
                return e * e * e * e * e
            },
            Out: function(e) {
                return --e * e * e * e * e + 1
            },
            InOut: function(e) {
                return (e *= 2) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2)
            }
        },
        Sinusoidal: {
            In: function(e) {
                return 1 - Math.cos(e * Math.PI / 2)
            },
            Out: function(e) {
                return Math.sin(e * Math.PI / 2)
            },
            InOut: function(e) {
                return .5 * (1 - Math.cos(Math.PI * e))
            }
        },
        Exponential: {
            In: function(e) {
                return 0 === e ? 0 : Math.pow(1024, e - 1)
            },
            Out: function(e) {
                return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
            },
            InOut: function(e) {
                return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? .5 * Math.pow(1024, e - 1) : .5 * (2 - Math.pow(2, -10 * (e - 1)))
            }
        },
        Circular: {
            In: function(e) {
                return 1 - Math.sqrt(1 - e * e)
            },
            Out: function(e) {
                return Math.sqrt(1 - --e * e)
            },
            InOut: function(e) {
                return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
            }
        },
        Elastic: {
            In: function(e) {
                var t, i = .1;
                return 0 === e ? 0 : 1 === e ? 1 : (!i || i < 1 ? (i = 1, t = .1) : t = .4 * Math.asin(1 / i) / (2 * Math.PI), -i * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * (2 * Math.PI) / .4))
            },
            Out: function(e) {
                var t, i = .1;
                return 0 === e ? 0 : 1 === e ? 1 : (!i || i < 1 ? (i = 1, t = .1) : t = .4 * Math.asin(1 / i) / (2 * Math.PI), i * Math.pow(2, -10 * e) * Math.sin((e - t) * (2 * Math.PI) / .4) + 1)
            },
            InOut: function(e) {
                var t, i = .1;
                return 0 === e ? 0 : 1 === e ? 1 : (!i || i < 1 ? (i = 1, t = .1) : t = .4 * Math.asin(1 / i) / (2 * Math.PI), (e *= 2) < 1 ? i * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * (2 * Math.PI) / .4) * -.5 : i * Math.pow(2, -10 * (e -= 1)) * Math.sin((e - t) * (2 * Math.PI) / .4) * .5 + 1)
            }
        },
        Back: {
            In: function(e) {
                var t = 1.70158;
                return e * e * ((t + 1) * e - t)
            },
            Out: function(e) {
                var t = 1.70158;
                return --e * e * ((t + 1) * e + t) + 1
            },
            InOut: function(e) {
                var t = 2.5949095;
                return (e *= 2) < 1 ? e * e * ((t + 1) * e - t) * .5 : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
            }
        },
        Bounce: {
            In: function(e) {
                return 1 - Ct.Easing.Bounce.Out(1 - e)
            },
            Out: function(e) {
                return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
            },
            InOut: function(e) {
                return e < .5 ? .5 * Ct.Easing.Bounce.In(2 * e) : .5 * Ct.Easing.Bounce.Out(2 * e - 1) + .5
            }
        }
    }, Ct.Interpolation = {
        Linear: function(e, t) {
            var i = e.length - 1,
                n = i * t,
                o = Math.floor(n),
                s = Ct.Interpolation.Utils.Linear;
            return t < 0 ? s(e[0], e[1], n) : t > 1 ? s(e[i], e[i - 1], i - n) : s(e[o], e[o + 1 > i ? i : o + 1], n - o)
        },
        Bezier: function(e, t) {
            var i, n = 0,
                o = e.length - 1,
                s = Math.pow,
                r = Ct.Interpolation.Utils.Bernstein;
            for (i = 0; i <= o; i++) n += s(1 - t, o - i) * s(t, i) * e[i] * r(o, i);
            return n
        },
        CatmullRom: function(e, t) {
            var i = e.length - 1,
                n = i * t,
                o = Math.floor(n),
                s = Ct.Interpolation.Utils.CatmullRom;
            return e[0] === e[i] ? (t < 0 && (o = Math.floor(n = i * (1 + t))), s(e[(o - 1 + i) % i], e[o], e[(o + 1) % i], e[(o + 2) % i], n - o)) : t < 0 ? e[0] - (s(e[0], e[0], e[1], e[1], -n) - e[0]) : t > 1 ? e[i] - (s(e[i], e[i], e[i - 1], e[i - 1], n - i) - e[i]) : s(e[o ? o - 1 : 0], e[o], e[i < o + 1 ? i : o + 1], e[i < o + 2 ? i : o + 2], n - o)
        },
        Utils: {
            Linear: function(e, t, i) {
                return (t - e) * i + e
            },
            Bernstein: function(e, t) {
                var i = Ct.Interpolation.Utils.Factorial;
                return i(e) / i(t) / i(e - t)
            },
            Factorial: function() {
                var e = [1];
                return function(t) {
                    var i, n = 1;
                    if (e[t]) return e[t];
                    for (i = t; i > 1; i--) n *= i;
                    return e[t] = n
                }
            }(),
            CatmullRom: function(e, t, i, n, o) {
                var s = .5 * (i - e),
                    r = .5 * (n - t),
                    a = o * o;
                return (2 * t - 2 * i + s + r) * (o * a) + (-3 * t + 3 * i - 2 * s - r) * a + s * o + t
            }
        }
    }, c.prototype.init = function(e, t) {
        if (e >= this.cameraKeys.length - 1) return void this.stop();
        var i = e + 1,
            n = e < 0 ? 0 : this.cameraKeys[e].time;
        this.startTime = Date.now();
        var o = {
                destination: this.cameraKeys[i].destination,
                orientation: this.cameraKeys[i].orientation,
                duration: (this.cameraKeys[i].time - n - t) / 1e3,
                easingFunction: Ct.Easing.Linear.None
            },
            s = this;
        c.prototype.flytoCameraKey = function() {
            this.currentKey++, s.init(this.currentKey, 0)
        }, o.complete = function() {
            s.flytoCameraKey()
        }, this.camera.flyTo(o)
    }, c.prototype.getAllKeys = function() {
        return this.cameraKeys
    }, c.prototype.loadLine = function(e) {
        for (var t = 0, i = 0; i < e.length; i++) 0 != i && (t += 1e3 * parseInt(e[i].timeInterval)), this.getAllKeys().push({
            destination: new Cesium.Cartesian3(e[i].posx, e[i].posy, e[i].posz),
            orientation: {
                direction: new Cesium.Cartesian3(e[i].directionx, e[i].directiony, e[i].directionz),
                up: new Cesium.Cartesian3(e[i].upx, e[i].upy, e[i].upz)
            },
            time: t
        }), 0 == i && (t += 1e3 * parseInt(e[i].timeInterval), this.getAllKeys().push({
            destination: new Cesium.Cartesian3(e[i].posx, e[i].posy, e[i].posz),
            orientation: {
                direction: new Cesium.Cartesian3(e[i].directionx, e[i].directiony, e[i].directionz),
                up: new Cesium.Cartesian3(e[i].upx, e[i].upy, e[i].upz)
            },
            time: t
        }));
        this.play()
    }, c.prototype.clear = function() {
        this.startTime = 0, this._pause = !1, this.currentKey = 0, this.scene.tweens.removeAll(), this.cameraKeys = []
    }, c.prototype.play = function() {
        this._pause ? (this.init(this.currentKey, this.pauseTime - this.startTime), this._pause = !1) : this.init(this.currentKey, 0)
    }, c.prototype.pause = function() {
        this._pause && (this.pauseTime = Date.now()), this.scene.tweens.removeAll()
    }, c.prototype.stop = function() {
        this.startTime = 0, this._pause = !1, this.currentKey = -1, this.scene.tweens.removeAll(), this._listener.fire("end", {})
    }, c.prototype.on = function(e, t) {
        var i = -1;
        return "end" == e && (i = this._listener.on("end", t)), i
    };
    var yt = function() {
        function e(e, i) {
            this.$input = null, this.$type = "prompt", this.$promptType = e, i = t.extend({}, r.prompt.DEFAULT_OPTIONS, i), this.$options = this._processInput(i), this._init(), this.debug(this)
        }

        function i(e) {
            this.$type = "confirm", this.$options = this._processInput(e), this._init(), this.debug(this)
        }

        function n(e, t) {
            this.$type = e, this.$options = this._processInput(t), this._init(), this.debug(this)
        }

        function o(e) {
            this.$type = "progress", this.$progressBarElement = null, this.$options = this._processInput(e), this.$progress = 0, this._init(), this.debug(this)
        }

        function s(e, t) {
            this.$type = e, this.$options = this._processInput(t), this._init(), this.debug(this)
        }
        var r = this;
        Math.randomString = function(e) {
            for (var t = "", i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = 0; n < e; n++) t += i.charAt(Math.floor(Math.random() * i.length));
            return t
        }, r.viewport = "body", r.counter = 0, r.prompt = function(t, i) {
            return new e(t, i)
        }, r.confirm = function(e) {
            return new i(e)
        }, r.progress = function(e) {
            return new o(e)
        }, r.error = {}, r.success = {}, r.warning = {}, r.info = {}, r.alert = function(e, t) {
            if (["success", "error", "warning", "info"].indexOf(e) > -1) return new n(e, t)
        }, r.window = function(e) {
            return new s("window", e)
        };
        var a = {
            $type: null,
            $el: null,
            $options: null,
            debug: function() {
                this.$options.debug && window.console.debug.apply(window.console, arguments)
            },
            _processInput: function(e) {
                if (t.isArray(e.buttons)) {
                    for (var i = {}, n = 0; n < e.buttons.length; n++) i[e.buttons[n]] = r.base.OPTIONS.buttons[e.buttons[n]];
                    e.buttons = i
                }
                e.customBtnClass = e.customBtnClass ? e.customBtnClass : r.base.DEFAULTS.customBtnClass;
                for (var n in e.buttons)
                    if (e.buttons.hasOwnProperty(n)) {
                        var o = e.buttons[n];
                        o = t.extend({}, r.base.OPTIONS.buttons[n], o), o.class || (o.class = e.customBtnClass), e.buttons[n] = o
                    }
                return e = t.extend({}, r.base.DEFAULTS, e), void 0 === e.showClass && (e.showClass = r.base.OPTIONS.showClass), void 0 === e.hideClass && (e.hideClass = r.base.OPTIONS.hideClass), void 0 === e.baseClass && (e.baseClass = r.base.OPTIONS.baseClass), void 0 === e.delayToRemove && (e.delayToRemove = r.base.OPTIONS.delayToRemove), e.iconClass || (e.iconClass = r.base.OPTIONS.icons[e.iconSource][this.$type]), e
            },
            _init: function() {
                var e = this;
                e._createMarkup(), e.setTitle(e.$options.title), e.$options.draggable && !e._isMobileScreen() && (e.$el.addClass("draggable"), e._enableDrag()), e.$options.closeButton && e._addCloseButton(), e.$options.closeOnEsc && t(document).on("keyup.lobibox", function(t) {
                    27 === t.which && e.destroy()
                }), e.$options.baseClass && e.$el.addClass(e.$options.baseClass), e.$options.showClass && (e.$el.removeClass(e.$options.hideClass), e.$el.addClass(e.$options.showClass)), e.$el.data("lobibox", e)
            },
            _calculatePosition: function(e) {
                var i, n = this;
                return i = "top" === e ? 30 : "bottom" === e ? t(window).outerHeight() - n.$el.outerHeight() - 30 : (t(window).outerHeight() - n.$el.outerHeight()) / 2, {
                    left: (t(window).outerWidth() - n.$el.outerWidth()) / 2,
                    top: i
                }
            },
            _createButton: function(e, i) {
                var n = this,
                    o = t("<button></button>").addClass(i.class).attr("data-type", e).html(i.text);
                return n.$options.callback && "function" == typeof n.$options.callback && o.on("click.lobibox", function(i) {
                    var o = t(this);
                    n._onButtonClick(n.$options.buttons[e], e), n.$options.callback(n, o.data("type"), i)
                }), o.click(function() {
                    n._onButtonClick(n.$options.buttons[e], e)
                }), o
            },
            _onButtonClick: function(e, t) {
                var i = this;
                ("ok" === t && "prompt" === i.$type && i.isValid() || "prompt" !== i.$type || "ok" !== t) && e && e.closeOnClick && i.destroy()
            },
            _generateButtons: function() {
                var e = this,
                    t = [];
                for (var i in e.$options.buttons)
                    if (e.$options.buttons.hasOwnProperty(i)) {
                        var n = e.$options.buttons[i],
                            o = e._createButton(i, n);
                        t.push(o)
                    }
                return t
            },
            _createMarkup: function() {
                var e = this,
                    i = t('<div class="lobibox"></div>');
                i.attr("data-is-modal", e.$options.modal);
                var n = t('<div class="lobibox-header"></div>').append('<span class="lobibox-title"></span>'),
                    o = t('<div class="lobibox-body"></div>');
                if (i.append(n), i.append(o), e.$options.buttons && !t.isEmptyObject(e.$options.buttons)) {
                    var s = t('<div class="lobibox-footer"></div>');
                    s.append(e._generateButtons()), i.append(s), r.base.OPTIONS.buttonsAlign.indexOf(e.$options.buttonsAlign) > -1 && s.addClass("text-" + e.$options.buttonsAlign)
                }
                e.$el = i.addClass(r.base.OPTIONS.modalClasses[e.$type])
            },
            _setSize: function() {
                var e = this;
                e.setWidth(e.$options.width), "auto" === e.$options.height ? e.setHeight(e.$el.outerHeight()) : e.setHeight(e.$options.height)
            },
            _calculateBodyHeight: function(e) {
                var t = this,
                    i = t.$el.find(".lobibox-header").outerHeight(),
                    n = t.$el.find(".lobibox-footer").outerHeight();
                return e - (i || 0) - (n || 0)
            },
            _addBackdrop: function() {
                0 === t(".lobibox-backdrop").length && t(r.viewport).append('<div class="lobibox-backdrop"></div>')
            },
            _triggerEvent: function(e) {
                var t = this;
                t.$options[e] && "function" == typeof t.$options[e] && t.$options[e](t)
            },
            _calculateWidth: function(e) {
                var i = this;
                return e = Math.min(Math.max(e, i.$options.width), t(window).outerWidth()), e === t(window).outerWidth() && (e -= 2 * i.$options.horizontalOffset), e
            },
            _calculateHeight: function(e) {
                var i = this;
                return e = Math.min(Math.max(e, i.$options.height), t(window).outerHeight()), e === t(window).outerHeight() && (e -= 2 * i.$options.verticalOffset), e
            },
            _addCloseButton: function() {
                var e = this,
                    i = t('<span class="btn-close">&times;</span>');
                e.$el.find(".lobibox-header").append(i), i.on("mousedown", function(e) {
                    e.stopPropagation()
                }), i.on("click.lobibox", function() {
                    e.destroy()
                })
            },
            _position: function() {
                var e = this;
                e._setSize();
                var t = e._calculatePosition();
                e.setPosition(t.left, t.top)
            },
            _isMobileScreen: function() {
                return t(window).outerWidth() < 768
            },
            _enableDrag: function() {
                var e = this.$el,
                    i = e.find(".lobibox-header");
                i.on("mousedown.lobibox", function(t) {
                    e.attr("offset-left", t.offsetX), e.attr("offset-top", t.offsetY), e.attr("allow-drag", "true"), e[0].style.zIndex = (new Date).getTime() - r.window.startTime
                }), i.on("touchstart.lobibox", function(t) {
                    var i = e.position().left,
                        n = e.position().top,
                        o = t.originalEvent.targetTouches[0].clientX,
                        s = t.originalEvent.targetTouches[0].clientY;
                    e.attr("offset-left", o - i), e.attr("offset-top", s - n), e.attr("allow-drag", "true")
                }), t(document).on("mouseup.lobibox", function() {
                    e.attr("allow-drag", "false")
                }), t(document).on("mousemove.lobibox", function(i) {
                    if ("true" === e.attr("allow-drag")) {
                        var n = i.clientX - parseInt(e.attr("offset-left"), 10) - parseInt(e.css("border-left-width"), 10),
                            o = i.clientY - parseInt(e.attr("offset-top"), 10) - parseInt(e.css("border-top-width"), 10);
                        o < 0 && (o = 5), o > t(window).height() && (o = t(window).height() - 10), n < 0 && (n = 5), n > t(window).width() && (n = t(window).width() - 10), e.css({
                            left: n,
                            top: o
                        })
                    }
                }), t(document).on("touchend.lobibox", function() {
                    e.attr("allow-drag", "false")
                }), t(document).on("touchmove.lobibox", function(i) {
                    if ("true" === e.attr("allow-drag")) {
                        var n = i.originalEvent.targetTouches[0].clientX - parseInt(e.attr("offset-left"), 10) - parseInt(e.css("border-left-width"), 10),
                            o = i.originalEvent.targetTouches[0].clientY - parseInt(e.attr("offset-top"), 10) - parseInt(e.css("border-top-width"), 10);
                        o < 0 && (o = 5), o > t(window).height() && (o = t(window).height() - 10), n < 0 && (n = 5), n > t(window).width() && (n = t(window).width() - 10), e.css({
                            left: n,
                            top: o
                        })
                    }
                })
            },
            _setContent: function(e) {
                var t = this;
                return t.$el.find(".lobibox-body").html(e), t
            },
            _beforeShow: function() {
                this._triggerEvent("onShow")
            },
            _afterShow: function() {
                var e = this;
                r.counter++, e.$el.attr("data-nth", r.counter), e.$options.draggable || t(window).on("resize.lobibox-" + e.$el.attr("data-nth"), function() {
                    e.refreshWidth(), e.refreshHeight(), e.$el.css("left", "50%").css("margin-left", "-" + e.$el.width() / 2 + "px"), e.$el.css("top", "50%").css("margin-top", "-" + e.$el.height() / 2 + "px")
                }), e._triggerEvent("shown")
            },
            _beforeClose: function() {
                this._triggerEvent("beforeClose")
            },
            _afterClose: function() {
                var e = this;
                e.$options.draggable || t(window).off("resize.lobibox-" + e.$el.attr("data-nth")), e._triggerEvent("closed")
            },
            _beforeHide: function() {
                this._triggerEvent("beforeHide")
            },
            _afterHide: function() {
                this._triggerEvent("afterHide")
            },
            hide: function() {
                function e() {
                    i.$el.addClass("lobibox-hidden"), 0 === t(".lobibox[data-is-modal=true]:not(.lobibox-hidden)").length && (t(".lobibox-backdrop").remove(), t(r.viewport).removeClass(r.base.OPTIONS.bodyClass)), i._afterHide()
                }
                var i = this;
                return i._beforeHide(), i.$options.hideClass ? (i.$el.removeClass(i.$options.showClass), i.$el.addClass(i.$options.hideClass), setTimeout(function() {
                    e()
                }, i.$options.delayToRemove)) : e(), this
            },
            destroy: function() {
                function e() {
                    i.$el.remove(), 0 === t(".lobibox[data-is-modal=true]").length && (t(".lobibox-backdrop").remove(), t(r.viewport).removeClass(r.base.OPTIONS.bodyClass)), i._afterClose()
                }
                var i = this;
                return i._beforeClose(), i.$options.hideClass ? (i.$el.removeClass(i.$options.showClass).addClass(i.$options.hideClass), setTimeout(function() {
                    e()
                }, i.$options.delayToRemove)) : e(), this
            },
            setWidth: function(e) {
                var t = this;
                return t.$el.css("width", t._calculateWidth(e)), t
            },
            refreshWidth: function() {
                this.setWidth(this.$el.width())
            },
            refreshHeight: function() {
                this.setHeight(this.$el.height())
            },
            setHeight: function(e) {
                var t = this;
                return t.$el.css("height", t._calculateHeight(e)).find(".lobibox-body").css("height", t.$options.height - 51), t
            },
            setSize: function(e, t) {
                var i = this;
                return i.setWidth(e), i.setHeight(t), i
            },
            setPosition: function(e, t) {
                var i;
                return "number" == typeof e && "number" == typeof t ? i = {
                    left: e,
                    top: t
                } : "string" == typeof e ? i = this._calculatePosition(e) : "object" == typeof e && (i = e), this.$el.css(i), this
            },
            setTitle: function(e) {
                return this.$el.find(".lobibox-title").html(e)
            },
            getTitle: function() {
                return this.$el.find(".lobibox-title").html()
            },
            show: function() {
                var e = this,
                    i = t(r.viewport);
                if (e._beforeShow(), e.$el.removeClass("lobibox-hidden"), i.append(e.$el), e.$options.buttons) {
                    e.$el.find(".lobibox-footer").children()[0].focus()
                }
                return e.$options.modal && (i.addClass(r.base.OPTIONS.bodyClass), e._addBackdrop()), !1 !== e.$options.delay && setTimeout(function() {
                    e.destroy()
                }, e.$options.delay), e._afterShow(), e
            }
        };
        r.base = {}, r.base.OPTIONS = {
            bodyClass: "lobibox-open",
            modalClasses: {
                error: "lobibox-error",
                success: "lobibox-success",
                info: "lobibox-info",
                warning: "lobibox-warning",
                confirm: "lobibox-confirm",
                progress: "lobibox-progress",
                prompt: "lobibox-prompt",
                default: "lobibox-default",
                window: "lobibox-window"
            },
            buttonsAlign: ["left", "center", "right"],
            buttons: {
                ok: {
                    class: "lobibox-btn lobibox-btn-default",
                    text: "OK",
                    closeOnClick: !0
                },
                cancel: {
                    class: "lobibox-btn lobibox-btn-cancel",
                    text: "Cancel",
                    closeOnClick: !0
                },
                yes: {
                    class: "lobibox-btn lobibox-btn-yes",
                    text: "Yes",
                    closeOnClick: !0
                },
                no: {
                    class: "lobibox-btn lobibox-btn-no",
                    text: "No",
                    closeOnClick: !0
                }
            },
            icons: {
                bootstrap: {
                    confirm: "glyphicon glyphicon-question-sign",
                    success: "glyphicon glyphicon-ok-sign",
                    error: "glyphicon glyphicon-remove-sign",
                    warning: "glyphicon glyphicon-exclamation-sign",
                    info: "glyphicon glyphicon-info-sign"
                },
                fontAwesome: {
                    confirm: "fa fa-question-circle",
                    success: "fa fa-check-circle",
                    error: "fa fa-times-circle",
                    warning: "fa fa-exclamation-circle",
                    info: "fa fa-info-circle"
                }
            }
        }, r.base.DEFAULTS = {
            horizontalOffset: 5,
            verticalOffset: 5,
            width: 600,
            height: "auto",
            closeButton: !0,
            draggable: !0,
            customBtnClass: "lobibox-btn lobibox-btn-default",
            modal: !1,
            debug: !1,
            buttonsAlign: "center",
            closeOnEsc: !0,
            delayToRemove: 200,
            delay: !1,
            baseClass: "animated-super-fast",
            showClass: "zoomIn",
            hideClass: "zoomOut",
            iconSource: "bootstrap",
            onShow: null,
            shown: null,
            beforeClose: null,
            closed: null
        }, e.prototype = t.extend({}, a, {
            constructor: e,
            _processInput: function(i) {
                var n = this,
                    o = a._processInput.call(n, i);
                return o.buttons = {
                    ok: r.base.OPTIONS.buttons.ok,
                    cancel: r.base.OPTIONS.buttons.cancel
                }, i = t.extend({}, o, e.DEFAULT_OPTIONS, i)
            },
            _init: function() {
                var e = this;
                a._init.call(e), e.show()
            },
            _afterShow: function() {
                var e = this;
                e._setContent(e._createInput())._position(), e.$input.focus(), a._afterShow.call(e)
            },
            _createInput: function() {
                var e, i = this;
                return i.$options.multiline ? i.$input = t("<textarea></textarea>").attr("rows", i.$options.lines) : i.$input = t('<input type="' + i.$promptType + '"/>'), i.$input.addClass("lobibox-input").attr(i.$options.attrs), i.$options.value && i.setValue(i.$options.value), i.$options.label && (e = t("<label>" + i.$options.label + "</label>")), t("<div></div>").append(e, i.$input)
            },
            setValue: function(e) {
                return this.$input.val(e), this
            },
            getValue: function() {
                return this.$input.val()
            },
            isValid: function() {
                var e = this,
                    t = e.$el.find(".lobibox-input-error-message");
                return e.$options.required && !e.getValue() ? (e.$input.addClass("invalid"), 0 === t.length && (e.$el.find(".lobibox-body").append('<p class="lobibox-input-error-message">' + e.$options.errorMessage + "</p>"), e._position(), e.$input.focus()), !1) : (e.$input.removeClass("invalid"), t.remove(), e._position(), e.$input.focus(), !0)
            }
        }), e.DEFAULT_OPTIONS = {
            width: 400,
            attrs: {},
            value: "",
            multiline: !1,
            lines: 3,
            type: "text",
            label: "",
            required: !0,
            errorMessage: "The field is required"
        }, i.prototype = t.extend({}, a, {
            constructor: i,
            _processInput: function(e) {
                var i = this,
                    n = a._processInput.call(i, e);
                return n.buttons = {
                    yes: r.base.OPTIONS.buttons.yes,
                    no: r.base.OPTIONS.buttons.no
                }, e = t.extend({}, n, r.confirm.DEFAULTS, e)
            },
            _init: function() {
                var e = this;
                a._init.call(e), e.show()
            },
            _afterShow: function() {
                var e = this,
                    i = t("<div></div>");
                e.$options.iconClass && i.append(t('<div class="lobibox-icon-wrapper"></div>').append('<i class="lobibox-icon ' + e.$options.iconClass + '"></i>')), i.append('<div class="lobibox-body-text-wrapper"><span class="lobibox-body-text">' + e.$options.msg + "</span></div>"), e._setContent(i.html()), e._position(), a._afterShow.call(e)
            }
        }), r.confirm.DEFAULTS = {
            title: "Question",
            width: 500
        }, n.prototype = t.extend({}, a, {
            constructor: n,
            _processInput: function(e) {
                var i = this,
                    n = a._processInput.call(i, e);
                return n.buttons = {
                    ok: r.base.OPTIONS.buttons.ok
                }, e = t.extend({}, n, r.alert.OPTIONS[i.$type], r.alert.DEFAULTS, e)
            },
            _init: function() {
                var e = this;
                a._init.call(e), e.show()
            },
            _afterShow: function() {
                var e = this,
                    i = t("<div></div>");
                e.$options.iconClass && i.append(t('<div class="lobibox-icon-wrapper"></div>').append('<i class="lobibox-icon ' + e.$options.iconClass + '"></i>')), i.append('<div class="lobibox-body-text-wrapper"><span class="lobibox-body-text">' + e.$options.msg + "</span></div>"), e._setContent(i.html()), e._position(), a._afterShow.call(e)
            }
        }), r.alert.OPTIONS = {
            warning: {
                title: "Warning"
            },
            info: {
                title: "Information"
            },
            success: {
                title: "Success"
            },
            error: {
                title: "Error"
            }
        }, r.alert.DEFAULTS = {}, o.prototype = t.extend({}, a, {
            constructor: o,
            _processInput: function(e) {
                var i = this,
                    n = a._processInput.call(i, e);
                return e = t.extend({}, n, r.progress.DEFAULTS, e)
            },
            _init: function() {
                var e = this;
                a._init.call(e), e.show()
            },
            _afterShow: function() {
                var e = this;
                e.$options.progressTpl ? e.$progressBarElement = t(e.$options.progressTpl) : e.$progressBarElement = e._createProgressbar();
                var i;
                e.$options.label && (i = t("<label>" + e.$options.label + "</label>"));
                var n = t("<div></div>").append(i, e.$progressBarElement);
                e._setContent(n), e._position(), a._afterShow.call(e)
            },
            _createProgressbar: function() {
                var e = this,
                    i = t('<div class="lobibox-progress-bar-wrapper lobibox-progress-outer"></div>').append('<div class="lobibox-progress-bar lobibox-progress-element"></div>');
                return e.$options.showProgressLabel && i.append('<span class="lobibox-progress-text" data-role="progress-text"></span>'), i
            },
            setProgress: function(e) {
                var t = this;
                if (100 !== t.$progress) return e = Math.min(100, Math.max(0, e)), t.$progress = e, t._triggerEvent("progressUpdated"), 100 === t.$progress && t._triggerEvent("progressCompleted"), t.$el.find(".lobibox-progress-element").css("width", e.toFixed(1) + "%"), t.$el.find('[data-role="progress-text"]').html(e.toFixed(1) + "%"), t
            },
            getProgress: function() {
                return this.$progress
            }
        }), r.progress.DEFAULTS = {
            width: 500,
            showProgressLabel: !0,
            label: "",
            progressTpl: !1,
            progressUpdated: null,
            progressCompleted: null
        }, s.prototype = t.extend({}, a, {
            constructor: s,
            _processInput: function(e) {
                var i = this,
                    n = a._processInput.call(i, e);
                return e.content && "function" == typeof e.content && (e.content = e.content()), e.content instanceof jQuery && (e.content = e.content.clone()), e = t.extend({}, n, r.window.DEFAULTS, e)
            },
            _init: function() {
                var e = this;
                a._init.call(e), e.setContent(e.$options.content), e.$options.url && e.$options.autoload ? (e.$options.showAfterLoad || e.show(), e.load(function() {
                    e.$options.showAfterLoad && e.show()
                })) : e.show()
            },
            _afterShow: function() {
                var e = this;
                e._position(), a._afterShow.call(e)
            },
            _addCloseButton: function() {
                var e = this,
                    i = t('<span class="btn-close">&times;</span>');
                e.$el.find(".lobibox-header").append(i), i.on("mousedown", function(e) {
                    e.stopPropagation()
                }), i.on("click.lobibox", function() {
                    e.windowHide()
                })
            },
            _beforeWindowShow: function() {
                this._triggerEvent("beforeWindowShow")
            },
            _beforeWindowHide: function() {
                this._triggerEvent("beforeWindowHide")
            },
            _afterWindowShow: function() {
                this._triggerEvent("afterWindowShow")
            },
            _afterWindowHide: function() {
                this._triggerEvent("afterWindowHide")
            },
            windowHide: function() {
                var e = this;
                return e._beforeWindowHide(), e.$el.addClass("hide"), e._afterWindowHide(), this
            },
            windowShow: function() {
                var e = this;
                return e._beforeWindowShow(), e.$el.removeClass("hide"), e._afterWindowShow(), e.$el[0].style.zIndex = (new Date).getTime() - r.window.startTime, this
            },
            setParams: function(e) {
                var t = this;
                return t.$options.params = e, t
            },
            getParams: function() {
                return this.$options.params
            },
            setLoadMethod: function(e) {
                var t = this;
                return t.$options.loadMethod = e, t
            },
            getLoadMethod: function() {
                return this.$options.loadMethod
            },
            setContent: function(e) {
                var t = this;
                return t.$options.content = e, t.$el.find(".lobibox-body").html("").append(e), t
            },
            getContent: function() {
                return this.$options.content
            },
            setUrl: function(e) {
                return this.$options.url = e, this
            },
            getUrl: function() {
                return this.$options.url
            },
            load: function(e) {
                var i = this;
                return i.$options.url ? (t.ajax(i.$options.url, {
                    method: i.$options.loadMethod,
                    data: i.$options.params
                }).done(function(t) {
                    i.setContent(t), e && "function" == typeof e && e(t)
                }), i) : i
            }
        }), r.window.DEFAULTS = {
            width: 480,
            height: 600,
            content: "",
            url: "",
            draggable: !0,
            autoload: !0,
            loadMethod: "GET",
            showAfterLoad: !0,
            params: {}
        }, r.window.startTime = (new Date).getTime();
        var l = function(e, i) {
            this.$type = null, this.$options = null, this.$el = null;
            var n = this,
                o = function(e, t) {
                    if ("normal" === n.$options.size) t.hasClass("bottom") ? t.prepend(e) : t.append(e);
                    else if ("mini" === n.$options.size) t.hasClass("bottom") ? t.prepend(e) : t.append(e);
                    else if ("large" === n.$options.size) {
                        var i = l().append(e),
                            o = a(i.attr("id"));
                        t.find(".lb-notify-wrapper").append(i), t.find(".lb-notify-tabs").append(o), s(o), o.find(">a").click(function() {
                            s(o)
                        })
                    }
                },
                s = function(e) {
                    e.closest(".lb-notify-tabs").find(">li").removeClass("active"), e.addClass("active");
                    var i = t(e.find(">a").attr("href"));
                    i.closest(".lb-notify-wrapper").find(">.lb-tab-pane").removeClass("active"), i.addClass("active")
                },
                a = function(e) {
                    var i = t("<li></li>", {
                        class: r.notify.OPTIONS[n.$type].class
                    });
                    return t("<a></a>", {
                        href: "#" + e
                    }).append('<i class="tab-control-icon ' + n.$options.icon + '"></i>').appendTo(i), i
                },
                l = function() {
                    return t("<div></div>", {
                        class: "lb-tab-pane",
                        id: Math.randomString(10)
                    })
                },
                c = function() {
                    var e, i = ("large" === n.$options.size ? ".lobibox-notify-wrapper-large" : ".lobibox-notify-wrapper") + "." + n.$options.position.replace(/\s/gi, ".");
                    return e = t(i), 0 === e.length && (e = t("<div></div>").addClass(i.replace(/\./g, " ").trim()).appendTo(t(r.viewport)), "large" === n.$options.size && e.append(t('<ul class="lb-notify-tabs"></ul>')).append(t('<div class="lb-notify-wrapper"></div>'))), e
                },
                h = function() {
                    var e, i, o, s, a, l = r.notify.OPTIONS,
                        c = t("<div></div>", {
                            class: "lobibox-notify " + l[n.$type].class + " " + l.class + " " + n.$options.showClass
                        });
                    return o = t('<div class="lobibox-notify-icon-wrapper"></div>').appendTo(c), e = t('<div class="lobibox-notify-icon"></div>').appendTo(o), i = t("<div></div>").appendTo(e), n.$options.img ? i.append('<img src="' + n.$options.img + '"/>') : n.$options.icon ? i.append('<div class="icon-el"><i class="' + n.$options.icon + '"></i></div>') : c.addClass("without-icon"), a = t('<div class="lobibox-notify-msg">' + n.$options.msg + "</div>"), !1 !== n.$options.messageHeight && a.css("max-height", n.$options.messageHeight), s = t("<div></div>", {
                        class: "lobibox-notify-body"
                    }).append(a).appendTo(c), n.$options.title && s.prepend('<div class="lobibox-notify-title">' + n.$options.title + "<div>"), u(c), "normal" !== n.$options.size && "mini" !== n.$options.size || (d(c), p(c)), n.$options.width && c.css("width", f(n.$options.width)), c
                },
                u = function(e) {
                    n.$options.closable && t('<span class="lobibox-close">&times;</span>').click(function() {
                        n.remove()
                    }).appendTo(e)
                },
                d = function(e) {
                    n.$options.closeOnClick && e.click(function() {
                        n.remove()
                    })
                },
                p = function(e) {
                    if (n.$options.delay) {
                        if (n.$options.delayIndicator) {
                            var i = t('<div class="lobibox-delay-indicator"><div></div></div>');
                            e.append(i)
                        }
                        var o = 0,
                            s = 1e3 / 30,
                            r = (new Date).getTime(),
                            a = setInterval(function() {
                                n.$options.continueDelayOnInactiveTab ? o = (new Date).getTime() - r : o += s;
                                var e = 100 * o / n.$options.delay;
                                e >= 100 && (e = 100, n.remove(), a = clearInterval(a)), n.$options.delayIndicator && i.find("div").css("width", e + "%")
                            }, s);
                        n.$options.pauseDelayOnHover && e.on("mouseenter.lobibox", function() {
                            s = 0
                        }).on("mouseleave.lobibox", function() {
                            s = 1e3 / 30
                        })
                    }
                },
                m = function(e) {
                    var t = e.prev();
                    return 0 === t.length && (t = e.next()), 0 === t.length ? null : t
                },
                f = function(e) {
                    return e = Math.min(t(window).outerWidth(), e)
                };
            this.remove = function() {
                n.$el.removeClass(n.$options.showClass).addClass(n.$options.hideClass);
                var e = n.$el.parent(),
                    t = e.closest(".lobibox-notify-wrapper-large"),
                    i = "#" + e.attr("id"),
                    o = t.find('>.lb-notify-tabs>li:has(a[href="' + i + '"])');
                return o.addClass(r.notify.OPTIONS.class).addClass(n.$options.hideClass), setTimeout(function() {
                    if ("normal" === n.$options.size || "mini" === n.$options.size) n.$el.remove();
                    else if ("large" === n.$options.size) {
                        var t = m(o);
                        t && s(t), o.remove(), e.remove()
                    }
                    var i = r.notify.list,
                        a = i.indexOf(n);
                    i.splice(a, 1);
                    var l = i[a];
                    l && l.$options.showAfterPrevious && l._init()
                }, 500), n
            }, n._init = function() {
                var e = h();
                if ("mini" === n.$options.size && e.addClass("notify-mini"), "string" == typeof n.$options.position) {
                    var i = c();
                    o(e, i), i.hasClass("center") && i.css("margin-left", "-" + i.width() / 2 + "px")
                } else t(r.viewport).append(e), e.css({
                    position: "fixed",
                    left: n.$options.position.left,
                    top: n.$options.position.top
                });
                if (n.$el = e, n.$options.sound) {
                    new Audio(n.$options.sound).play()
                }
                n.$options.rounded && n.$el.addClass("rounded"), n.$el.on("click.lobibox", function(e) {
                    n.$options.onClickUrl && (window.location.href = n.$options.onClickUrl), n.$options.onClick && "function" == typeof n.$options.onClick && n.$options.onClick.call(n, e)
                }), n.$el.data("lobibox", n)
            }, this.$type = e, this.$options = function(e) {
                return "mini" !== e.size && "large" !== e.size || (e = t.extend({}, r.notify.OPTIONS[e.size], e)), e = t.extend({}, r.notify.OPTIONS[n.$type], r.notify.DEFAULTS, e), "mini" !== e.size && !0 === e.title ? e.title = r.notify.OPTIONS[n.$type].title : "mini" === e.size && !0 === e.title && (e.title = !1), !0 === e.icon && (e.icon = r.notify.OPTIONS.icons[e.iconSource][n.$type]), !0 === e.sound && (e.sound = r.notify.OPTIONS[n.$type].sound), e.sound && (e.sound = e.soundPath + e.sound + e.soundExt), e
            }(i), n.$options.showAfterPrevious && 0 !== r.notify.list.length || this._init()
        };
        r.notify = function(e, t) {
            if (["default", "info", "warning", "error", "success"].indexOf(e) > -1) {
                var i = new l(e, t);
                return r.notify.list.push(i), i
            }
        }, r.notify.list = [], r.notify.closeAll = function() {
            var e = r.notify.list;
            for (var t in e) e[t].remove()
        }, r.notify.DEFAULTS = {
            title: !0,
            size: "normal",
            soundPath: "sounds/",
            soundExt: ".ogg",
            showClass: "fadeInDown",
            hideClass: "zoomOut",
            icon: !0,
            msg: "",
            img: null,
            closable: !0,
            hideCloseButton: !1,
            delay: 5e3,
            delayIndicator: !0,
            closeOnClick: !0,
            width: 400,
            sound: !0,
            position: "bottom right",
            iconSource: "bootstrap",
            rounded: !1,
            messageHeight: 60,
            pauseDelayOnHover: !0,
            onClickUrl: null,
            showAfterPrevious: !1,
            continueDelayOnInactiveTab: !0,
            onClick: null
        }, r.notify.OPTIONS = {
            class: "animated-fast",
            large: {
                width: 500,
                messageHeight: 96
            },
            mini: {
                class: "notify-mini",
                messageHeight: 32
            },
            default: {
                class: "lobibox-notify-default",
                title: "Default",
                sound: !1
            },
            success: {
                class: "lobibox-notify-success",
                title: "Success",
                sound: "sound2"
            },
            error: {
                class: "lobibox-notify-error",
                title: "Error",
                sound: "sound4"
            },
            warning: {
                class: "lobibox-notify-warning",
                title: "Warning",
                sound: "sound5"
            },
            info: {
                class: "lobibox-notify-info",
                title: "Information",
                sound: "sound6"
            },
            icons: {
                bootstrap: {
                    success: "glyphicon glyphicon-ok-sign",
                    error: "glyphicon glyphicon-remove-sign",
                    warning: "glyphicon glyphicon-exclamation-sign",
                    info: "info-icons"
                },
                fontAwesome: {
                    success: "fa fa-check-circle",
                    error: "fa fa-times-circle",
                    warning: "fa fa-exclamation-circle",
                    info: "fa fa-info-circle"
                }
            }
        }
    };
    Object.defineProperties(p.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        className: {
            get: function() {
                return this._className
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        type: {
            get: function() {
                return this._type
            },
            set: function(e) {
                this._type = e
            }
        },
        id: {
            get: function() {
                return this._id
            },
            set: function(e) {
                this._id = e
            }
        },
        region: {
            get: function() {
                return this._region
            }
        }
    }), p.prototype.addToCesium = function(e) {
        this._cesiumViewer = e instanceof r ? e._cesiumViewer : e, this.start()
    }, p.prototype.start = function() {
        function e(e, i) {
            var n, s = Cesium.Cartesian3.fromDegrees(e, i),
                r = [];
            o._cesiumViewer.entities.remove(o._pointEntity), o._pointEntity = o._cesiumViewer.entities.add({
                position: s,
                billboard: {
                    image: "images/poi-marker.png",
                    pixelOffset: new Cesium.Cartesian2(0, -30),
                    imageSubRegion: new Cesium.BoundingRectangle(263, 440, 87.4, 87.4)
                },
                show: o._config.showStatus,
                point: {
                    pixelSize: 3,
                    scaleByDistance: new Cesium.NearFarScalar(150, 2, 15e6, .5)
                }
            }), o._points.push(s), (n = o._points.length) < 2 || (r = o._points.slice(n - 2), t(r))
        }

        function t(e) {
            var t = new Cesium.ConstantPositionProperty(e[0]),
                i = new Cesium.ConstantPositionProperty(e[1]),
                n = new Cesium.Entity({
                    show: o._config.showStatus,
                    polyline: {
                        positions: m(t, i, 500),
                        width: 5,
                        material: new Cesium.PolylineOutlineMaterialProperty({
                            color: Cesium.Color.ORANGE,
                            outlineWidth: 1,
                            outlineColor: Cesium.Color.BLACK
                        })
                    }
                });
            o._polylineEntitys.push(n), o._cesiumViewer.entities.add(n)
        }

        function i(e, t) {
            var i = Cesium.Cartesian3.fromDegrees(e, t);
            clearTimeout(n), o._cesiumViewer.entities.remove(o._pointEntity), o._config.showStatus && (o._pointEntity = o._cesiumViewer.entities.add({
                position: i,
                billboard: {
                    image: "images/poi-marker.png",
                    pixelOffset: new Cesium.Cartesian2(0, -30),
                    imageSubRegion: new Cesium.BoundingRectangle(263, 440, 87.4, 87.4)
                },
                show: o._config.showStatus,
                point: {
                    disableDepthTestDistance: 1e9,
                    color: Cesium.Color.RED,
                    pixelSize: 3,
                    outlineColor: Cesium.Color.YELLOW,
                    outlineWidth: 3
                }
            }), n = setInterval(function() {
                o._pointEntity.show = !o._pointEntity.show
            }, 500))
        }
        if (!this._socket) {
            var n, o = this;
            this._socket = io.connect(this._url), this._socket.on("connect", function() {
                console.log("client connect success!")
            }), this._socket.on("message", function(t) {
                "Point" == o.type ? i(t.lng, t.lat) : "Line" == o.type && e(t.lng, t.lat)
            })
        }
    }, p.prototype.stop = function() {
        this._socket.disconnect()
    }, p.prototype.zoomTo = function() {
        this._cesiumViewer.trackedEntity = this._pointEntity
    }, p.prototype.removeFromCesium = function(e) {
        this.activate(!1), this.remove()
    }, p.prototype.activate = function(e) {
        this._active = e
    }, p.prototype.hideObject = function() {
        this._config.showStatus = !1;
        for (var e = this._polylineEntitys.length - 1; e >= 0; e--) this._polylineEntitys[e].show = !1;
        this._pointEntity.show = !1
    }, p.prototype.showObject = function() {
        this._config.showStatus = !0;
        for (var e = this._polylineEntitys.length - 1; e >= 0; e--) this._polylineEntitys[e].show = !0;
        this._pointEntity.show = !0
    }, p.prototype.showAll = function() {
        this._config.showStatus = !0;
        for (var e = this._polylineEntitys.length - 1; e >= 0; e--) this._polylineEntitys[e].show = !0;
        this._pointEntity.show = !0, this._config.showStatus = !0
    }, p.prototype.hideAll = function() {
        this._config.showStatus = !1;
        for (var e = this._polylineEntitys.length - 1; e >= 0; e--) this._polylineEntitys[e].show = !1;
        this._pointEntity.show = !1, this._config.showStatus = !1
    }, p.prototype.remove = function() {
        for (var e = this._polylineEntitys.length - 1; e >= 0; e--) this._cesiumViewer.entities.remove(tthis._polylineEntitys[e])
    }, p.prototype.unHighlightAllObjects = function() {}, p.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, p.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, p.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? this._clickEvent.raiseEvent(t, i) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, Object.defineProperties(f.prototype, {
        id: {
            get: function() {
                return this._id
            }
        },
        name: {
            get: function() {
                return this._name
            }
        },
        state: {
            get: function() {
                return this._state
            }
        },
        nodes: {
            get: function() {
                for (var e = [], t = [], i = 0; i < this.sortNodes.length; i++) 0 == this.sortNodes[i].index ? e.push(this.sortNodes[i].node) : t.push(this.sortNodes[i].node);
                return this._nodes = t.concat(e), this._nodes
            }
        },
        length: {
            get: function() {
                return this._nodes.length
            }
        },
        sortNodes: {
            get: function() {
                return this._sortNodes = this._sortNodes.sort(g("index")), this._sortNodes
            }
        }
    }), f.prototype.addNode = function(e, t) {
        for (var i = 0; i < this._nodes.length; i++)
            if (e.id == this._nodes[i].id) return;
        return this._nodes.push(e), this._sortNodes.push({
            index: t || 0,
            node: e
        }), e
    }, Object.defineProperties(v.prototype, {
        id: {
            get: function() {
                return this._id
            }
        },
        values: {
            get: function() {
                return this._projects
            }
        },
        length: {
            get: function() {
                return this._defaultProject ? this._projects.length - 1 : this._projects.length
            }
        },
        nodeLength: {
            get: function() {
                for (var e = 0, t = 0; t < this._projects.length; t++) this._projects[t] != this._defaultProject && (e += this._projects[t].length);
                return e
            }
        }
    }), v.prototype.add = function(e) {
        e || (this._defaultProject || (this._defaultProject = new f({
            name: "项目001"
        })), e = this._defaultProject);
        for (var t = 0; t < this._projects.length; t++)
            if (e.id == this._projects[t].id) return e;
        return this._projects.push(e), e
    }, v.prototype.remove = function(e) {
        return !!Cesium.defined(e) && this.removeById(entity.id)
    }, v.prototype.removeById = function(e) {
        if (!Cesium.defined(e)) return !1;
        for (var t = this._projects.length, i = 0; i < t; i++) {
            if (e == this._projects[i].id) return this._projects.splice(i, 1), !0
        }
        return !1
    }, v.prototype.getById = function(e) {
        if (!Cesium.defined(e)) return !1;
        for (var t = this._projects.length, i = 0; i < t; i++) {
            var n = this._projects[i];
            if (e == n.id) return n
        }
    }, Object.defineProperties(C.prototype, {
        activeLayer: {
            get: function() {
                return this._activeLayer
            },
            set: function(e) {
                Cesium.defined(this._activeLayer) ? (e && (this._activeLayer.id, e.id), this._activeLayer = e) : this._activeLayer = e
            }
        },
        layers: {
            get: function() {
                return this._layers
            }
        },
        viewer: {
            get: function() {
                return this._viewer
            }
        },
        infoBox: {
            get: function() {
                return this._infoBox
            }
        }
    }), C.prototype.passEventToLayer = function(e, t, i) {
        if (t) {
            var n = 0;
            if (Cesium.Cesium3DTileFeature && t instanceof Cesium.Cesium3DTileFeature) {
                var o = t.primitive.url;
                for (n = 0; n < this._layers.length; n++)
                    if (this._layers[n].url == o) {
                        if ("CTRLCLICK" == e && (this.activeLayer = this._layers[n]), this._layers[n].triggerEvent(e, t, -1 == e.indexOf("MOUSE") ? i.position : null), "CLICK" == e) {
                            var s = t._content._batchTable.batchTableJson.batchId,
                                r = t._content._batchTable.batchTableJson.name;
                            if (!Cesium.defined(s)) return void this._listener.fire("clicked", {
                                layer: this._layers[n],
                                object: t,
                                key: null,
                                event: i
                            });
                            var a = s.indexOf(t._batchId),
                                l = r[a];
                            this._viewer.selectedIds = [], this._selectListener.fire("updated", l), this._listener.fire("clicked", {
                                layer: this._layers[n],
                                object: t,
                                key: l,
                                event: i
                            })
                        }
                        return !0
                    }
            } else if (t.content instanceof Cesium.Batched3DModel3DTileContent) {
                var o = t.primitive.url;
                for (n = 0; n < this._layers.length; n++)
                    if (this._layers[n].url == o) return "CTRLCLICK" == e && (this.activeLayer = this._layers[n]), this._layers[n].triggerEvent(e, t, -1 == e.indexOf("MOUSE") ? i.position : null), "CLICK" == e && this._listener.fire("clicked", {
                        layer: this._layers[n],
                        object: t,
                        key: null,
                        event: i
                    }), !0
            } else if (t.id instanceof Cesium.Entity && t.id && t.id.layerId) {
                var c = t.id.layerId;
                for (n = 0; n < this._layers.length; n++)
                    if (this._layers[n].id == c) return "CTRLCLICK" == e && (this.activeLayer = this._layers[n]), this._layers[n].triggerEvent(e, t, -1 == e.indexOf("MOUSE") ? i.position : null), "CLICK" == e && this._listener.fire("clicked", {
                        layer: this._layers[n],
                        object: t,
                        key: t.id.name,
                        event: i
                    }), !0
            } else if ("string" == typeof t.id)
                for (n = 0; n < this._layers.length; n++)
                    if (this._layers[n]._id == t.id) return "CTRLCLICK" == e && (this.activeLayer = this._layers[n]), this._layers[n].triggerEvent(e, t, -1 == e.indexOf("MOUSE") ? i.position : null), "CLICK" == e && this._listener.fire("clicked", {
                        layer: this._layers[n],
                        object: t,
                        key: null,
                        event: i
                    }), !0
        } else this.activeLayer = null, "CLICK" == e && this._listener.fire("clicked", {
            layer: null,
            object: null,
            key: null,
            event: i
        });
        return !1
    }, C.prototype.addLayer = function(e, t, i) {
        for (var n = 0; n < this._layers.length; n++)
            if (e.id == this._layers[n].id) return;
        if (e.project || t) t = e.project || t, this._projectCollection.add(t), t.addNode(e, i);
        else {
            this._projectCollection.add().addNode(e, i)
        }
        return this._layers.push(e), e.addToCesium(this._cesiumViewerInstance)
    }, C.prototype.getLayerbyId = function(e) {
        for (var t = 0; t < this._layers.length; t++)
            if (e == this._layers[t].id) return this._layers[t];
        return null
    }, C.prototype.getLayersbyClass = function(e) {
        for (var t = [], i = 0; i < this._layers.length; i++) e == this._layers[i]._className && t.push(this._layers[i]);
        return t
    }, C.prototype.getLayers = function() {
        return this._layers
    }, C.prototype.removeLayer = function(e) {
        for (var t = 0; t < this._layers.length; t++) {
            var i = this._layers[t];
            if (e == i.id) return i.removeFromCesium(this._cesiumViewerInstance), void this._layers.splice(t, 1)
        }
    }, C.prototype.removeAllLayer = function() {
        for (var e = this._layers.length - 1; e >= 0; e--) {
            this._layers[e].removeFromCesium(this._cesiumViewerInstance), this._layers.splice(e, 1)
        }
    }, C.prototype.clearHighlight = function() {
        for (var e = this._layers, t = 0; t < e.length; t++) e[t].active && e[t].unHighlightAllObjects && e[t].unHighlightAllObjects()
    }, C.prototype.restore = function() {
        this._toolListener.fire("check");
        for (var e = this._layers, t = 0; t < e.length; t++) e[t].active && (e[t].unHighlightAllObjects(), e[t] instanceof p ? e[t].showAll() : (e[t].showObjects(), e[t].showAll()));
        this._activeLayer = null
    }, C.prototype.registerMouseEventHandlers = function() {
        var e = this;
        this._selectListener.on("updated", function(t) {
            e._viewer.selectedIds.push(t)
        }), this._listener.on("clicked", function(t) {
            e._activeLayer = t.layer
        })
    }, C.prototype.on = function(e, t) {
        var i = this._layers;
        if ("uncheck" == e)
            for (var n = 0; n < i.length; n++) i[n].on instanceof Function && i[n].on("uncheck", function(e) {
                t(e)
            });
        else
            for (var n = 0; n < i.length; n++) i[n].on instanceof Function && i[n].on(e, function(e) {
                t(e)
            })
    }, C.prototype.activateViewChangedEvent = function(e) {
        var t = this,
            i = this._cesiumViewerInstance.cesiumWidget,
            n = i.scene.camera,
            o = n.position.x,
            s = n.position.y,
            r = n.position.z,
            a = n.direction.x,
            l = n.direction.y,
            c = n.direction.z,
            h = function() {
                var e = i.scene.camera,
                    n = e.position.x,
                    h = e.position.y,
                    u = e.position.z,
                    d = e.direction.x,
                    p = e.direction.y,
                    m = e.direction.z;
                (Math.abs(o - n) > 3 || Math.abs(s - h) > 3 || Math.abs(r - u) > 3 || Math.abs(a - d) > .001 || Math.abs(l - p) > .001 || Math.abs(c - m) > .001) && (o = n, s = h, r = u, a = d, l = p, c = m, t._listener.fire("viewchanged", e))
            };
        e && i.clock.onTick.addEventListener(h)
    }, C.prototype.activateMouseClickEvents = function(e) {
        if (e) {
            var t = this;
            this._eventHandler.setInputAction(function(e) {
                var i = t._cesiumViewerInstance.scene.pick(e.position);
                t.clearHighlight(), t._viewer.selectedIds = [], t.passEventToLayer("CLICK", i, e);
                var n;
                if (n = t._cesiumViewerInstance.scene.pickPositionSupported && Cesium.defined(i) ? t._cesiumViewerInstance.scene.pickPosition(e.position) : t._cesiumViewerInstance.camera.pickEllipsoid(e.position), Cesium.defined(n)) {
                    var o = Cesium.Cartographic.fromCartesian(n),
                        s = parseFloat(Cesium.Math.toDegrees(o.longitude).toFixed(6)),
                        r = parseFloat(Cesium.Math.toDegrees(o.latitude).toFixed(6)),
                        a = parseFloat(o.height.toFixed(6));
                    t._listener.fire("pick", {
                        lon: s,
                        lat: r,
                        height: a
                    })
                }
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this._eventHandler.setInputAction(function(e) {
                var i = t._cesiumViewerInstance.scene.pick(e.position);
                t.passEventToLayer("CTRLCLICK", i, e)
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK, Cesium.KeyboardEventModifier.CTRL)
        } else this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK), this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK, Cesium.KeyboardEventModifier.CTRL);
        this._mouseClickEvents = e
    }, C.prototype.activateMouseMoveEvents = function(e) {
        var t = !1,
            i = null;
        if (e) {
            var n = this;
            this._eventHandler.setInputAction(function(e) {
                if (!(n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.LEFT_DRAG) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.MIDDLE_DRAG) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.PINCH) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.RIGHT_DRAG) || n._cameraEventAggregator.isButtonDown(Cesium.CameraEventType.WHEEL) || t)) {
                    t = !0;
                    var o = n._cesiumViewerInstance.scene.pick(e.endPosition);
                    i && i != o && n.passEventToLayer("MOUSEOUT", i) && (i = null), o && i != o && (i = n.passEventToLayer("MOUSEIN", o) ? o : null), t = !1
                }
            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)
        } else null !== i && (this.passEventToLayer("MOUSEOUT", i), i = null), this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE);
        this._mouseMoveEvents = e
    }, Object.defineProperties(y.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        highlightedObjects: {
            get: function() {
                return this._highlightedObjects
            },
            set: function(e) {
                this._highlightedObjects = e
            }
        },
        hiddenObjects: {
            get: function() {
                return this._hiddenObjects
            },
            set: function(e) {
                this._hiddenObjects = e
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        show: {
            get: function() {
                return this._show && this._geoJsonDataSource.show
            },
            set: function(e) {
                this._show = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        id: {
            get: function() {
                return this._id
            }
        },
        className: {
            get: function() {
                return this._className
            },
            set: function(e) {
                this._className = e
            }
        },
        cesiumViewer: {
            get: function() {
                return this._cesiumViewer
            }
        },
        entities: {
            get: function() {
                return this._entities
            }
        },
        geoJsonDataSource: {
            get: function() {
                return this._geoJsonDataSource
            }
        },
        highlightColor: {
            get: function() {
                return this._highlightColor
            },
            set: function(e) {
                this._highlightColor = e
            }
        },
        mouseOverhighlightColor: {
            get: function() {
                return this._mouseOverhighlightColor
            },
            set: function(e) {
                this._mouseOverhighlightColor = e
            }
        }
    }), y.prototype.addToCesium = function(e) {
        function t(e, t) {
            for (var n = e.entities.values, o = 0, s = n.length; o < s; o++) {
                var r = n[o];
                r.addProperty("layerId"), r.layerId = t, i._fieldMap && (r.name = r.properties[i._fieldMap.entityID].toString())
            }
            return e
        }
        this._cesiumViewer = e instanceof r ? e._cesiumViewer : e;
        var i = this,
            n = Cesium.when.defer();
        return i.setUniformStyle(this._uniformStyle), Cesium.GeoJsonDataSource.load(this._url, this._uniformStyle).then(function(e) {
            e = t(e, i._id), i._geoJsonDataSource = e, i._cesiumViewer.dataSources.add(e), i._entities = e.entities.values, i._symbol && i.updateStyle(), i.registerMouseEventHandlers(), n.resolve(i)
        }).otherwise(function() {
            n.reject(new Cesium.DeveloperError("Failed to load: " + i._url))
        }), n.promise
    }, y.prototype.setUniformStyle = function(e) {
        var i = t.extend({}, this._uniformStyle, e);
        i.fill && (i.fill = i.fill instanceof Cesium.Color ? i.fill : Cesium.Color.fromCssColorString(i.fill)), i.stroke && (i.stroke = i.stroke instanceof Cesium.Color ? i.stroke : Cesium.Color.fromCssColorString(i.stroke)), this._uniformStyle = 0 != Object.getOwnPropertyNames(i).length && i
    }, y.prototype.setStyle = function(e) {
        this._styleConfig = {
            show: e.show || !0,
            height: e.height || 0,
            outline: e.outline || !1,
            outlineColor: e.outlineColor || Cesium.Color.BLACK,
            outlineWidth: e.outlineWidth || 1,
            perPositionHeight: e.perPositionHeight || !1,
            width: e.width || 1,
            fillColor: e.fillColor || Cesium.Color.WHITE,
            pixelOffset: e.pixelOffset || Cesium.Cartesian2.ZERO,
            scale: e.scale || 1
        }, this._geoJsonDataSource && this.updateStyle()
    }, y.prototype.updateStyle = function() {
        for (var e = this._geoJsonDataSource.entities.values, t = 0; t < e.length; t++) {
            var i = e[t];
            i.properties;
            if (i.polygon) {
                i.polygon.outline = this._symbol.outline || !1;
                var n = i.polygon.material.color._value;
                i.polygon.material = this._symbol.material || Cesium.Color.fromCssColorString("rgb(" + 255 * n.red + "," + 255 * n.green + "," + 255 * n.blue + ")").withAlpha(.6), this._symbol.extrudedHeight && (i.polygon.extrudedHeight = (this._symbol.extrudedScale || 1) * (i.properties[this._symbol.extrudedHeight] || 0))
            }
            i.billboard && (i.billboard.image = this._symbol.imageUrl || mt.getCoreURL() + "images/mark-point.png", this._symbol.imageScale && (i.billboard.scale = this._symbol.imageScale), this._symbol.labelText && (i.label = new Cesium.LabelGraphics, i.label.style = Cesium.LabelStyle.FILL_AND_OUTLINE, i.label.text = i.properties[this._symbol.labelText].toString(), i.label.font = "16px sans-serif", i.label.outlineWidth = 3, i.label.outlineColor = Cesium.Color.fromCssColorString("#c175fe"), this._symbol.textOffset && (i.label.pixelOffset = new Cesium.Cartesian2(this._symbol.textOffset[0], this._symbol.textOffset[1])), this._symbol.textFontSize && (i.label.font = this._symbol.textFontSize + "px sans-serif"), this._symbol.textFillColor && (i.label.fillColor = this._symbol.textFillColor instanceof Cesium.Color ? this._symbol.textFillColor : Cesium.Color.fromCssColorString(this._symbol.textFillColor)), this._symbol.textScale && (i.label.scale = this._symbol.textScale), this._symbol.distanceDisplayCondition && (i.label.distanceDisplayCondition = new Cesium.DistanceDisplayCondition(this._symbol.distanceDisplayCondition[0], this._symbol.distanceDisplayCondition[1]))), this._symbol.distanceDisplayCondition && (i.billboard.distanceDisplayCondition = new Cesium.DistanceDisplayCondition(this._symbol.distanceDisplayCondition[0], this._symbol.distanceDisplayCondition[1])))
        }
    }, y.prototype.removeFromCesium = function(e) {
        this.activate(!1)
    }, y.prototype.registerMouseEventHandlers = function() {
        var e = (this._highlightColor, this._mouseOverhighlightColor, this);
        e.registerEventHandler("CLICK", function(t) {
            var i = t.id,
                n = (t.primitive, e._fieldMap.entityID ? i.name : i.id);
            "Tile border" != n && (e._clickedObjects.splice(0, e._clickedObjects.length), e._clickedObjects.push(n), e.isInHighlightedList(n) || (e.unHighlightAllObjects(), e.highlight(n)))
        }), e.registerEventHandler("CTRLCLICK", function(i) {
            var n = i.id,
                o = (i.primitive, e._fieldMap.entityID ? n.name : n.id);
            "Tile border" != o && (e.isInClickedList(o) ? e._clickedObjects.splice(t.inArray(o, e._clickedObjects), 1) : e._clickedObjects.push(o), e.isInHighlightedList(o) ? e.unHighlight([o]) : e.highlight(o))
        })
    }, y.prototype.highlight = function(e) {
        if (null != e)
            if (e instanceof Array)
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    this.isInHighlightedList(i) || this._highlightedObjects.push(i), this.highlightObject(this.getObjectById(i))
                } else if ("string" == typeof e) {
                    var i = e;
                    this.isInHighlightedList(i) || this._highlightedObjects.push(i), this.highlightObject(this.getObjectById(i))
                }
    }, y.prototype.unHighlight = function(e) {
        if (e instanceof Array)
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (this.isInHighlightedList(n)) {
                    var o = t.inArray(n, this._highlightedObjects);
                    this._highlightedObjects.splice(o, 1)
                }
                this.unHighlightObject(this.getObjectById(n))
            } else if ("string" == typeof e) {
                var n = e;
                if (this.isInHighlightedList(n)) {
                    var o = t.inArray(n, this._highlightedObjects);
                    this._highlightedObjects.splice(o, 1)
                }
                this.unHighlightObject(this.getObjectById(n))
            } else {
                for (var s = this._highlightedObjects, i = 0; i < s.length; i++) {
                    var n = s[i];
                    this.unHighlightObject(this.getObjectById(n))
                }
                this._highlightedObjects.splice(0, this._highlightedObjects.length)
            }
    }, y.prototype.hideObjects = function(e) {
        if (e instanceof Array)
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                this.isInHiddenList(i) || this._hiddenObjects.push(i), this.hideObject(this.getObjectById(i))
            } else
                for (var n = this._clickedObjects, t = 0; t < n.length; t++) {
                    var i = n[t];
                    this.isInHiddenList(i) || this._hiddenObjects.push(i), this.hideObject(this.getObjectById(i))
                }
    }, y.prototype.showObjects = function(e) {
        if (e instanceof Array)
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                if (this.isInHiddenList(n)) {
                    var o = t.inArray(n, this._hiddenObjects);
                    this._hiddenObjects.splice(o, 1)
                }
                this.showObject(this.getObjectById(n))
            } else {
                for (var s = this._hiddenObjects, i = 0; i < s.length; i++) {
                    var n = s[i];
                    this.showObject(this.getObjectById(n))
                }
                this._hiddenObjects.splice(0, this._hiddenObjects.length)
            }
    }, y.prototype.activate = function(e) {
        this._active = e, 0 == e ? this._cesiumViewer.dataSources.remove(this._geoJsonDataSource) : this._cesiumViewer.dataSources.add(this._geoJsonDataSource)
    }, y.prototype.zoomTo = function() {
        this._cesiumViewer.zoomTo(this._geoJsonDataSource)
    }, y.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, y.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, y.prototype.on = function(e, t) {
        return "click" == e ? this._listener.on("CLICK", t) : this._listener.on(e, t)
    }, y.prototype.off = function(e) {
        this._listener.off(e)
    }, y.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? (this._listener.fire("CLICK", {
            position: i,
            entity: t.id
        }), this._clickEvent.raiseEvent(t)) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, y.prototype.getObjectById = function(e) {
        var t = this._cesiumViewer.scene.primitives;
        if ("collada" != this._layerType) return this.getEntitiesById(e);
        for (var i = 0; i < t.length; i++) {
            var n = t.get(i);
            if (n instanceof Cesium.Model && n.ready && n._id._name === e && n._id.layerId === this._id) return n
        }
    }, y.prototype.getEntitiesById = function(e) {
        for (var t = this._geoJsonDataSource.entities.values, i = 0; i < t.length; i++) {
            var n = t[i];
            if ((n.id === e || n.name === e) && n.layerId == this._id) {
                var o = n,
                    s = o._parent;
                return Cesium.defined(s) ? s._children : [o]
            }
        }
        return null
    }, y.prototype.setEntityColorByPrimitive = function(e, t) {
        for (var i = this._cesiumViewer.scene.primitives, n = 0; n < i.length; n++) {
            var o = i.get(n);
            if (o instanceof Cesium.Primitive && Cesium.defined(o._instanceIds))
                for (var s = 0; s < o._instanceIds.length; s++) {
                    var r = o._instanceIds[s].id;
                    if ((r == e.id || r == e.name) && e.layerId === this._id) {
                        var a = o.getGeometryInstanceAttributes(e);
                        if (Cesium.defined(a)) return void(a.color = Cesium.ColorGeometryInstanceAttribute.toValue(t))
                    }
                }
        }
    }, y.prototype.highlightObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) {
                if (e.ready) {
                    var t = this._highlightedObjects[e._id._name];
                    if (t) {
                        var i = e._id;
                        if (!Cesium.defined(i.originalMaterial)) {
                            i.addProperty("originalMaterial");
                            var n = e._runtime.materialsByName;
                            for (var o in n) i.originalMaterial = n[o].getValue("emission").clone()
                        }
                        var n = e._runtime.materialsByName;
                        for (var o in n) n[o].setValue("emission", Cesium.Cartesian4.fromColor(t))
                    }
                }
            } else if (e instanceof Array)
            for (var s = 0; s < e.length; s++) {
                var r = e[s];
                if (Cesium.defined(r.originalMaterial) || r.addProperty("originalMaterial"), null == this.getObjectMaterial(r)) return;
                r.originalMaterial = this.getObjectMaterial(r), this.setObjectMaterial(r, this._highlightColor)
            }
    }, y.prototype.unHighlightObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) {
                if (e.ready) {
                    var t = e._id,
                        i = e._runtime.materialsByName;
                    for (var n in i) i[n].setValue("emission", t.originalMaterial)
                }
            } else if (e instanceof Array && !this.isHiddenObject(e))
            for (var o = 0; o < e.length; o++) {
                var s = e[o],
                    r = s.originalMaterial;
                Cesium.defined(r) && (this.setEntityColorByPrimitive(s, r.color._value.clone()), this.setObjectMaterial(s, r))
            }
    }, y.prototype.unHighlightAllObjects = function() {
        for (var e = this._highlightedObjects, t = 0; t < e.length; t++) {
            var i = e[t];
            this.unHighlightObject(this.getObjectById(i))
        }
        this._highlightedObjects.splice(0, this._highlightedObjects.length)
    }, y.prototype.isInHighlightedList = function(e) {
        return this._highlightedObjects.indexOf(e) > -1
    }, y.prototype.hideObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) {
                if (e.ready) {
                    var t = e._runtime.nodesByName;
                    for (var i in t) {
                        var n = t[i],
                            o = Cesium.defined(n) ? n.publicNode : void 0;
                        o.show = !1
                    }
                }
            } else if (e instanceof Array)
            for (var s = 0; s < e.length; s++) {
                var r = e[s];
                r.show = !1
            }
    }, y.prototype.showObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) {
                if (e.ready) {
                    var t = e._runtime.nodesByName;
                    for (var i in t) {
                        var n = t[i],
                            o = Cesium.defined(n) ? n.publicNode : void 0;
                        o.show = !0
                    }
                }
            } else if (e instanceof Array)
            for (var s = this, r = 0; r < e.length; r++) {
                var a = e[r];
                a.show = !0;
                var l = this._fieldMap.entityID ? a.name : a.id;
                if (this.isInHighlightedList(l)) setTimeout(function() {
                    var e = {};
                    for (var t in s._highlightedObjects) e[t] = s._highlightedObjects[t];
                    s.unHighlightAllObjects(), s.highlight(e)
                }, 100);
                else {
                    var c = a.originalMaterial;
                    Cesium.defined(c) && (this.setEntityColorByPrimitive(a, c.color._value), setTimeout(function() {
                        s.setObjectMaterial(a, c)
                    }, 100))
                }
            }
    }, y.prototype.isHiddenObject = function(e) {
        if (e instanceof Cesium.Model) {
            if (e.ready) {
                var t = e._runtime.nodesByName;
                for (var i in t) {
                    var n = t[i],
                        o = Cesium.defined(n) ? n.publicNode : void 0;
                    return !o.show
                }
            }
        } else if (e instanceof Array)
            for (var s = 0; s < e.length; s++) {
                var r = e[s];
                return !r.show
            }
        return !0
    }, y.prototype.showAll = function() {
        for (var e = 0; e < this.cesiumViewer.dataSources.length; e++)
            if (this._geoJsonDataSource == this.cesiumViewer.dataSources._dataSources[e]) return this._geoJsonDataSource.show = !0, void this._listener.fire("check", this._id)
    }, y.prototype.hideAll = function() {
        for (var e = 0; e < this.cesiumViewer.dataSources.length; e++)
            if (this._geoJsonDataSource == this.cesiumViewer.dataSources._dataSources[e]) return this._geoJsonDataSource.show = !1, void this._listener.fire("uncheck", this._id)
    }, y.prototype.isInHiddenList = function(e) {
        return this._hiddenObjects.indexOf(e) > -1
    }, y.prototype.isInClickedList = function(e) {
        return this._clickedObjects.indexOf(e) > -1
    }, y.prototype.setObjectMaterial = function(e, t) {
        Cesium.defined(e.polygon) ? e.polygon.material = t : Cesium.defined(e.polyline) ? e.polyline.material = t : Cesium.defined(e.point) && (e.point.material = t)
    }, y.prototype.getObjectMaterial = function(e) {
        var t;
        if (Cesium.defined(e.polygon)) t = e.polygon;
        else if (Cesium.defined(e.polyline)) t = e.polyline;
        else {
            if (!Cesium.defined(e.point)) return null;
            t = e.point
        }
        return t.material
    }, y.prototype.showInfoBox = function(e, i) {
        var n, o = Object.keys(this.highlightedObjects);
        Cesium.defined(e) ? n = e : 0 != o.length && (n = o[0]);
        var s = this.getObjectById(n);
        if (null != s && s instanceof Array && 0 != s.length) {
            var r = t("#infoDiv");
            if (0 != r.length) b(s[0].properties);
            else {
                _(s[0].properties).appendTo(t("body"))
            }
            var a = t(".cesium-viewer").offset().top,
                l = t(".cesium-viewer").offset().left,
                c = t(".cesium-viewer").width();
            t(".cesium-viewer").height();
            if (i) {
                t("#infoDiv").css("visibility", "hidden"), t("#infoDiv").css({
                    left: i.x + l,
                    top: i.y + a
                });
                var h = window.innerHeight - a - (i.y + t("#infoDiv").height() + -44);
                h > 0 && (h = 0);
                var u = i.x + 381 > c;
                u ? (t("#infoDiv .before").css("background", "url(" + mt.getCoreURL() + "images/popover/popover-bottom-right-arrow.png)"), t("#infoDiv .before").css({
                    left: 271
                }), t("#infoDiv").css({
                    left: i.x - 381 - 112 + l
                })) : (t("#infoDiv .before").css("background", "url(" + mt.getCoreURL() + "images/popover/popover-arrow.png)"), t("#infoDiv .before").css({
                    left: -112
                })), r.toggleClass("popover-left", u), r.css("marginTop", "calc(" + h + "px + -54px)"), r.children(".before").css("marginTop", 10 - h + "px")
            }
            t("#infoDiv").css("visibility", "visible")
        }
    }, y.prototype.hideInfoBox = function() {
        t("#infoDiv").css("visibility", "hidden")
    }, Object.defineProperties(w.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        className: {
            get: function() {
                return this._className
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        modelMatrix: {
            get: function() {
                return this._modelMatrix
            },
            set: function(e) {
                this._modelMatrix = e
            }
        },
        id: {
            get: function() {
                return this._id
            },
            set: function(e) {
                this._id = e
            }
        },
        region: {
            get: function() {
                return this._region
            }
        }
    }), w.prototype.addToCesium = function(e) {
        this._cesiumViewer = e instanceof r ? e._cesiumViewer : e;
        var t;
        switch (this._type) {
            case "STK":
                t = new Cesium.CesiumTerrainProvider({
                    url: "https://assets.agi.com/stk-terrain/v1/tilesets/world/tiles",
                    requestVertexNormals: !0
                });
                break;
            case "VR":
                t = new Cesium.VRTheWorldTerrainProvider({
                    url: "http://www.vr-theworld.com/vr-theworld/tiles1.0.0/73/",
                    credit: "Terrain data courtesy VT MÄK"
                });
                break;
            case "selfTile":
                t = new Cesium.CesiumTerrainProvider({
                    url: this._url,
                    equestWaterMask: !0,
                    requestVertexNormals: !0
                });
                break;
            default:
                t = new Cesium.CesiumTerrainProvider({
                    url: "https://assets.agi.com/stk-terrain/v1/tilesets/world/tiles",
                    requestVertexNormals: !0
                })
        }
        this._terrain = t
    }, w.prototype.zoomTo = function() {}, w.prototype.removeFromCesium = function(e) {
        this.activate(!1), this.hideObject()
    }, w.prototype.activate = function(e) {
        this._active = e
    }, w.prototype.hideAll = function() {
        this._cesiumViewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider || (this._cesiumViewer.terrainProvider = new Cesium.EllipsoidTerrainProvider)
    }, w.prototype.showAll = function() {
        this._cesiumViewer.terrainProvider = this._terrain
    }, w.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, w.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, w.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? this._clickEvent.raiseEvent(t, i) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, Object.defineProperties(x.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        highlightedObjects: {
            get: function() {
                return this._highlightedObjects
            },
            set: function(e) {
                this._highlightedObjects = e
            }
        },
        hiddenObjects: {
            get: function() {
                return this._hiddenObjects
            },
            set: function(e) {
                this._hiddenObjects = e
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        className: {
            get: function() {
                return this._className
            },
            set: function(e) {
                this._className = e
            }
        },
        modelMatrix: {
            get: function() {
                return this._modelMatrix
            },
            set: function(e) {
                this._modelMatrix = e
            }
        },
        id: {
            get: function() {
                return this._id
            },
            set: function(e) {
                this._id = e
            }
        },
        show: {
            get: function() {
                return this._show && this._model.show
            },
            set: function(e) {
                this._show = e
            }
        },
        highlightColor: {
            get: function() {
                return this._highlightColor
            },
            set: function(e) {
                this._highlightColor = e
            }
        },
        mouseOverhighlightColor: {
            get: function() {
                return this._mouseOverhighlightColor
            },
            set: function(e) {
                this._mouseOverhighlightColor = e
            }
        }
    }), x.prototype.addToCesium = function(e) {
        var t = this;
        this._cesiumViewer = e instanceof r ? e._cesiumViewer : e;
        var i = Cesium.when.defer();
        return this._model = this._cesiumViewer.scene.primitives.add(Cesium.Model.fromGltf({
            id: this._id,
            url: this._url,
            modelMatrix: this._modelMatrix,
            scale: 1
        })), this._model.readyPromise.then(function(e) {
            t.registerMouseEventHandlers(), i.resolve(t)
        }).otherwise(function(e) {
            i.reject(new Cesium.DeveloperError("Failed to load: " + t._url))
        }), i.promise
    }, x.prototype.registerMouseEventHandlers = function() {
        var e = this._highlightColor,
            t = (this._mouseOverhighlightColor, this);
        t.registerEventHandler("CLICK", function(i) {
            t._isInHighlight ? t.unHighlight() : t.highlight(e)
        }), t.registerEventHandler("CTRLCLICK", function(i) {
            t._isInHighlight ? t.unHighlight() : t.highlight(e)
        })
    }, x.prototype.zoomTo = function() {
        var e = Cesium.Matrix4.multiplyByPoint(this._model.modelMatrix, this._model.boundingSphere.center, new Cesium.Cartesian3),
            t = new Cesium.BoundingSphere(e, 2 * this._model.boundingSphere.radius);
        this._cesiumViewer.scene.camera.flyToBoundingSphere(t)
    }, x.prototype.removeFromCesium = function(e) {
        this.activate(!1)
    }, x.prototype.activate = function(e) {
        this._model.show = e, this._active = e
    }, x.prototype.highlight = function(e) {
        this.highlightObject(e)
    }, x.prototype.highlightObject = function(e) {
        Cesium.defined(this._model.originalColorValue) || (this._model.originalColorValue = Cesium.Color.clone(this._model.color)), this._model.color = e || this._highlightColor, this._isInHighlight = !0
    }, x.prototype.unHighlight = function(e) {
        this.unHighlightObject()
    }, x.prototype.unHighlightObject = function(e) {
        var t = this._model.originalColorValue;
        t && (this._model.color = t, this._isInHighlight = !1)
    }, x.prototype.hideObjects = function(e) {
        this._model.show = !1, this._listener.fire("uncheck", this._id)
    }, x.prototype.hideObject = function(e) {
        this._model.show = !1, this._listener.fire("uncheck", this._id)
    }, x.prototype.showAll = function() {
        this._model.show = !0
    }, x.prototype.hideAll = function() {
        this._model.show = !1, this._listener.fire("uncheck", this._id)
    }, x.prototype.hasHiddenObjects = function() {
        return this._hiddenObjects.length > 0
    }, x.prototype.isHiddenObject = function(e) {
        return !e.show
    }, x.prototype.showAllObjects = function() {
        for (var e = 0; e < this._hiddenObjects.length; e++)
            for (var t = this._hiddenObjects[e], i = this.getObjectById(t), n = 0; n < i.length; n++) this.showObject(i[n]);
        this._hiddenObjects = this._hiddenObjects, this._hiddenObjects = []
    }, x.prototype.showObjects = function(e) {
        this._model.show = !0
    }, x.prototype.showObject = function(e) {
        this._model.show = !0
    }, x.prototype.unHighlightAllObjects = function() {
        this.unHighlight()
    }, x.prototype.isInHighlightedList = function(e) {
        return this._highlightedObjects.hasOwnProperty(e)
    }, x.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, x.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, x.prototype.on = function(e, t) {
        return "click" == e ? this._listener.on("CLICK", t) : this._listener.on(e, t)
    }, x.prototype.off = function(e) {
        this._listener.off(e)
    }, x.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? (this._listener.fire("CLICK", {
            position: i
        }), this._clickEvent.raiseEvent(t, i)) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, E.prototype.initialWorker = function() {
        var e = this;
        this.oWorker.onmessage = function(t) {
            t.data instanceof Object && t.data.hasOwnProperty("vo42t30") && t.data.hasOwnProperty("rnb93qh") ? e.oListeners[t.data.vo42t30].apply(e, t.data.rnb93qh) : this.defaultListener.call(e, t.data)
        }
    }, E.prototype.defaultListener = function() {}, E.prototype.triggerEvent = function() {
        if (arguments.length < 1) throw new TypeError("not enough arguments");
        this.oWorker.postMessage({
            bk4e1h0: arguments[0],
            ktp3fm1: Array.prototype.slice.call(arguments, 1)
        })
    }, E.prototype.postMessage = function(e) {
        Worker.prototype.postMessage.call(this.oWorker, e)
    }, E.prototype.terminate = function() {
        Worker.prototype.terminate.call(this.oWorker)
    }, E.prototype.addListener = function(e, t) {
        this.oListeners[e] = t
    }, E.prototype.removeListener = function(e) {
        delete this.oListeners[e]
    }, E.prototype.sleep = function() {
        this._isSleep = !0
    }, E.prototype.wake = function() {
        this._isSleep = !1
    }, E.prototype.isSleep = function() {
        return this._isSleep
    }, T.prototype.doStart = function() {
        var e = this,
            t = mt.retrieveURL("geobim");
        void 0 === t && (t = mt.retrieveURL("geobim.min")), this.oTask = new E(t + "Webworkers/CitydbKmlHighlightingManagerWebworker.js"), this.oTask.addListener("checkMasterPool", function(t, i) {
            var n = e.cachedObjects[t];
            null != n ? (e.citydbKmlLayerInstance.isInHiddenList(t) ? e.citydbKmlLayerInstance.isHiddenObject(n) || (e.citydbKmlLayerInstance.hideObject(n), e.oTask.triggerEvent("updateDataPool")) : e.citydbKmlLayerInstance.isHiddenObject(n) && (e.citydbKmlLayerInstance.showObject(n), e.oTask.triggerEvent("updateDataPool")), setTimeout(function() {
                e.citydbKmlLayerInstance.isInHighlightedList(t) ? e.citydbKmlLayerInstance.isHighlightedObject(n) || (e.citydbKmlLayerInstance.highlightObject(n), e.oTask.triggerEvent("updateDataPool")) : e.citydbKmlLayerInstance.isHighlightedObject(n) && (e.citydbKmlLayerInstance.unHighlightObject(n), e.oTask.triggerEvent("updateDataPool")), e.oTask.triggerEvent("updateTaskStack")
            }, 50)) : setTimeout(function() {
                e.oTask.triggerEvent("updateTaskStack")
            }, 50)
        }), e.oTask.addListener("refreshView", function(t, i) {
            e.citydbKmlLayerInstance._cesiumViewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider ? setTimeout(function() {
                e.citydbKmlLayerInstance.citydbKmlTilingManager.isDataStreaming() ? e.oTask.sleep() : e.citydbKmlLayerInstance.hasHighlightedObjects() || e.citydbKmlLayerInstance.hasHiddenObjects() ? e.rebuildDataPool() : e.oTask.sleep()
            }, 1e3) : e.oTask.sleep()
        }), this.dataPool = this.generateDataPool(), e.oTask.triggerEvent("initWorker", this.dataPool)
    }, T.prototype.generateDataPool = function() {
        for (var e = {}, t = this.citydbKmlLayerInstance._cesiumViewer.scene.primitives, i = 0; i < t.length; i++) {
            var n = t.get(i);
            if (n instanceof Cesium.Model) {
                if (n.ready && n._id.layerId === this.citydbKmlLayerInstance._id) {
                    var o = n._id._name;
                    e[o] = !1
                }
            } else if (n instanceof Cesium.Primitive && Cesium.defined(n._instanceIds))
                for (var s = 0; s < n._instanceIds.length; s++) {
                    var r = n._instanceIds[s];
                    if (Cesium.defined(r.name) && r.layerId === this.citydbKmlLayerInstance._id) {
                        var o = r.name;
                        e[o] = !1
                    }
                }
        }
        return e
    }, T.prototype.updateCachedObjects = function() {
        this.cachedObjects = {};
        var e = this.citydbKmlLayerInstance._cesiumViewer.scene.primitives;
        if ("collada" == this.citydbKmlLayerInstance._layerType)
            for (var t = 0; t < e.length; t++) {
                var i = e.get(t);
                i instanceof Cesium.Model && i.ready && i._id.layerId === this.citydbKmlLayerInstance._id && (this.cachedObjects[i._id._name] = i)
            } else if ("extruded" == this.citydbKmlLayerInstance._layerType || "footprint" == this.citydbKmlLayerInstance._layerType || "geometry" == this.citydbKmlLayerInstance._layerType)
                for (var t = 0; t < e.length; t++) {
                    var i = e.get(t);
                    if (i instanceof Cesium.Primitive && Cesium.defined(i._instanceIds))
                        for (var n = 0; n < i._instanceIds.length; n++) {
                            var o = i._instanceIds[n];
                            if (Cesium.defined(o.name) && o.layerId === this.citydbKmlLayerInstance._id) {
                                var s = o._parent;
                                Cesium.defined(s) ? this.cachedObjects[o.name] = s._children : "Tile border" != o.name && (this.cachedObjects[o.name] = [o])
                            }
                        }
                }
    }, T.prototype.doTerminate = function() {
        null != this.oTask && (this.oTask.terminate(), this.oTask = null)
    }, T.prototype.triggerWorker = function() {
        var e = this;
        if (null != e.oTask) {
            if (!e.citydbKmlLayerInstance.hasHighlightedObjects() && !e.citydbKmlLayerInstance.hasHiddenObjects()) return;
            e.oTask.isSleep() && (e.oTask.wake(), e.rebuildDataPool())
        }
    }, T.prototype.addData = function(e) {
        null != this.oTask && this.oTask.triggerEvent("addData", e)
    }, T.prototype.removeData = function(e) {
        null != this.oTask && this.oTask.triggerEvent("removeData", e)
    }, T.prototype.clearDataPool = function() {
        null != this.oTask && this.oTask.triggerEvent("clearDataPool")
    }, T.prototype.rebuildDataPool = function() {
        null != this.oTask && (this.updateCachedObjects(), this.dataPool = this.generateDataPool(), this.oTask.triggerEvent("rebuildDataPool", this.dataPool))
    }, T.prototype.getWorkerInstance = function() {
        return this.oTask
    };
    var _t = Cesium.AssociativeArray,
        bt = Cesium.BoundingRectangle,
        wt = Cesium.Cartesian2,
        xt = Cesium.Cartesian3,
        Et = Cesium.Cartographic,
        Tt = Cesium.ClockRange,
        Ot = Cesium.ClockStep,
        Lt = Cesium.Color,
        kt = Cesium.createGuid,
        It = Cesium.defaultValue,
        Mt = Cesium.defined,
        St = Cesium.defineProperties,
        Pt = Cesium.DeveloperError,
        jt = Cesium.Ellipsoid,
        Dt = Cesium.Event,
        Nt = Cesium.getAbsoluteUri,
        At = Cesium.getExtensionFromUri,
        Ht = Cesium.getFilenameFromUri,
        Vt = Cesium.Iso8601,
        Wt = Cesium.joinUrls,
        $t = Cesium.JulianDate,
        Bt = Cesium.loadBlob,
        Ut = Cesium.loadXML,
        Rt = Cesium.CesiumMath,
        Ft = Cesium.NearFarScalar,
        Kt = Cesium.PinBuilder,
        zt = Cesium.PolygonHierarchy,
        Gt = Cesium.Rectangle,
        qt = Cesium.RuntimeError,
        Jt = Cesium.TimeInterval,
        Xt = Cesium.TimeIntervalCollection,
        Yt = Cesium.HeightReference,
        Qt = Cesium.HorizontalOrigin,
        Zt = Cesium.LabelStyle,
        ei = Cesium.SceneMode,
        ti = Cesium.Autolinker,
        ii = Cesium.Uri,
        ni = Cesium.when,
        oi = Cesium.zip,
        si = Cesium.BillboardGraphics,
        ri = Cesium.CompositePositionProperty,
        ai = Cesium.CorridorGraphics,
        li = Cesium.DataSource,
        ci = Cesium.DataSourceClock,
        hi = Cesium.Entity,
        ui = Cesium.EntityCluster,
        di = Cesium.EntityCollection,
        pi = Cesium.LabelGraphics,
        mi = Cesium.PathGraphics,
        fi = Cesium.PolygonGraphics,
        gi = Cesium.PolylineGraphics,
        vi = Cesium.PositionPropertyArray,
        Ci = Cesium.RectangleGraphics,
        yi = Cesium.ReferenceProperty,
        _i = Cesium.SampledPositionProperty,
        bi = Cesium.ScaledPositionProperty,
        wi = Cesium.TimeIntervalCollectionProperty,
        xi = {
            avi: "video/x-msvideo",
            bmp: "image/bmp",
            bz2: "application/x-bzip2",
            chm: "application/vnd.ms-htmlhelp",
            css: "text/css",
            csv: "text/csv",
            doc: "application/msword",
            dvi: "application/x-dvi",
            eps: "application/postscript",
            flv: "video/x-flv",
            gif: "image/gif",
            gz: "application/x-gzip",
            htm: "text/html",
            html: "text/html",
            ico: "image/vnd.microsoft.icon",
            jnlp: "application/x-java-jnlp-file",
            jpeg: "image/jpeg",
            jpg: "image/jpeg",
            m3u: "audio/x-mpegurl",
            m4v: "video/mp4",
            mathml: "application/mathml+xml",
            mid: "audio/midi",
            midi: "audio/midi",
            mov: "video/quicktime",
            mp3: "audio/mpeg",
            mp4: "video/mp4",
            mp4v: "video/mp4",
            mpeg: "video/mpeg",
            mpg: "video/mpeg",
            odp: "application/vnd.oasis.opendocument.presentation",
            ods: "application/vnd.oasis.opendocument.spreadsheet",
            odt: "application/vnd.oasis.opendocument.text",
            ogg: "application/ogg",
            pdf: "application/pdf",
            png: "image/png",
            pps: "application/vnd.ms-powerpoint",
            ppt: "application/vnd.ms-powerpoint",
            ps: "application/postscript",
            qt: "video/quicktime",
            rdf: "application/rdf+xml",
            rss: "application/rss+xml",
            rtf: "application/rtf",
            svg: "image/svg+xml",
            swf: "application/x-shockwave-flash",
            text: "text/plain",
            tif: "image/tiff",
            tiff: "image/tiff",
            txt: "text/plain",
            wav: "audio/x-wav",
            wma: "audio/x-ms-wma",
            wmv: "video/x-ms-wmv",
            xml: "application/xml",
            zip: "application/zip",
            detectFromFilename: function(e) {
                var t = e.toLowerCase();
                return t = At(t), xi[t]
            }
        },
        Ei = new DOMParser,
        Ti = new ti({
            stripPrefix: !1,
            twitter: !1,
            email: !1,
            replaceFn: function(e, t) {
                if (!t.protocolUrlMatch) return !1
            }
        }),
        Oi = 32,
        Li = 2414016,
        ki = 1,
        Ii = 16093e3,
        Mi = .1,
        Si = [null, void 0, "http://www.opengis.net/kml/2.2", "http://earth.google.com/kml/2.2", "http://earth.google.com/kml/2.1", "http://earth.google.com/kml/2.0"],
        Pi = ["http://www.google.com/kml/ext/2.2"],
        ji = ["http://www.w3.org/2005/Atom"],
        Di = {
            kml: Si,
            gx: Pi,
            atom: ji,
            kmlgx: Si.concat(Pi)
        },
        Ni = {},
        Ai = document.createElement("div"),
        Hi = {
            Point: ke,
            LineString: Ie,
            LinearRing: Ie,
            Polygon: Me,
            Track: Se,
            MultiTrack: je,
            MultiGeometry: De,
            Model: Ve
        },
        Vi = {
            INTERVAL: 0,
            EXPIRE: 1,
            STOP: 2
        },
        Wi = new Gt,
        $i = new Et,
        Bi = new wt,
        Ui = new xt,
        Ri = {
            Document: We,
            Folder: $e,
            LookAt: Ge,
            Placemark: Be,
            GroundOverlay: Ue,
            PhotoOverlay: Re,
            ScreenOverlay: Re,
            Tour: Re
        };
    Qe.load = function(e, t) {
        return t = It(t, It.EMPTY_OBJECT), new Qe(t).load(e, t)
    }, St(Qe.prototype, {
        name: {
            get: function() {
                return this._name
            }
        },
        clock: {
            get: function() {
                return this._clock
            }
        },
        entities: {
            get: function() {
                return this._entityCollection
            }
        },
        isLoading: {
            get: function() {
                return this._isLoading
            }
        },
        changedEvent: {
            get: function() {
                return this._changed
            }
        },
        errorEvent: {
            get: function() {
                return this._error
            }
        },
        loadingEvent: {
            get: function() {
                return this._loading
            }
        },
        refreshEvent: {
            get: function() {
                return this._refresh
            }
        },
        unsupportedNodeEvent: {
            get: function() {
                return this._unsupportedNode
            }
        },
        show: {
            get: function() {
                return this._entityCollection.show
            },
            set: function(e) {
                this._entityCollection.show = e
            }
        },
        clustering: {
            get: function() {
                return this._entityCluster
            },
            set: function(e) {
                if (!Mt(e)) throw new Pt("value must be defined.");
                this._entityCluster = e
            }
        }
    }), Qe.prototype.load = function(e, t) {
        if (!Mt(e)) throw new Pt("data is required.");
        t = It(t, {}), li.setLoading(this, !0);
        var i = this._name;
        this._name = void 0, this._clampToGround = It(t.clampToGround, !1);
        var n = this;
        return Ye(this, this._entityCollection, e, t).then(function() {
            var e, t = n._entityCollection.computeAvailability(),
                o = t.start,
                s = t.stop,
                r = $t.equals(o, Vt.MINIMUM_VALUE),
                a = $t.equals(s, Vt.MAXIMUM_VALUE);
            if (!r || !a) {
                var l;
                r && (l = new Date, l.setHours(0, 0, 0, 0), o = $t.fromDate(l)), a && (l = new Date, l.setHours(24, 0, 0, 0), s = $t.fromDate(l)), e = new ci, e.startTime = o, e.stopTime = s, e.currentTime = $t.clone(o), e.clockRange = Tt.LOOP_STOP, e.clockStep = Ot.SYSTEM_CLOCK_MULTIPLIER, e.multiplier = Math.round(Math.min(Math.max($t.secondsDifference(s, o) / 60, 1), 31556900))
            }
            var c = !1;
            return e !== n._clock && (n._clock = e, c = !0), i !== n._name && (c = !0), c && n._changed.raiseEvent(n), li.setLoading(n, !1), n
        }).otherwise(function(e) {
            return li.setLoading(n, !1), n._error.raiseEvent(n, e), console.log(e), ni.reject(e)
        })
    };
    var Fi = new _t;
    Qe.prototype.update = function(e) {
        function t(e) {
            for (var i = e._children, n = i.length, o = 0; o < n; ++o) {
                var s = i[o];
                Fi.set(s.id, s), t(s)
            }
        }
        var i = this._networkLinks;
        if (0 === i.length) return !0;
        var n = $t.now(),
            o = this;
        Fi.removeAll();
        var s = !1,
            r = this._lastCameraView,
            a = this._camera;
        !Mt(a) || a.positionWC.equalsEpsilon(r.position, Rt.EPSILON7) && a.directionWC.equalsEpsilon(r.direction, Rt.EPSILON7) && a.upWC.equalsEpsilon(r.up, Rt.EPSILON7) || (r.position = xt.clone(a.positionWC), r.direction = xt.clone(a.directionWC), r.up = xt.clone(a.upWC), r.bbox = a.computeViewRectangle(), s = !0);
        var l = new _t,
            c = !1;
        return i.values.forEach(function(e) {
            var i = e.entity;
            if (!Fi.contains(i.id)) {
                if (!e.updating) {
                    var a = !1;
                    if (e.refreshMode === Vi.INTERVAL ? $t.secondsDifference(n, e.lastUpdated) > e.time && (a = !0) : e.refreshMode === Vi.EXPIRE ? $t.greaterThan(n, e.time) && (a = !0) : e.refreshMode === Vi.STOP && (s && (e.needsUpdate = !0, e.cameraUpdateTime = n), e.needsUpdate && $t.secondsDifference(n, e.cameraUpdateTime) >= e.time && (a = !0)), a) {
                        t(i), e.updating = !0;
                        var h = new di,
                            u = Wt(e.href, Ke(e.cookie, e.queryString), !1);
                        u = ze(o._camera, o._canvas, u, e.viewBoundScale, r.bbox), Ye(o, h, u, {
                            context: i.id
                        }).then(et(o, e, h, l, u)).otherwise(function(t) {
                            var i = "NetworkLink " + e.href + " refresh failed: " + t;
                            console.log(i), o._error.raiseEvent(o, i)
                        }), c = !0
                    }
                }
                l.set(e.id, e)
            }
        }), c && (this._networkLinks = l, this._changed.raiseEvent(this)), !0
    };
    var Ki = Cesium.BoundingRectangle,
        zi = Cesium.Cartesian2,
        Gi = Cesium.Cartesian3,
        qi = Cesium.Cartesian4,
        Ji = Cesium.Cartographic,
        Xi = Cesium.defined,
        Yi = Cesium.DeveloperError,
        Qi = Cesium.Math,
        Zi = Cesium.Matrix4,
        en = Cesium.Transforms,
        tn = Cesium.SceneMode,
        nn = {},
        on = new qi(0, 0, 0, 1),
        sn = new qi,
        rn = new Ki,
        an = new zi,
        ln = new zi;
    nn.wgs84ToWindowCoordinates = function(e, t, i) {
        return nn.wgs84WithEyeOffsetToWindowCoordinates(e, t, Gi.ZERO, i)
    };
    var cn = new qi,
        hn = new Gi,
        un = new Ji(Math.PI, Qi.PI_OVER_TWO),
        dn = new Gi,
        pn = new Gi;
    nn.wgs84WithEyeOffsetToWindowCoordinates = function(e, t, i, n) {
        if (!Xi(e)) throw new Yi("scene is required.");
        if (!Xi(t)) throw new Yi("position is required.");
        var o = e.frameState,
            s = nn.computeActualWgs84Position(o, t, on);
        if (Xi(s)) {
            var r = e.canvas,
                a = rn;
            a.x = 0, a.y = 0, a.width = r.clientWidth, a.height = r.clientHeight;
            var l = e.camera,
                c = !1;
            if (o.mode === tn.SCENE2D) {
                var h = e.mapProjection,
                    u = un,
                    d = h.project(u, dn),
                    p = Gi.clone(l.position, pn),
                    m = l.frustum.clone(),
                    f = Zi.computeViewportTransformation(a, 0, 1, new Zi),
                    g = l.frustum.projectionMatrix,
                    v = l.positionWC.y,
                    C = Gi.fromElements(Qi.sign(v) * d.x - v, 0, -l.positionWC.x),
                    y = en.pointToGLWindowCoordinates(g, f, C);
                if (0 === v || y.x <= 0 || y.x >= r.clientWidth) c = !0;
                else {
                    if (y.x > .5 * r.clientWidth) {
                        a.width = y.x, l.frustum.right = d.x - v, sn = it(s, i, l, sn), nn.clipToGLWindowCoordinates(a, sn, an), a.x += y.x, l.position.x = -l.position.x;
                        var _ = l.frustum.right;
                        l.frustum.right = -l.frustum.left, l.frustum.left = -_, sn = it(s, i, l, sn), nn.clipToGLWindowCoordinates(a, sn, ln)
                    } else {
                        a.x += y.x, a.width -= y.x, l.frustum.left = -d.x - v, sn = it(s, i, l, sn), nn.clipToGLWindowCoordinates(a, sn, an), a.x = a.x - a.width, l.position.x = -l.position.x;
                        var b = l.frustum.left;
                        l.frustum.left = -l.frustum.right, l.frustum.right = -b, sn = it(s, i, l, sn), nn.clipToGLWindowCoordinates(a, sn, ln)
                    }
                    Gi.clone(p, l.position), l.frustum = m.clone(), n = zi.clone(an, n), (n.x < 0 || n.x > r.clientWidth) && (n.x = ln.x)
                }
            }
            return (o.mode !== tn.SCENE2D || c) && (sn = it(s, i, l, sn), sn.z < 0 && o.mode !== tn.SCENE2D && (sn.y = 0 - sn.y), n = nn.clipToGLWindowCoordinates(a, sn, n)), n.y = r.clientHeight - n.y, n
        }
    }, nn.wgs84ToDrawingBufferCoordinates = function(e, t, i) {
        if (i = nn.wgs84ToWindowCoordinates(e, t, i), Xi(i)) return nn.transformWindowToDrawingBuffer(e, i, i)
    };
    var mn = new Gi,
        fn = new Ji;
    nn.computeActualWgs84Position = function(e, t, i) {
        var n = e.mode;
        if (n === tn.SCENE3D) return Gi.clone(t, i);
        var o = e.mapProjection,
            s = o.ellipsoid.cartesianToCartographic(t, fn);
        if (Xi(s)) {
            if (o.project(s, mn), n === tn.COLUMBUS_VIEW) return Gi.fromElements(mn.z, mn.x, mn.y, i);
            if (n === tn.SCENE2D) return Gi.fromElements(0, mn.x, mn.y, i);
            var r = e.morphTime;
            return Gi.fromElements(Qi.lerp(mn.z, t.x, r), Qi.lerp(mn.x, t.y, r), Qi.lerp(mn.y, t.z, r), i)
        }
    };
    var gn = new Gi,
        vn = new Gi,
        Cn = new Zi;
    nn.clipToGLWindowCoordinates = function(e, t, i) {
        return Gi.divideByScalar(t, t.w, gn), Zi.computeViewportTransformation(e, 0, 1, Cn), Zi.multiplyByPoint(Cn, gn, vn), zi.fromCartesian3(vn, i)
    }, nn.clipToDrawingBufferCoordinates = function(e, t, i) {
        return Gi.divideByScalar(t, t.w, gn), Zi.computeViewportTransformation(e, 0, 1, Cn), Zi.multiplyByPoint(Cn, gn, vn), zi.fromCartesian3(vn, i)
    }, nn.transformWindowToDrawingBuffer = function(e, t, i) {
        var n = e.canvas,
            o = e.drawingBufferWidth / n.clientWidth,
            s = e.drawingBufferHeight / n.clientHeight;
        return zi.fromElements(t.x * o, t.y * s, i)
    };
    var yn = new qi,
        _n = new qi;
    nn.drawingBufferToWgs84Coordinates = function(e, t, i, n) {
        var o = e.context,
            s = o.uniformState,
            r = e._passState.viewport,
            a = qi.clone(qi.UNIT_W, yn);
        a.x = (t.x - r.x) / r.width * 2 - 1, a.y = (t.y - r.y) / r.height * 2 - 1, a.z = 2 * i - 1, a.w = 1;
        var l = Zi.multiplyByVector(s.inverseViewProjection, a, _n),
            c = 1 / l.w;
        return Gi.multiplyByScalar(l, c, l), Gi.fromCartesian4(l, n)
    };
    var bn = {};
    nt.prototype.doStart = function() {
        var e = this,
            t = mt.retrieveURL("geobim");
        void 0 === t && (t = mt.retrieveURL("geobim.min")), this.oTask = new E(t + "Webworkers/CitydbKmlTilingManagerWebworker.js");
        var i = this.citydbKmlLayerInstance.cesiumViewer,
            n = i._dataSourceCollection,
            o = i.cesiumWidget,
            s = o.scene,
            r = (s.camera, s.canvas),
            a = (s.globe, this.citydbKmlLayerInstance.minLodPixels),
            l = this.citydbKmlLayerInstance.maxLodPixels;
        this.citydbKmlLayerInstance.isHighlightingActivated && this.citydbKmlLayerInstance.citydbKmlHighlightingManager.doStart();
        var c = this.dataPoolKml,
            h = this.networklinkCache,
            u = this.citydbKmlLayerInstance.url,
            d = this.citydbKmlLayerInstance._jsonLayerInfo,
            p = mt.get_host_and_path_from_URL(u),
            m = d.version,
            f = d.layername,
            g = d.displayform,
            v = d.fileextension,
            C = d.colnum,
            y = d.rownum;
        "0.8" == mt.parse_query_string("gltf_version", window.location.href) && (C += 1, y += 1);
        var _ = d.bbox,
            b = (_.ymax - _.ymin) / y,
            w = (_.xmax - _.xmin) / C;
        e.oTask.triggerEvent("createMatrix", _, b, w, y, C), this.oTask.addListener("removeDatasources", function() {
            for (var t in c) {
                var i = c[t],
                    o = i.kmlDatasource,
                    h = nn.wgs84ToWindowCoordinates(s, i.lowerRightCorner),
                    u = nn.wgs84ToWindowCoordinates(s, i.upperRightCorner),
                    d = nn.wgs84ToWindowCoordinates(s, i.upperLeftCorner),
                    p = nn.wgs84ToWindowCoordinates(s, i.lowerLeftCorner),
                    m = r.clientWidth,
                    f = r.clientHeight,
                    g = [{
                        x: h.x,
                        y: h.y
                    }, {
                        x: u.x,
                        y: u.y
                    }, {
                        x: d.x,
                        y: d.y
                    }, {
                        x: p.x,
                        y: p.y
                    }],
                    v = [{
                        x: 0,
                        y: 0
                    }, {
                        x: m,
                        y: 0
                    }, {
                        x: m,
                        y: f
                    }, {
                        x: 0,
                        y: f
                    }],
                    C = ot(g, v);
                (C < a || C > l) && (n.remove(o), delete c[t], e.oTask.triggerEvent("updateDataPoolRecord"))
            }
            var y = e.createFrameBbox();
            Cesium.when(y, function(t) {
                e.oTask.triggerEvent("checkDataPool", t)
            })
        }), this.oTask.addListener("checkMasterPool", function(t, o) {
            if (!Cesium.defined(t)) return void e.oTask.triggerEvent("updateTaskStack");
            if (null != e.timer) return void e.oTask.triggerEvent("pushTastItem", t);
            var u, d = t[0],
                C = t[1],
                y = t[2],
                _ = t[3],
                b = t[4].col,
                w = t[4].row;
            u = "1.0.0" == m ? p + "Tiles/" + w + "/" + b + "/" + f + "_Tile_" + w + "_" + b + "_" + g + v : p + f + "_Tile_" + w + "_" + b + "_" + g + v;
            var x, E, T, O, L = r.clientWidth,
                k = r.clientHeight;
            if (i.terrainProvider instanceof Cesium.EllipsoidTerrainProvider) x = Cesium.Cartesian3.fromDegrees(y, C), E = Cesium.Cartesian3.fromDegrees(y, _), T = Cesium.Cartesian3.fromDegrees(d, _), O = Cesium.Cartesian3.fromDegrees(d, C);
            else {
                var I = st(new Cesium.Cartesian2(L / 2, k), s);
                if (void 0 === I) return e.oTask.triggerEvent("updateTaskStack"), void e.oTask.triggerEvent("updateDataPoolRecord");
                var M = Cesium.Ellipsoid.WGS84.cartesianToCartographic(I).height;
                x = Cesium.Cartesian3.fromDegrees(y, C, M), E = Cesium.Cartesian3.fromDegrees(y, _, M), T = Cesium.Cartesian3.fromDegrees(d, _, M), O = Cesium.Cartesian3.fromDegrees(d, C, M)
            }
            var S = nn.wgs84ToWindowCoordinates(s, x),
                P = nn.wgs84ToWindowCoordinates(s, E),
                j = nn.wgs84ToWindowCoordinates(s, T),
                D = nn.wgs84ToWindowCoordinates(s, O),
                N = [{
                    x: S.x,
                    y: S.y
                }, {
                    x: P.x,
                    y: P.y
                }, {
                    x: j.x,
                    y: j.y
                }, {
                    x: D.x,
                    y: D.y
                }],
                A = [{
                    x: 0,
                    y: 0
                }, {
                    x: L,
                    y: 0
                }, {
                    x: L,
                    y: k
                }, {
                    x: 0,
                    y: k
                }],
                H = ot(N, A);
            if (h.hasOwnProperty(u))
                if (H >= a && H <= l)
                    if (c.hasOwnProperty(u)) e.oTask.triggerEvent("updateTaskStack");
                    else {
                        h[u].cacheStartTime = (new Date).getTime();
                        var V = h[u].networklinkItem;
                        V.lowerRightCorner = x, V.upperRightCorner = E, V.upperLeftCorner = T, V.lowerLeftCorner = O;
                        var W = V.kmlDatasource;
                        c[u] = V;
                        var $ = mt.generateUUID();
                        bn[$] = u, e.taskNumber = o.length, n.add(W).then(function() {
                            delete bn[$], e.oTask.triggerEvent("updateTaskStack"), e.oTask.triggerEvent("updateDataPoolRecord")
                        }).otherwise(function(t) {
                            delete bn[$], e.oTask.triggerEvent("updateTaskStack")
                        })
                    }
            else e.oTask.triggerEvent("updateTaskStack");
            else {
                var B = new Qe({
                        layerId: e.citydbKmlLayerInstance.id,
                        camera: e.citydbKmlLayerInstance.cesiumViewer.scene.camera,
                        canvas: e.citydbKmlLayerInstance.cesiumViewer.scene.canvas
                    }),
                    U = {
                        url: u,
                        kmlDatasource: B,
                        lowerRightCorner: x,
                        upperRightCorner: E,
                        upperLeftCorner: T,
                        lowerLeftCorner: O
                    };
                if (H >= a && H <= l) {
                    e.oTask.triggerEvent("updateDataPoolRecord"), n.add(B), c[u] = U, h[u] = {
                        networklinkItem: U,
                        cacheStartTime: (new Date).getTime()
                    };
                    var $ = mt.generateUUID();
                    bn[$] = u, e.taskNumber = o.length, B.load(u).then(function(t) {
                        delete bn[$], e.oTask.triggerEvent("updateTaskStack")
                    }).otherwise(function(t) {
                        delete bn[$], e.oTask.triggerEvent("updateTaskStack")
                    })
                } else t[4].preFetching && 0 == Object.keys(bn).length ? (h[u] = {
                    networklinkItem: U,
                    cacheStartTime: (new Date).getTime()
                }, e.taskNumber = o.length, B.load(u).then(function() {
                    e.startPrefetching ? (e.oTask.triggerEvent("updateTaskStack", 500), e.startPrefetching = !1) : e.oTask.triggerEvent("updateTaskStack", 500)
                }).otherwise(function(t) {
                    e.oTask.triggerEvent("updateTaskStack")
                })) : (t[4].preFetching = !0, e.oTask.triggerEvent("pushTastItem", t))
            }
        }), e.oTask.addListener("cleanCaching", function(t) {
            var i = e.citydbKmlLayerInstance.maxSizeOfCachedTiles;
            Cesium.defined(t) && (i = t);
            var n = 0,
                o = new Object;
            for (var s in h) c.hasOwnProperty(s) || (o[s] = h[s].cacheStartTime, n++);
            for (; n > i;) {
                var r = Number.MAX_VALUE,
                    a = null;
                for (var s in o) {
                    var l = o[s];
                    l < r && (r = l, a = s)
                }
                o[a] = Number.MAX_VALUE, Cesium.destroyObject(h[a].networklinkItem.kmlDatasource), delete h[a], n--
            }
        }), e.oTask.addListener("refreshView", function() {
            e.oTask.oListeners.cleanCaching.call(this), e.oTask.sleep(), e.citydbKmlLayerInstance.isHighlightingActivated && e.citydbKmlLayerInstance.citydbKmlHighlightingManager.triggerWorker(), setTimeout(function() {
                e.taskNumber = 0, e.triggerWorker(!1)
            }, 1e3 + 1e3 * Math.random())
        });
        var x = e.createFrameBbox();
        Cesium.when(x, function(t) {
            e.oTask.triggerEvent("initWorker", t, e.citydbKmlLayerInstance.maxCountOfVisibleTiles)
        }), this.runMonitoring()
    }, nt.prototype.isDataStreaming = function() {
        return null != this.oTask && !this.oTask.isSleep()
    }, nt.prototype.clearCaching = function() {
        if (null == this.oTask) return !1;
        this.oTask.oListeners.cleanCaching.call(this, 0)
    }, nt.prototype.createBboxGeometry = function(e) {
        var t = Cesium.Rectangle.fromDegrees(e.xmin, e.ymin, e.xmax, e.ymax),
            i = this.citydbKmlLayerInstance.cesiumViewer;
        this.boundingboxEntity = {
            id: Cesium.createGuid(),
            rectangle: {
                coordinates: t,
                fill: !1,
                outline: !0,
                outlineWidth: 20,
                outlineColor: Cesium.Color.BLUE
            }
        }, i.entities.add(this.boundingboxEntity)
    }, nt.prototype.createFrameBbox = function() {
        var e = this.citydbKmlLayerInstance.cesiumViewer,
            t = e.cesiumWidget,
            i = t.scene,
            n = i.canvas,
            o = (n.clientWidth, n.clientHeight),
            s = o / 10;
        return this.calcaulateFrameBbox(0, s, null)
    }, nt.prototype.calcaulateFrameBbox = function(e, t, i) {
        var n, o = this;
        n = null == i ? Cesium.when.defer() : i;
        var s = this.citydbKmlLayerInstance.cesiumViewer,
            r = s.cesiumWidget,
            a = r.scene,
            l = (a.camera, a.canvas),
            c = (a.globe, l.clientWidth),
            h = l.clientHeight;
        if (e > h) n.resolve(null);
        else {
            var u = st(new Cesium.Cartesian2(0, e), a),
                d = st(new Cesium.Cartesian2(c, e), a);
            if (Cesium.defined(u) && Cesium.defined(d)) {
                var p = st(new Cesium.Cartesian2(c, h), a),
                    m = st(new Cesium.Cartesian2(0, e), a),
                    f = st(new Cesium.Cartesian2(0, h), a),
                    g = st(new Cesium.Cartesian2(c, e), a);
                if (Cesium.defined(p) && Cesium.defined(m) && Cesium.defined(f) && Cesium.defined(g)) {
                    var v = Cesium.Ellipsoid.WGS84.cartesianToCartographic(p),
                        C = Cesium.Ellipsoid.WGS84.cartesianToCartographic(m),
                        y = Cesium.Ellipsoid.WGS84.cartesianToCartographic(f),
                        _ = Cesium.Ellipsoid.WGS84.cartesianToCartographic(g),
                        b = Math.min(Cesium.Math.toDegrees(v.longitude), Cesium.Math.toDegrees(C.longitude), Cesium.Math.toDegrees(y.longitude), Cesium.Math.toDegrees(_.longitude)),
                        w = Math.max(Cesium.Math.toDegrees(v.longitude), Cesium.Math.toDegrees(C.longitude), Cesium.Math.toDegrees(y.longitude), Cesium.Math.toDegrees(_.longitude)),
                        x = Math.min(Cesium.Math.toDegrees(v.latitude), Cesium.Math.toDegrees(C.latitude), Cesium.Math.toDegrees(y.latitude), Cesium.Math.toDegrees(_.latitude)),
                        E = Math.max(Cesium.Math.toDegrees(v.latitude), Cesium.Math.toDegrees(C.latitude), Cesium.Math.toDegrees(y.latitude), Cesium.Math.toDegrees(_.latitude)),
                        T = {
                            minX: b,
                            maxX: w,
                            minY: x,
                            maxY: E
                        },
                        O = mt.generateUUID();
                    o.oTask.triggerEvent("checkFrameBbox", O, T), o.oTask.addListener(O, function(i) {
                        if (i) {
                            var s = st(new Cesium.Cartesian2(c / 2, h), a);
                            if (Cesium.defined(s)) {
                                var r = Cesium.Ellipsoid.WGS84.cartesianToCartographic(s);
                                T = {
                                    minX: T.minX,
                                    maxX: T.maxX,
                                    minY: T.minY,
                                    maxY: T.maxY,
                                    refX: Cesium.Math.toDegrees(r.longitude),
                                    refY: Cesium.Math.toDegrees(r.latitude)
                                }, n.resolve(T)
                            } else n.resolve(null)
                        } else e += t, o.calcaulateFrameBbox(e, t, n);
                        o.oTask.removeListener(O)
                    })
                } else n.resolve(null)
            } else e += t, o.calcaulateFrameBbox(e, t, n)
        }
        return n.promise
    }, nt.prototype.isStarted = function() {
        return null != this.oTask
    }, nt.prototype.doTerminate = function() {
        if (null != this.oTask) {
            this.oTask.terminate(), this.oTask = null;
            var e = this.citydbKmlLayerInstance._cesiumViewer,
                t = e._dataSourceCollection;
            for (var i in this.dataPoolKml) {
                var n = this.dataPoolKml[i],
                    o = n.kmlDatasource;
                t.remove(o)
            }
            this.dataPoolKml = {}, this.networklinkCache = {}, null != this.boundingboxEntity && e.entities.remove(this.boundingboxEntity), this.citydbKmlLayerInstance.isHighlightingActivated && this.citydbKmlLayerInstance.citydbKmlHighlightingManager.doTerminate()
        }
    }, nt.prototype.getWorkerInstance = function() {
        return this.oTask
    }, nt.prototype.triggerWorker = function(e) {
        var t = this;
        null != t.oTask && (t.oTask.isSleep() ? (t.oTask.wake(), t.startPrefetching = !0, t.oTask.triggerEvent("notifyWake")) : e && (t.startPrefetching = !0, t.oTask.triggerEvent("abortAndnotifyWake")))
    }, nt.prototype.runMonitoring = function() {
        var e = this,
            t = this.citydbKmlLayerInstance.cesiumViewer;
        t.scene;
        e.citydbKmlLayerInstance.registerEventHandler("VIEWCHANGED", function() {
            null != e.timer && clearTimeout(e.timer), e.timer = setTimeout(function() {
                e.triggerWorker(!0), e.timer = null
            }, 100 + 100 * Math.random())
        })
    }, Object.defineProperties(rt.prototype, {
        active: {
            get: function() {
                return this._active
            }
        },
        className: {
            get: function() {
                return this._className
            }
        },
        show: {
            get: function() {
                return this._show && this._active
            }
        },
        highlightedObjects: {
            get: function() {
                return this._highlightedObjects
            },
            set: function(e) {
                this._highlightedObjects = e
            }
        },
        hiddenObjects: {
            get: function() {
                return this._hiddenObjects
            },
            set: function(e) {
                this._hiddenObjects = e
            }
        },
        cameraPosition: {
            get: function() {
                return this._cameraPosition
            },
            set: function(e) {
                this._cameraPosition = e
            }
        },
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        urlSuffix: {
            get: function() {
                return this._urlSuffix
            },
            set: function(e) {
                this._urlSuffix = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        id: {
            get: function() {
                return this._id
            }
        },
        thematicDataUrl: {
            get: function() {
                return this._thematicDataUrl
            },
            set: function(e) {
                this._thematicDataUrl = e
            }
        },
        thematicDataProvider: {
            get: function() {
                return this._thematicDataProvider
            },
            set: function(e) {
                this._thematicDataProvider = e
            }
        },
        cityobjectsJsonUrl: {
            get: function() {
                return this._cityobjectsJsonUrl
            },
            set: function(e) {
                this._cityobjectsJsonUrl = e
            }
        },
        cityobjectsJsonData: {
            get: function() {
                return this._cityobjectsJsonData
            },
            set: function(e) {
                this._cityobjectsJsonData = e
            }
        },
        cesiumViewer: {
            get: function() {
                return this._cesiumViewer
            }
        },
        citydbKmlDataSource: {
            get: function() {
                return this._citydbKmlDataSource
            }
        },
        minLodPixels: {
            get: function() {
                return this._minLodPixels
            },
            set: function(e) {
                this._minLodPixels = e
            }
        },
        maxLodPixels: {
            get: function() {
                return this._maxLodPixels
            },
            set: function(e) {
                this._maxLodPixels = e
            }
        },
        maxSizeOfCachedTiles: {
            get: function() {
                return this._maxSizeOfCachedTiles
            },
            set: function(e) {
                this._maxSizeOfCachedTiles = e
            }
        },
        maxCountOfVisibleTiles: {
            get: function() {
                return this._maxCountOfVisibleTiles
            },
            set: function(e) {
                this._maxCountOfVisibleTiles = e
            }
        },
        citydbKmlTilingManager: {
            get: function() {
                return this._citydbKmlTilingManager
            }
        },
        citydbKmlHighlightingManager: {
            get: function() {
                return this._citydbKmlHighlightingManager
            }
        },
        isHighlightingActivated: {
            get: function() {
                return null != this._citydbKmlHighlightingManager
            }
        },
        highlightColor: {
            get: function() {
                return this._highlightColor
            },
            set: function(e) {
                this._highlightColor = e
            }
        },
        mouseOverhighlightColor: {
            get: function() {
                return this._mouseOverhighlightColor
            },
            set: function(e) {
                this._mouseOverhighlightColor = e
            }
        },
        configParameters: {
            get: function() {
                return this._configParameters
            }
        }
    }), rt.prototype.addToCesium = function(e) {
        this._cesiumViewer = e, this._urlSuffix = mt.get_suffix_from_filename(this._url);
        var t = this,
            i = Cesium.when.defer();
        return "json" == this._urlSuffix ? (this._citydbKmlDataSource = new Qe({
            layerId: this._id,
            camera: e.scene.camera,
            canvas: e.scene.canvas
        }), this.registerMouseEventHandlers(), at(t, !0)) : ("kml" == this._urlSuffix || "kmz" == this._urlSuffix ? (this._citydbKmlDataSource = new Cesium.KmlDataSource({
            camera: e.scene.camera,
            canvas: e.scene.canvas
        }), this._citydbKmlDataSource.load(this._url).then(function(n) {
            if (lt(n.entities, t._id), t._active) {
                e.dataSources.add(n);
                for (var o = n.entities.values, s = 0; s < o.length; s++) {
                    var r = o[s];
                    if (r.polygon) {
                        r.polygon.perPositionHeight = !1, r.polygon.height = 100, r.polygon.outline = !0, r.polygon.outlineColor = Cesium.Color.BLUE;
                        var a = r.polygon.material.color._value;
                        r.polygon.material = Cesium.Color.fromCssColorString("rgb(" + 255 * a.red + "," + 255 * a.green + "," + 255 * a.blue + ")").withAlpha(.3), r.polygon.outlineWidth = 5
                    }
                    r.polyline && (r.polyline.disableDepthTestDistance = 1e8, r.show = !0), r.label && (r.label.disableDepthTestDistance = 1e8, r.label.style = Cesium.LabelStyle.FILL_AND_OUTLINE, r.label.outlineWidth = 3, r.label.translucencyByDistance = new Cesium.NearFarScalar(150, 1, 15e3, 0)), r.billboard && ("xzqh.kml" == n.name && (r.billboard.show = !1), r.billboard.disableDepthTestDistance = 1e8)
                }
            }
            i.resolve(t)
        }).otherwise(function(e) {
            i.reject(new Cesium.DeveloperError("Failed to load: " + t._url))
        })) : i.reject(new Cesium.DeveloperError("Unsupported Datasource from: " + t._url)), this.registerMouseEventHandlers(), Cesium.knockout.getObservable(this, "_highlightedObjects").subscribe(function() {
            "json" == t._urlSuffix && t._citydbKmlTilingManager.clearCaching()
        }), Cesium.knockout.getObservable(this, "_hiddenObjects").subscribe(function() {
            "json" == t._urlSuffix && t._citydbKmlTilingManager.clearCaching()
        }), i.promise)
    }, rt.prototype.removeFromCesium = function(e) {
        this.activate(!1)
    }, rt.prototype.registerMouseEventHandlers = function() {
        function e(e, t, i) {
            for (var n = 0; n < e.length; n++) {
                var o = e[n],
                    s = t.getGeometryInstanceAttributes(o);
                Cesium.defined(o.originalSurfaceColor) || o.addProperty("originalSurfaceColor"), o.originalSurfaceColor = s.color, s.color = Cesium.ColorGeometryInstanceAttribute.toValue(i)
            }
        }

        function t(e, t) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i],
                    o = n.originalSurfaceColor;
                try {
                    t.getGeometryInstanceAttributes(n).color = o
                } catch (e) {
                    console.log(e)
                }
            }
        }
        var i = this._highlightColor,
            n = this._mouseOverhighlightColor,
            o = this;
        o.registerEventHandler("CLICK", function(e) {
            var t = e.id,
                n = (e.primitive, t.name);
            if ("Tile border" != n && !o.isInHighlightedList(n)) {
                o.unHighlightAllObjects();
                var s = {};
                s[n] = i, o.highlight(s)
            }
        }), o.registerEventHandler("CTRLCLICK", function(e) {
            var t = e.id,
                n = (e.primitive, t.name);
            if ("Tile border" != n)
                if (o.isInHighlightedList(n)) o.unHighlight([n]);
                else {
                    var s = {};
                    s[n] = i, o.highlight(s)
                }
        }), o.registerEventHandler("MOUSEIN", function(t) {
            var i = t.id,
                s = t.primitive;
            if (Cesium.defined(i) && Cesium.defined(s) && !o.isInHighlightedList(i.name))
                if (s instanceof Cesium.Model) {
                    if (!Cesium.defined(i.originalMaterial)) {
                        i.addProperty("originalMaterial");
                        var r = s._runtime.materialsByName;
                        for (var a in r) i.originalMaterial = r[a].getValue("emission").clone()
                    }
                    for (var r = t.mesh._materials, l = 0; l < r.length; l++) r[l].setValue("emission", Cesium.Cartesian4.fromColor(n))
                } else if (s instanceof Cesium.Primitive) {
                try {
                    var c, h = i._parent;
                    c = Cesium.defined(h) ? h._children : [i]
                } catch (e) {
                    return
                }
                e(c, s, n)
            }
        }), o.registerEventHandler("MOUSEOUT", function(e) {
            var i = e.primitive,
                n = e.id;
            if (Cesium.defined(n) && Cesium.defined(i) && !o.isInHighlightedList(n.name))
                if (i instanceof Cesium.Model)
                    for (var s = e.mesh._materials, r = 0; r < s.length; r++) s[r].setValue("emission", n.originalMaterial);
                else if (i instanceof Cesium.Primitive) {
                try {
                    var a, l = n._parent;
                    a = Cesium.defined(l) ? l._children : [n]
                } catch (e) {
                    return
                }
                t(a, i)
            }
        })
    }, rt.prototype.setMaterialById = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = e[t],
                n = this.getObjectById(i);
            if (null == n) return;
            if (n instanceof Cesium.Model) {
                if (n.ready) {
                    var o = this._highlightedObjects[n._id._name];
                    if (o) {
                        var s = n._id;
                        if (!Cesium.defined(s.originalMaterial)) {
                            s.addProperty("originalMaterial");
                            var r = n._runtime.materialsByName;
                            for (var a in r) s.originalMaterial = r[a].getValue("emission").clone()
                        }
                        var r = n._runtime.materialsByName;
                        for (var a in r) r[a].setValue("emission", Cesium.Cartesian4.fromColor(o))
                    }
                }
            } else if (n instanceof Array)
                for (var l = 0; l < n.length; l++) {
                    var c = n[l];
                    Cesium.defined(c.originalMaterial) || c.addProperty("originalMaterial"), c.originalMaterial = this.getObjectMaterial(c), this.setObjectMaterial(c, this._highlightColor)
                }
        }
    }, rt.prototype.clearColorById = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = e[t],
                n = this.getObjectById(i);
            if (null == n) return;
            if (n instanceof Cesium.Model);
            else if (n instanceof Array)
                for (var o = 0; o < n.length; o++) {
                    var s = n[o];
                    this.setObjectMaterial(s, s.originalMaterial)
                }
        }
    }, rt.prototype.highlight = function(e) {
        for (var t in e) this._highlightedObjects[t] = e[t], this.highlightObject(this.getObjectById(t));
        this._highlightedObjects = this._highlightedObjects
    }, rt.prototype.unHighlight = function(e) {
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            delete this._highlightedObjects[i]
        }
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            this.unHighlightObject(this.getObjectById(i))
        }
        this._highlightedObjects = this._highlightedObjects
    }, rt.prototype.hideObjects = function(e) {
        if (!e) {
            e = [];
            for (var t in this._highlightedObjects) e.push(t)
        }
        for (var i = 0; i < e.length; i++) {
            var n = e[i];
            this.isInHiddenList(n) || this._hiddenObjects.push(n), this.hideObject(this.getObjectById(n))
        }
        this._hiddenObjects = this._hiddenObjects
    }, rt.prototype.showObjects = function(e) {
        if (!e) {
            e = [];
            for (var t = 0; t < this._hiddenObjects.length; t++) e.push(this._hiddenObjects[t])
        }
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            this._hiddenObjects.splice(i, 1)
        }
        for (var t = 0; t < e.length; t++) {
            var i = e[t];
            this.showObject(this.getObjectById(i))
        }
        this._hiddenObjects = this._hiddenObjects
    }, rt.prototype.activate = function(e) {
        this._active = e, "json" == this._urlSuffix ? 0 == e ? (this._citydbKmlTilingManager.doTerminate(), this._cesiumViewer.dataSources.remove(this._citydbKmlDataSource)) : (this._citydbKmlTilingManager.doStart(), this._cesiumViewer.dataSources.add(this._citydbKmlDataSource)) : "kml" != this._urlSuffix && "kmz" != this._urlSuffix || (0 == e ? this._cesiumViewer.dataSources.remove(this._citydbKmlDataSource) : this._cesiumViewer.dataSources.add(this._citydbKmlDataSource))
    }, rt.prototype.zoomTo = function() {
        if ("json" == this._urlSuffix) {
            var e = this,
                t = this._cameraPosition.lat,
                i = this._cameraPosition.lon,
                n = Cesium.Cartesian3.fromDegrees(i, t),
                o = Cesium.Math.toRadians(this._cameraPosition.heading),
                s = Cesium.Math.toRadians(this._cameraPosition.pitch),
                r = this._cameraPosition.range,
                a = this._cesiumViewer.scene.camera;
            a.flyTo({
                destination: Cesium.Cartesian3.fromDegrees(i, t, r),
                complete: function() {
                    a.lookAt(n, new Cesium.HeadingPitchRange(o, s, r)), a.lookAtTransform(Cesium.Matrix4.IDENTITY), setTimeout(function() {
                        "json" == this._urlSuffix && e._citydbKmlTilingManager.triggerWorker()
                    }, 3e3)
                }
            })
        } else "kml" != this._urlSuffix && "kmz" != this._urlSuffix || this._cesiumViewer.flyTo(this._citydbKmlDataSource)
    }, rt.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, rt.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, rt.prototype.on = function(e, t) {
        var i = -1;
        return "click" == e && (i = this._listener.on("CLICK", t)), i
    }, rt.prototype.off = function(e) {
        this._listener.off(e)
    }, rt.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? (this._listener.fire("CLICK", {
            position: i
        }), this._clickEvent.raiseEvent(t)) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    }, rt.prototype.getObjectById = function(e) {
        var t = this._cesiumViewer.scene.primitives;
        if ("collada" != this._layerType) return this.getEntitiesById(e);
        for (var i = 0; i < t.length; i++) {
            var n = t.get(i);
            if (n instanceof Cesium.Model && n.ready && n._id._name === e && n._id.layerId === this._id) return n
        }
    }, rt.prototype.getEntitiesById = function(e) {
        for (var t = this._cesiumViewer.scene.primitives, i = 0; i < t.length; i++) {
            var n = t.get(i);
            if (n instanceof Cesium.Primitive && Cesium.defined(n._instanceIds))
                for (var o = 0; o < n._instanceIds.length; o++) {
                    var s = n._instanceIds[o];
                    if (s.name === e && s.layerId == this._id) {
                        var r = s,
                            a = r._parent;
                        return Cesium.defined(a) ? a._children : [r]
                    }
                }
        }
        return null
    }, rt.prototype.setEntityColorByPrimitive = function(e, t) {
        for (var i = this._cesiumViewer.scene.primitives, n = 0; n < i.length; n++) {
            var o = i.get(n);
            if (o instanceof Cesium.Primitive && Cesium.defined(o._instanceIds))
                for (var s = 0; s < o._instanceIds.length; s++) {
                    var r = o._instanceIds[s].name;
                    if (r == e.name && e.layerId === this._id) {
                        var a = o.getGeometryInstanceAttributes(e);
                        if (Cesium.defined(a)) return void(a.color = Cesium.ColorGeometryInstanceAttribute.toValue(t))
                    }
                }
        }
    }, rt.prototype.highlightObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) {
                if (e.ready) {
                    var t = this._highlightedObjects[e._id._name];
                    if (t) {
                        var i = e._id;
                        if (!Cesium.defined(i.originalMaterial)) {
                            i.addProperty("originalMaterial");
                            var n = e._runtime.materialsByName;
                            for (var o in n) i.originalMaterial = n[o].getValue("emission").clone()
                        }
                        var n = e._runtime.materialsByName;
                        for (var o in n) n[o].setValue("emission", Cesium.Cartesian4.fromColor(t))
                    }
                }
            } else if (e instanceof Array)
            for (var s = 0; s < e.length; s++) {
                var r = e[s];
                Cesium.defined(r.originalMaterial) || r.addProperty("originalMaterial"), r.originalMaterial = this.getObjectMaterial(r), this.setObjectMaterial(r, this._highlightedObjects[r.name])
            }
    }, rt.prototype.unHighlightObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) {
                if (e.ready) {
                    var t = e._id,
                        i = e._runtime.materialsByName;
                    for (var n in i) i[n].setValue("emission", t.originalMaterial)
                }
            } else if (e instanceof Array && !this.isHiddenObject(e))
            for (var o = 0; o < e.length; o++) {
                var s = e[o],
                    r = s.originalMaterial;
                Cesium.defined(r) && (this.setEntityColorByPrimitive(s, r.color._value.clone()), this.setObjectMaterial(s, r))
            }
    }, rt.prototype.unHighlightAllObjects = function() {
        for (var e in this._highlightedObjects) delete this._highlightedObjects[e], this.unHighlightObject(this.getObjectById(e));
        this._highlightedObjects = this._highlightedObjects, null != this._citydbKmlHighlightingManager && this._citydbKmlHighlightingManager.triggerWorker()
    }, rt.prototype.isHighlighted = function(e) {
        var t = this.getObjectById(id);
        return this.isHighlightedObject(t)
    }, rt.prototype.isHighlightedObject = function(e) {
        if (e instanceof Cesium.Model) {
            var t = this._highlightedObjects[e._id._name];
            if (!Cesium.defined(t)) return !1;
            var i = e._runtime.materialsByName;
            for (var n in i)
                if (!i[n].getValue("emission").equals(Cesium.Cartesian4.fromColor(t))) return !1
        } else if (e instanceof Array)
            for (var o = 0; o < e.length; o++) {
                var s = e[o],
                    r = s.name,
                    a = this.getObjectMaterial(s);
                if (!a.color._value.equals(this._highlightedObjects[r])) return !1
            }
        return !0
    }, rt.prototype.isInHighlightedList = function(e) {
        return this._highlightedObjects.hasOwnProperty(e)
    }, rt.prototype.hasHighlightedObjects = function() {
        return Object.keys(this._highlightedObjects).length > 0
    }, rt.prototype.hideObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) console.log(e.ready, e.id.show), e.ready && e.id instanceof Cesium.Entity && (e.id.show = !1);
            else if (e instanceof Array)
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                i.show && (i.show = !1)
            }
    }, rt.prototype.hideAll = function() {
        if (this.hideObjects(), this._citydbKmlDataSource instanceof Cesium.KmlDataSource) this._citydbKmlDataSource.entities.show = !1;
        else {
            if (!this._active) return;
            var e = this._cesiumViewer.scene.primitives;
            console.log(e);
            for (var t = 0; t < e.length; t++) {
                var i = e.get(t);
                if (i instanceof Cesium.Primitive && Cesium.defined(i._instanceIds))
                    for (var n = 0; n < i._instanceIds.length; n++) {
                        var o = i._instanceIds[n];
                        if (o.layerId == this._id) {
                            var s = o,
                                r = s._parent;
                            Cesium.defined(r) ? (this.hideObject(r._children), this.hideObject([r])) : this.hideObject([s])
                        }
                    } else i instanceof Cesium.Model && i.id && i.id.layerId == this._id && this.hideObject(i)
            }
            this._active = !1
        }
    }, rt.prototype.showAll = function() {
        if (this.showObjects(), this._citydbKmlDataSource instanceof Cesium.KmlDataSource) this._citydbKmlDataSource.entities.show = !0;
        else {
            if (this._active) return;
            for (var e = this._cesiumViewer.scene.primitives, t = 0; t < e.length; t++) {
                var i = e.get(t);
                if (i instanceof Cesium.Primitive && Cesium.defined(i._instanceIds))
                    for (var n = 0; n < i._instanceIds.length; n++) {
                        var o = i._instanceIds[n];
                        if (o.layerId == this._id) {
                            var s = o,
                                r = s._parent;
                            Cesium.defined(r) ? (this.showObject(r._children), this.showObject([r])) : this.showObject([s])
                        }
                    } else i instanceof Cesium.Model && i.id && i.id.layerId == this._id && this.showObject(i)
            }
            this._active = !0
        }
    }, rt.prototype.showObject = function(e) {
        if (null != e)
            if (e instanceof Cesium.Model) e.ready && e.id instanceof Cesium.Entity && (e.id.show = !0);
            else if (e instanceof Array)
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                i.show = !0
            }
    }, rt.prototype.isHiddenObject = function(e) {
        if (e instanceof Cesium.Model) {
            if (e.ready) {
                var t = e._runtime.nodesByName;
                for (var i in t) {
                    var n = t[i],
                        o = Cesium.defined(n) ? n.publicNode : void 0;
                    return !o.show
                }
            }
        } else if (e instanceof Array)
            for (var s = 0; s < e.length; s++) {
                var r = e[s];
                return !r.show
            }
        return !0
    }, rt.prototype.showAllObjects = function() {
        for (var e = 0; e < this._hiddenObjects.length; e++) {
            var t = this._hiddenObjects[e];
            this.showObject(this.getObjectById(t))
        }
        this._hiddenObjects = this._hiddenObjects, this._hiddenObjects = []
    }, rt.prototype.isInHiddenList = function(e) {
        return this._hiddenObjects.indexOf(e) > -1
    }, rt.prototype.hasHiddenObjects = function() {
        return this._hiddenObjects.length > 0
    }, rt.prototype.setObjectMaterial = function(e, t) {
        Cesium.defined(e.polygon) ? e.polygon.material = t : Cesium.defined(e.polyline) ? e.polyline.material = t : Cesium.defined(e.point) && (e.point.material = t)
    }, rt.prototype.getObjectMaterial = function(e) {
        var t;
        return Cesium.defined(e.polygon) ? t = e.polygon : Cesium.defined(e.polyline) ? t = e.polyline : Cesium.defined(e.point) && (t = e.point), t.material
    }, Object.defineProperties(ct.prototype, {
        url: {
            get: function() {
                return this._url
            },
            set: function(e) {
                this._url = e
            }
        },
        name: {
            get: function() {
                return this._name
            },
            set: function(e) {
                this._name = e
            }
        },
        className: {
            get: function() {
                return this._className
            },
            set: function(e) {
                this._className = e
            }
        },
        id: {
            get: function() {
                return this._id
            },
            set: function(e) {
                this._id = e
            }
        }
    }), ct.prototype.addToCesium = function(e) {
        this._cesiumViewer = e instanceof r ? e._cesiumViewer : e;
        var t = Cesium.when.defer();
        return this._model = this._cesiumViewer.entities.add({
            position: Cesium.Cartesian3.fromDegrees(this._config.position[0], this._config.position[1], this._config.position[2])
        }), this._config.imageUrl && (this._model.billboard = new Cesium.BillboardGraphics({
            image: this._config.imageUrl,
            pixelOffset: new Cesium.Cartesian2(this._config.imageOffset[0], this._config.imageOffset[1]),
            eyeOffset: new Cesium.Cartesian3(this._config.imageEyeOffset[0], this._config.imageEyeOffset[1], this._config.imageEyeOffset[2]),
            scale: this._config.imageScale,
            width: this._config.imageWidth,
            height: this._config.imageHeight
        }), this._symbol.distanceDisplayCondition && (this._model.billboard.distanceDisplayCondition = new Cesium.DistanceDisplayCondition(this._symbol.distanceDisplayCondition[0], this._symbol.distanceDisplayCondition[1]))), this._config.text && (this._model.label = new Cesium.LabelGraphics({
            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
            text: this._config.text,
            eyeOffset: new Cesium.Cartesian3(this._config.imageEyeOffset[0], this._config.imageEyeOffset[1], this._config.imageEyeOffset[2]),
            font: this._config.textSize + "px " + this._config.textFont,
            pixelOffset: new Cesium.Cartesian2(this._config.textOffset[0], this._config.textOffset[1]),
            scale: this._config.textScale
        }), this._config.textFillColor && (this._model.label.fillColor = this._config.textFillColor instanceof Cesium.Color ? this._config.textFillColor : Cesium.Color.fromCssColorString(this._config.textFillColor)), this._config.textOutlineColor && (this._model.label.outlineColor = this._config.textOutlineColor instanceof Cesium.Color ? this._config.textOutlineColor : Cesium.Color.fromCssColorString(this._config.textOutlineColor)), this._config.textOutlineWidth && (this._model.label.textOutlineWidth = this._config.textOutlineWidth), this._symbol.distanceDisplayCondition && (this._model.label.distanceDisplayCondition = new Cesium.DistanceDisplayCondition(this._symbol.distanceDisplayCondition[0], this._symbol.distanceDisplayCondition[1])), this._symbol.showBackground && (this._model.label.showBackground = !0)), this._config.point && (this._model.point = new Cesium.PointGraphics, this._config.pointColor && (this._model.point.color = this._config.pointColor instanceof Cesium.Color ? this._config.pointColor : Cesium.Color.fromCssColorString(this._config.pointColor)), this._config.pointPixelSize && (this._model.point.pixelSize = this._config.pointPixelSize), this._config.pointOutlineColor && (this._model.point.outlineColor = this._config.pointOutlineColor instanceof Cesium.Color ? this._config.pointOutlineColor : Cesium.Color.fromCssColorString(this._config.pointOutlineColor)), this._config.pointOutlineWidth && (this._model.point.outlineWidth = this._config.pointOutlineWidth)), this._model.layerId = this._id, this._model ? t.resolve() : t.reject(), t.promise
    }, ct.prototype.zoomTo = function() {
        this._cesiumViewer.zoomTo(this._model)
    }, ct.prototype.removeFromCesium = function(e) {
        this.activate(!1)
    }, ct.prototype.activate = function(e) {
        this._model.show = e, this._active = e
    }, ct.prototype.hideObjects = function(e) {
        this._model.show = !1
    }, ct.prototype.hideObject = function(e) {
        this._model.show = !1
    }, ct.prototype.showAll = function() {
        this._model.show = !0
    }, ct.prototype.hideAll = function() {
        this._model.show = !1
    }, ct.prototype.showObjects = function(e) {
        this._model.show = !0
    }, ct.prototype.showObject = function(e) {
        this._model.show = !0
    }, ct.prototype.unHighlightAllObjects = function() {
        this.unHighlight()
    }, ct.prototype.isInHighlightedList = function(e) {
        return this._highlightedObjects.hasOwnProperty(e)
    }, ct.prototype.removeEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.removeEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.removeEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.removeEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.removeEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.removeEventListener(t, this)
    }, ct.prototype.registerEventHandler = function(e, t) {
        "CLICK" == e ? this._clickEvent.addEventListener(t, this) : "CTRLCLICK" == e ? this._ctrlClickEvent.addEventListener(t, this) : "MOUSEIN" == e ? this._mouseInEvent.addEventListener(t, this) : "MOUSEOUT" == e ? this._mouseOutEvent.addEventListener(t, this) : "VIEWCHANGED" == e && this._viewChangedEvent.addEventListener(t, this)
    }, ct.prototype.on = function(e, t) {
        var i = -1;
        return "click" == e && (i = this._listener.on("CLICK", t)), i
    }, ct.prototype.off = function(e) {
        this._listener.off(e)
    }, ct.prototype.triggerEvent = function(e, t, i) {
        "CLICK" == e ? (this._listener.fire("CLICK", {
            position: i
        }), this._clickEvent.raiseEvent(t, i)) : "CTRLCLICK" == e ? this._ctrlClickEvent.raiseEvent(t) : "MOUSEIN" == e ? this._mouseInEvent.raiseEvent(t) : "MOUSEOUT" == e ? this._mouseOutEvent.raiseEvent(t) : "VIEWCHANGED" == e && this._viewChangedEvent.raiseEvent(t)
    };
    var wn = {};
    wn.computeModelMatrix = function(e, t, i, n, o, s) {
        var r = Cesium.Cartesian3.fromRadians(e || 0, t || 0, i || 0),
            a = new Cesium.HeadingPitchRoll(n || 0, o || 0, s || 0);
        return Cesium.Transforms.headingPitchRollToFixedFrame(r, a)
    }, wn.toBIMPoint = function(e, t) {
        var i = this.Car3ToLocal(e, t);
        return Cesium.Cartesian3.multiplyByScalar(i, 2e3, i), i
    }, wn.toGISPoint = function(e, t) {
        var i = new Cesium.Cartesian3(parseFloat(t.x), parseFloat(t.y), parseFloat(t.z));
        return Cesium.Cartesian3.multiplyByScalar(i, 5e-4, i), this.LocalToCar3(e, i)
    }, wn.LocalToCar3 = function(e, t) {
        return Cesium.Matrix4.multiplyByPoint(e, t, new Cesium.Cartesian3)
    }, wn.Car3ToLocal = function(e, t) {
        var i = Cesium.Matrix4.inverse(e, new Cesium.Matrix4);
        return Cesium.Matrix4.multiplyByPoint(i, t, new Cesium.Cartesian3)
    }, wn.Car3ToGeo = function(e) {
        var t = Cesium.Cartographic.fromCartesian(e);
        return {
            lon: parseFloat(Cesium.Math.toDegrees(t.longitude).toFixed(6)),
            lat: parseFloat(Cesium.Math.toDegrees(t.latitude).toFixed(6)),
            height: parseFloat(t.height.toFixed(6))
        }
    }, ht.prototype.moveShowFun = function(e) {
        e.name && $("#move_name").val(e.name), e.lon ? $("#lon_input_text").val(e.lon) : $("#lon_input_text").val(0), e.lat ? $("#lat_input_text").val(e.lat) : $("#lat_input_text").val(0), e.height ? $("#height_input_text").val(e.height) : $("#height_input_text").val(0), e.heading ? $("#head_input_text").val(e.heading) : $("#head_input_text").val(0)
    }, ht.prototype.clearAllPram = function() {
        $("#move_name").val(0), $("#lon_input_text").val(0), $("#lat_input_text").val(0), $("#height_input_text").val(0), $("#head_input_text").val(0)
    }, ht.prototype.getNowLocation = function() {
        var e = {};
        return e.layername = $("#move_name").val(), e.lon = 1 * $("#lon_input_text").val(), e.lat = 1 * $("#lat_input_text").val(), e.height = 1 * $("#height_input_text").val(), e.heading = 1 * $("#head_input_text").val(), e
    }, ht.prototype.clearxyzScalar = function() {
        this.viewer.scene.primitives.remove(this.polylines), this.polylines = this.polylines && this.polylines.destroy(), this.viewer.scene.primitives.remove(this.axisLable), this.axisLable = this.axisLable && this.axisLable.destroy(), this.show = !1
    }, ht.prototype.showAxis = function(e) {
        this.show && this.clearxyzScalar();
        var t = new Cesium.Cartesian3(0, 0, 0),
            i = new Cesium.Cartesian3(0 + e.radius, 0, 0),
            n = new Cesium.Cartesian3(0, 0 + e.radius, 0),
            o = new Cesium.Cartesian3(0, 0, 0 + e.radius),
            s = new Cesium.PolylineCollection;
        s.add({
            positions: [t, i],
            id: "movemodel_x",
            width: 20,
            followSurface: !0
        }), s.add({
            positions: [t, n],
            id: "movemodel_y",
            width: 20,
            followSurface: !0
        }), s.add({
            positions: [t, o],
            id: "movemodel_z",
            width: 20,
            followSurface: !0
        });
        var r = new Cesium.LabelCollection;
        r.add({
            position: i,
            text: "X",
            font: "20px sans-serif",
            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
            outlineWidth: 0,
            verticalOrigin: Cesium.VerticalOrigin.BUTTON,
            fillColor: Cesium.Color.RED,
            pixelOffset: new Cesium.Cartesian2(-10, -10)
        }), r.add({
            position: n,
            text: "Y",
            font: "20px sans-serif",
            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
            outlineWidth: 0,
            verticalOrigin: Cesium.VerticalOrigin.BUTTON,
            fillColor: Cesium.Color.GREEN,
            pixelOffset: new Cesium.Cartesian2(-10, -10)
        }), r.add({
            position: o,
            text: "Z",
            font: "20px sans-serif",
            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
            outlineWidth: 0,
            verticalOrigin: Cesium.VerticalOrigin.BUTTON,
            fillColor: Cesium.Color.BLUE,
            pixelOffset: new Cesium.Cartesian2(-5, -10)
        });
        for (var a = s.length, l = 0; l < a; ++l) {
            var c = s.get(l);
            "movemodel_x" == c.id ? (c.material = new Cesium.Material({
                fabric: {
                    type: "PolylineArrow",
                    uniforms: {
                        color: Cesium.Color.RED
                    }
                }
            }), c.originalColorValue = Cesium.Color.RED) : "movemodel_y" == c.id ? (c.material = new Cesium.Material({
                fabric: {
                    type: "PolylineArrow",
                    uniforms: {
                        color: Cesium.Color.GREEN
                    }
                }
            }), c.originalColorValue = Cesium.Color.GREEN) : "movemodel_z" == c.id && (c.material = new Cesium.Material({
                fabric: {
                    type: "PolylineArrow",
                    uniforms: {
                        color: Cesium.Color.BLUE
                    }
                }
            }), c.originalColorValue = Cesium.Color.BLUE)
        }
        this.polylines = s;
        var h = e.lon1 ? e.lon1 : e.lon,
            u = e.lat1 ? e.lat1 : e.lat,
            d = e.height1 ? e.height1 : e.height,
            p = e.heading ? e.heading : 0;
        "3dtile" == this.layertyle || "3dtile_sphere" == this.layertyle ? this.polylines.modelMatrix = this.getTileMatrix4(h, u, d, p) : "model" == this.layertyle && (this.polylines.modelMatrix = Cesium.Transforms.headingPitchRollToFixedFrame(Cesium.Cartesian3.fromDegrees(h, u, d), new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(p), 0, 0))), r.modelMatrix = this.polylines.modelMatrix, this.oldMatx = this.polylines.modelMatrix.clone(), this.axisLable = r, this.viewer.scene.primitives.add(this.polylines), this.viewer.scene.primitives.add(this.axisLable), this.show = !0
    }, ht.prototype.moveAxisFun = function(e) {
        this.polylines.modelMatrix = e, this.axisLable.modelMatrix = e
    }, ht.prototype.init = function(e, t, i, n) {
        this.layertyle == i && t.url == this.moveobj.url || (this.moveobj = t, this.layertyle = i, "3dtile_sphere" == this.layertyle ? $("#head_input_text").attr("disabled", !0) : $("#head_input_text").attr("disabled", !1), this.oldpos = e, this.moveobj.axispos = e, this.idshowhtml && n && (e.name = n, this.moveShowFun(e)), this.activateMouseClickEvents(!0), this.activateMouseMoveEvents(!0), this.mousemove = !1), this.showAxis(e)
    }, ht.prototype.initHtml = function(e) {
        if (this.idshowhtml)
            if ($("#movemodel_div").length > 0) {
                this.moveModelWindow.windowShow();
                var t = this;
                $("#move_to_location").on("click", function() {
                    t.MoveModelLocation()
                }), $("#move_return_location").on("click", function() {
                    t.MoveModelReturnLocation()
                }), $("#move_follow_location").on("click", function() {
                    t.follow = !0
                })
            } else {
                var i = '<div id="movemodel_div" style="background:rgba(42, 42, 42, 0.5);width:190px;"></div>';
                if (this.infoBox) {
                    var n = {
                        title: "模型移动",
                        width: 220,
                        height: 320,
                        closeOnEsc: !1,
                        closeButton: !0,
                        content: i
                    };
                    this.moveModelWindow = this.infoBox.window(n), this.moveModelWindow.setPosition({
                        left: "",
                        right: 50,
                        top: 100
                    })
                } else $(document.body).append(i);
                this.htmlAddPram()
            }
        this.viewer = e, this._eventHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)
    }, ht.prototype.htmlAddPram = function() {
        $("#movemodel_div");
        $("#movemodel_div").append('<table style="margin-left:10px;"><tr style="height:34px;"><td><lable style="color:#fff">图层:</lable></td><td><select id="move_name" style="width:135px;height:30px;border-radius:5px;border:1px solid #939392;"></select></td></tr><tr style="height:34px;"><td><lable style="color:#fff">经度:</lable></td><td id="lon_input"></td></tr><tr style="height:34px;"><td><lable style="color:#fff">纬度:</lable></td><td id="lat_input"></td></tr><tr style="height:34px;"><td><lable style="color:#fff">高度:</lable></td><td id="height_input"></td></tr><tr style="height:34px;" id="heading_tr"><td><lable style="color:#fff">方向:</lable></td><td id="heading_input"></td></tr></table>');
        var e = '<div class="input-group spinner" data-trigger="spinner" style="width:135px;height:30px;"><input id= type="text" class="form-control text-center" style="height:30px;" value="0.000" data-step="0.1" data-precision="5"/><div class="input-group-addon" style="padding: 0px 8px;"><a href="javascript:;" class="spin-up" data-spin="up"><i class="fa fa-caret-up"></i></a><a href="javascript:;" class="spin-down" data-spin="down"><i class="fa fa-caret-down"></i></a></div></div>',
            t = e,
            i = e,
            n = e,
            o = e;
        $("#lon_input").append(t.replace(/id=/g, 'id="lon_input_text"')), $("#lat_input").append(i.replace(/id=/g, 'id="lat_input_text"')), $("#height_input").append(n.replace(/id=/g, 'id="height_input_text"')), $("#heading_input").append(o.replace(/id=/g, 'id="head_input_text"'));
        $("#movemodel_div").append('<div style="width:190px;text-align:center;"><button type="button" id="move_to_location" class="btn btn-primary" style="margin:5px 2px;">定位</button><button type="button" id="move_return_location" class="btn btn-primary" style="margin:5px 2px;">还原</button><button type="button" id="move_follow_location" class="btn btn-primary" style="margin:5px 2px;">放置</button></div>');
        $("#movemodel_div").append('<label style="color:#fff;font-size:10px;margin-left:10px;">快捷按钮【T】-俯视当前坐标轴</label>');
        var s = this;
        $("#move_to_location").on("click", function() {
            s.MoveModelLocation()
        }), $("#move_return_location").on("click", function() {
            s.MoveModelReturnLocation()
        }), $("#move_follow_location").on("click", function() {
            s.follow = !0
        }), $('[data-trigger="spinner"]').spinner()
    }, ht.prototype.activateMouseClickEvents = function(e) {
        if (e) {
            var t = this;
            this._eventHandler.setInputAction(function(e) {
                var i = t.viewer.scene.pick(e.position);
                Cesium.defined(i) && i.id && ("movemodel_x" == i.id ? (t.movetype = "x", i.primitive.material = new Cesium.Material({
                    fabric: {
                        type: "PolylineArrow",
                        uniforms: {
                            color: t._highlightColor
                        }
                    }
                }), i.primitive.width = 40, t._highlightObject = i, t.mousemove = !0, t.follow && (t.follow = !1)) : "movemodel_y" == i.id ? (t.movetype = "y", t.mousemove = !0, t.follow && (t.follow = !1), i.primitive.material = new Cesium.Material({
                    fabric: {
                        type: "PolylineArrow",
                        uniforms: {
                            color: t._highlightColor
                        }
                    }
                }), i.primitive.width = 40, t._highlightObject = i) : "movemodel_z" == i.id && (t.movetype = "z", t.mousemove = !0, t.follow && (t.follow = !1), i.primitive.material = new Cesium.Material({
                    fabric: {
                        type: "PolylineArrow",
                        uniforms: {
                            color: t._highlightColor
                        }
                    }
                }), i.primitive.width = 40, t._highlightObject = i))
            }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this._eventHandler.setInputAction(function() {
                t.mousemove = !1, t.cameraControl(!0), t.follow && (t.follow = !1), t._highlightObject && (t._highlightObject.primitive.material = new Cesium.Material({
                    fabric: {
                        type: "PolylineArrow",
                        uniforms: {
                            color: t._highlightObject.primitive.originalColorValue
                        }
                    }
                }), t._highlightObject.primitive.width = 20, t._highlightObject = null)
            }, Cesium.ScreenSpaceEventType.LEFT_UP)
        } else this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOWN), this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_UP)
    }, ht.prototype.activateMouseMoveEvents = function(e) {
        if (e) {
            var t = this;
            this._eventHandler.setInputAction(function(e) {
                if (t.mousemove) {
                    var i = t.viewer.scene.pickPosition(e.startPosition),
                        n = t.viewer.scene.pickPosition(e.endPosition);
                    if (!n) return t.mousemove = !1, void t.cameraControl(!0);
                    0 == e.endPosition.x && t.viewer.scene.camera.moveLeft(30), 0 == e.endPosition.y && t.viewer.scene.camera.moveUp(30), t.cameraControl(!1);
                    var o, s;
                    if ("3dtile" == t.layertyle) var s = t.moveobj._root.transform;
                    else if ("model" == t.layertyle) var s = t.moveobj._model.modelMatrix;
                    else if ("3dtile_sphere" == t.layertyle) var s = t.moveobj.modelMatrix;
                    var r, a, l;
                    switch (t.movetype) {
                        case "z":
                            r = "x", a = "y", l = Cesium.Cartesian3.UNIT_Y;
                            break;
                        case "x":
                            r = "y", a = "z", l = Cesium.Cartesian3.UNIT_Z;
                            break;
                        case "y":
                            r = "x", a = "z", l = Cesium.Cartesian3.UNIT_Z
                    }
                    var c = t.axisMove(t.polylines.modelMatrix, l, r, a, i, n);
                    if (!c) return t.mousemove = !1, void t.cameraControl(!0);
                    if ("3dtile_sphere" == t.layertyle) {
                        var h = Cesium.Matrix4.subtract(c, t.oldMatx, new Cesium.Matrix4),
                            u = Cesium.Matrix4.getTranslation(h, new Cesium.Cartesian3);
                        s = Cesium.Matrix4.fromTranslation(u)
                    } else s = t.axisMove(s, l, r, a, i, n);
                    if (!s) return t.mousemove = !1, void t.cameraControl(!0);
                    "3dtile" == t.layertyle ? (t.moveobj._root.transform = s, o = t.getTileTransform(s), o.radius = t.moveobj.boundingSphere.radius) : "model" == t.layertyle ? (t.moveobj._model.modelMatrix = s, o = t.modelToparams(t.moveobj)) : "3dtile_sphere" == t.layertyle && (t.moveobj.modelMatrix = s, o = t.tileToparams(t.moveobj), o.radius = t.moveobj.boundingSphere.radius), t.polylines.modelMatrix = c, t.axisLable.modelMatrix = c, t.idshowhtml && (o.name = "", t.moveShowFun(o))
                } else if (t.follow) {
                    var d = t.viewer.camera.pickEllipsoid(e.endPosition);
                    if (d) {
                        var p = Cesium.Cartographic.fromCartesian(d, Cesium.Ellipsoid.WGS84, new Cesium.Cartographic),
                            o = {};
                        "3dtile" == t.layertyle || "3dtile_sphere" == t.layertyle ? o = t.tileToparams(t.moveobj) : "model" == t.layertyle && (o = t.modelToparams(t.moveobj)), o.lon = Cesium.Math.toDegrees(p.longitude), o.lat = Cesium.Math.toDegrees(p.latitude), o.height = t.oldpos.height;
                        var m = t.getTileMatrix4(o.lon, o.lat, o.height, o.heading);
                        if ("3dtile" == t.layertyle) {
                            var f = 0;
                            o.heading && (f = o.heading), t.movePosTo3dtile(t.moveobj, o.lon, o.lat, o.height, f)
                        } else if ("model" == t.layertyle) t.movePosToModel(t.moveobj, o.lon, o.lat, o.height, o.heading);
                        else if ("3dtile_sphere" == t.layertyle) {
                            var m = t.getTileMatrix4(o.lon, o.lat, o.height, o.heading),
                                h = Cesium.Matrix4.subtract(m, t.oldMatx, new Cesium.Matrix4),
                                u = Cesium.Matrix4.getTranslation(h, new Cesium.Cartesian3),
                                s = Cesium.Matrix4.fromTranslation(u);
                            t.moveobj.modelMatrix = s
                        }
                        t.polylines.modelMatrix = m, t.axisLable.modelMatrix = m, t.idshowhtml && (o.name = "", t.moveShowFun(o))
                    }
                }
            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)
        } else this._eventHandler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE)
    }, ht.prototype.axisMove = function(e, t, i, n, o, s) {
        var r = this.axisTransForm(e, t, o, s);
        if (r.end && r.start) {
            var a = Cesium.Cartesian3.subtract(r.end, r.start, new Cesium.Cartesian3);
            a[i] = 0, a[n] = 0;
            var l = Cesium.Matrix4.multiplyByPoint(e, a, new Cesium.Cartesian3);
            return e[12] = l.x, e[13] = l.y, e[14] = l.z, e
        }
        return !1
    }, ht.prototype.axisTransForm = function(e, t, i, n) {
        var o = Cesium.Matrix4.inverseTransformation(e, new Cesium.Matrix4),
            s = this.viewer.camera.position,
            r = Cesium.Matrix4.multiplyByPoint(o, s, new Cesium.Cartesian3),
            a = Cesium.Matrix4.multiplyByPoint(o, i, new Cesium.Cartesian3),
            l = Cesium.Matrix4.multiplyByPoint(o, n, new Cesium.Cartesian3),
            c = Cesium.Cartesian3.normalize(Cesium.Cartesian3.subtract(a, r, new Cesium.Cartesian3), new Cesium.Cartesian3),
            h = Cesium.Cartesian3.normalize(Cesium.Cartesian3.subtract(l, r, new Cesium.Cartesian3), new Cesium.Cartesian3),
            u = Cesium.Plane.fromPointNormal(Cesium.Cartesian3.ZERO, t),
            d = new Cesium.Ray(r, c),
            p = new Cesium.Ray(r, h);
        return {
            start: Cesium.IntersectionTests.rayPlane(d, u),
            end: Cesium.IntersectionTests.rayPlane(p, u)
        }
    }, ht.prototype.movePosToModel = function(e, t, i, n, o) {
        var s = Cesium.Transforms.headingPitchRollToFixedFrame(Cesium.Cartesian3.fromDegrees(t, i, n), new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(o), 0, 0));
        e._model.modelMatrix = s
    }, ht.prototype.movePosTo3dtile = function(e, t, i, n, o) {
        var s = this.getTileMatrix4(t, i, n, o);
        e._root.transform = s
    }, ht.prototype.getTileMatrix4 = function(e, t, i, n) {
        var o = Cesium.Cartesian3.fromDegrees(e, t, i),
            s = Cesium.Transforms.eastNorthUpToFixedFrame(o),
            r = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(n)));
        return Cesium.Matrix4.multiply(s, r, s), s
    }, ht.prototype.transformCartesian3 = function(e) {
        var t = {},
            i = Cesium.Cartographic.fromCartesian(e, Cesium.Ellipsoid.WGS84, new Cesium.Cartographic);
        return t.lat = Cesium.Math.toDegrees(i.latitude), t.lon = Cesium.Math.toDegrees(i.longitude), t.height = i.height, t
    }, ht.prototype.modelToparams = function(e) {
        var t = {};
        if (e._model.modelMatrix) {
            var i = Cesium.Matrix4.getTranslation(e._model.modelMatrix, new Cesium.Cartesian3),
                n = this.transformCartesian3(i);
            t.lon = n.lon, t.lat = n.lat, t.height = n.height;
            var o = Cesium.Transforms.eastNorthUpToFixedFrame(i, Cesium.Ellipsoid.WGS84, new Cesium.Matrix4),
                s = e._model.modelMatrix,
                r = Cesium.Matrix4.multiply(Cesium.Matrix4.inverse(o, new Cesium.Matrix4), s, new Cesium.Matrix4),
                a = Cesium.Matrix4.getRotation(r, new Cesium.Matrix3),
                l = Cesium.Quaternion.fromRotationMatrix(a),
                c = Cesium.HeadingPitchRoll.fromQuaternion(l),
                h = Cesium.Math.toDegrees(c.heading);
            t.heading = h.toFixed(3)
        }
        if (e._model && e._model.boundingSphere) {
            var u = e._model.boundingSphere.radius;
            t.radius = 2 * u
        }
        return t
    }, ht.prototype.tileToparams = function(e) {
        var t = {};
        if (e && e.boundingSphere && e.boundingSphere.center) {
            var i = e.boundingSphere.center,
                n = this.transformCartesian3(i);
            t.lon = n.lon, t.lat = n.lat, t.height = n.height
        }
        if (e && e.boundingSphere && e.boundingSphere.radius) {
            var o = e.boundingSphere.radius;
            t.radius = o
        }
        if (e._root && e._root.transform) {
            var s = e._root.transform,
                r = Cesium.Matrix4.getTranslation(s, new Cesium.Cartesian3);
            if (0 == r.x && 0 == r.y && 0 == r.z) t.heading = 0;
            else {
                var a = Cesium.Transforms.eastNorthUpToFixedFrame(r),
                    l = Cesium.Matrix4.multiply(Cesium.Matrix4.inverse(a, new Cesium.Matrix4), s, new Cesium.Matrix4),
                    c = Cesium.Matrix4.getRotation(l, new Cesium.Matrix3);
                c = Cesium.Matrix3.transpose(c, c);
                var h = Cesium.Quaternion.fromRotationMatrix(c),
                    u = Cesium.HeadingPitchRoll.fromQuaternion(h),
                    d = Cesium.Math.toDegrees(u.heading);
                t.heading = d.toFixed(3)
            }
        }
        return t
    }, ht.prototype.getTileTransform = function(e) {
        var t = e,
            i = {},
            n = Cesium.Matrix4.getTranslation(t, new Cesium.Cartesian3);
        if (0 == n.x && 0 == n.y && 0 == n.z) i.heading = 0;
        else {
            var o = this.transformCartesian3(n);
            i.lon = o.lon, i.lat = o.lat, i.height = o.height;
            var s = Cesium.Transforms.eastNorthUpToFixedFrame(n),
                r = Cesium.Matrix4.multiply(Cesium.Matrix4.inverse(s, new Cesium.Matrix4), t, new Cesium.Matrix4),
                a = Cesium.Matrix4.getRotation(r, new Cesium.Matrix3);
            a = Cesium.Matrix3.transpose(a, a);
            var l = Cesium.Quaternion.fromRotationMatrix(a),
                c = Cesium.HeadingPitchRoll.fromQuaternion(l),
                h = Cesium.Math.toDegrees(c.heading);
            i.heading = h.toFixed(3)
        }
        return i
    }, ht.prototype.getTileTransform1 = function(e) {
        var t = e,
            i = {},
            n = Cesium.Matrix4.getTranslation(t, new Cesium.Cartesian3);
        if (0 == n.x && 0 == n.y && 0 == n.z) i.heading = 0;
        else {
            var o = this.transformCartesian3(n);
            i.lon = o.lon, i.lat = o.lat, i.height = o.height;
            var s = Cesium.Transforms.eastNorthUpToFixedFrame(n),
                r = Cesium.Matrix4.multiply(Cesium.Matrix4.inverse(s, new Cesium.Matrix4), t, new Cesium.Matrix4),
                a = Cesium.Matrix4.getRotation(r, new Cesium.Matrix3),
                l = Cesium.Quaternion.fromRotationMatrix(a),
                c = Cesium.HeadingPitchRoll.fromQuaternion(l),
                h = Cesium.Math.toDegrees(c.heading);
            i.heading = h.toFixed(3)
        }
        return i
    }, ht.prototype.cameraControl = function(e) {
        this.viewer.scene.screenSpaceCameraController.enableRotate = e, this.viewer.scene.screenSpaceCameraController.enableTranslate = e, this.viewer.scene.screenSpaceCameraController.enableZoom = e, this.viewer.scene.screenSpaceCameraController.enableTilt = e, this.viewer.scene.screenSpaceCameraController.enableLook = e
    }, ht.prototype.MoveModelLocation = function() {
        if (!this.moveobj) return void alert("请先选择移动图层");
        var e = this.getNowLocation();
        if (e.lon && e.lat) {
            var t = this.getTileMatrix4(e.lon, e.lat, e.height, e.heading);
            if ("3dtile" == this.layertyle) this.movePosTo3dtile(this.moveobj, e.lon, e.lat, e.height, e.heading), e.radius = 2 * this.moveobj.boundingSphere.radius;
            else if ("model" == this.layertyle) {
                this.movePosToModel(this.moveobj, e.lon, e.lat, e.height, e.heading);
                var i = this.moveobj._model.boundingSphere.radius;
                e.radius = 2 * i
            } else if ("3dtile_sphere" == this.layertyle) {
                var n = Cesium.Matrix4.subtract(t, this.oldMatx, new Cesium.Matrix4),
                    o = Cesium.Matrix4.getTranslation(n, new Cesium.Cartesian3),
                    s = Cesium.Matrix4.fromTranslation(o);
                this.moveobj.modelMatrix = s
            }
            this.polylines.modelMatrix = t, this.axisLable.modelMatrix = t;
            var r = Cesium.Cartesian3.fromDegrees(e.lon, e.lat, e.height),
                a = new Cesium.BoundingSphere(r, this.oldpos.radius);
            this.viewer.scene.camera.flyToBoundingSphere(a)
        }
    }, ht.prototype.MoveModelReturnLocation = function() {
        if (!this.moveobj) return void alert("请先选择还原图层");
        var e = this.oldpos;
        "3dtile" == this.layertyle ? this.movePosTo3dtile(this.moveobj, e.lon, e.lat, e.height, e.heading) : "model" == this.layertyle ? this.movePosToModel(this.moveobj, e.lon, e.lat, e.height, e.heading) : "3dtile_sphere" == this.layertyle && (this.moveobj.modelMatrix = Cesium.Matrix4.IDENTITY), this.idshowhtml && (e.name = 0, this.moveShowFun(e)), this.showAxis(e);
        var t = Cesium.Cartesian3.fromDegrees(this.oldpos.lon, this.oldpos.lat, this.oldpos.height),
            i = new Cesium.BoundingSphere(t, this.oldpos.radius);
        this.viewer.scene.camera.flyToBoundingSphere(i)
    }, ht.prototype.MoveModelClearAll = function() {
        this.clearxyzScalar(), this.idshowhtml = !1, this.oldpos = null, this.activateMouseClickEvents(!1), this.activateMouseMoveEvents(!1), this.cameraControl(!0), this._eventHandler = null, this.viewer = null, this.moveobj = null, this.movetype = "", this.layertyle = "", this.mousemove = !1, this._highlightObject = null, this.polylines = null, this.axisLable = null, $("#move_to_location").off("click"), $("#move_return_location").off("click"), $("#move_follow_location").off("click")
    }, ht.prototype.MoveModelClose = function() {
        this.MoveModelClearAll(), this.moveModelWindow.windowHide()
    }, ht.prototype.setDownCamera = function() {
        var e = this.viewer.camera,
            t = e.positionWC;
        if (this.polylines && this.polylines.modelMatrix) {
            var i = Cesium.Matrix4.getTranslation(this.polylines.modelMatrix, new Cesium.Cartesian3),
                n = Cesium.Cartographic.fromCartesian(i, Cesium.Ellipsoid.WGS84, new Cesium.Cartographic),
                o = Cesium.Cartographic.fromCartesian(e.positionWC, Cesium.Ellipsoid.WGS84, new Cesium.Cartographic),
                s = Cesium.Math.toDegrees(n.latitude),
                r = Cesium.Math.toDegrees(n.longitude);
            t = Cesium.Cartesian3.fromDegrees(r, s, o.height)
        }
        var a = e.heading,
            l = (e.pitch, e.roll);
        e.flyTo({
            destination: t,
            orientation: {
                heading: a,
                pitch: Cesium.Math.toRadians(-90),
                roll: l
            }
        })
    }, ut.prototype.initHtml = function(e, t) {
        var i = this;
        if ($("#clipping_toolbar").length > 0) this.clippingWindow.windowShow();
        else {
            var n = {
                title: "裁切面板",
                width: 300,
                height: 320,
                closeOnEsc: !1,
                closeButton: !0,
                content: '<div id="clipping_toolbar" style="width:250px;text-align:center;"><div id="clipping_div_btn" style="width:250px;text-align:center;"><button id="clipping_hole_btn" class="btn btn-primary" style="margin:5px;">挖洞</button><button id="clipping_plane_btn" class="btn btn-primary" style="margin:5px;">断面</button><button id="clipping_clear_btn" class="btn btn-primary" style="margin:5px;">清除</button></div><div id="clipping_layertable" ><table id="clipping_layer_Table" style="color: #fff;margin-bottom:0px;"></table></div></div>'
            };
            this.clippingWindow = t.window(n), this.clippingWindow.setPosition({
                left: "",
                right: 50,
                top: 100
            }), $("#clipping_hole_btn").on("click", function() {
                if (i.handle) {
                    i.handle.destroy(), i.handle = null;
                    if (!confirm("将清除之前的分析结果是否继续!")) return
                }
                i.drawClippingType(0)
            }), $("#clipping_plane_btn").on("click", function() {
                if (i.handle) {
                    i.handle.destroy(), i.handle = null;
                    if (!confirm("将清除之前的分析结果是否继续!")) return
                }
                i.drawClippingType(1)
            }), $("#clipping_clear_btn").on("click", function() {
                i.handle && (i.handle.destroy(), i.handle = null), i.clearClipping()
            }), $("#clipping_layer_Table").bootstrapTable({
                search: !1,
                pagination: !1,
                cache: !1,
                columns: [{
                    field: "id",
                    title: "Item ID",
                    visible: !1
                }, {
                    field: "name",
                    title: "图层",
                    halign: "center",
                    align: "center",
                    width: 150
                }, {
                    field: "hole",
                    title: "挖洞",
                    halign: "center",
                    align: "center",
                    width: 50,
                    formatter: function(e, t, i) {
                        if (1 == e) return "<input type='checkbox' class='clipping_hole_checkbox' id='checkbox" + t.id + "'/>"
                    }
                }, {
                    field: "plane",
                    title: "断面",
                    halign: "center",
                    align: "center",
                    width: 50,
                    formatter: function(e, t, i) {
                        if (1 == e) return "<input type='checkbox' class='clipping_plane_checkbox' id='checkbox" + t.id + "'/>"
                    }
                }],
                data: e
            }), $(".fixed-table-loading").hide(), $(".clipping_plane_checkbox").on("click", function() {
                i.ClippingaddtoLayer(this, this.id, "plane")
            }), $(".clipping_hole_checkbox").on("click", function() {
                i.ClippingaddtoLayer(this, this.id, "hole")
            })
        }
    }, ut.prototype.ClippingaddtoLayer = function(e, t, i) {
        var n = t.substr(8),
            o = $(e).prop("checked");
        if ("allselect" == n) return void("plane" == i ? (this.setLayerClipping("clipplane", o), $(".clipping_plane_checkbox").prop("checked", o)) : "hole" == i && (this.setLayerClipping("cliphole", o), $(".clipping_hole_checkbox").prop("checked", o)));
        var s = this.getLayerbyId(n);
        s && (o ? "plane" == i ? s.clipplane = !0 : "hole" == i && (s.cliphole = !0) : "plane" == i ? s.clipplane = !1 : "hole" == i && (s.cliphole = !1))
    }, ut.prototype.getLayerbyId = function(e) {
        for (var t = 0; t < this.PhotoClipLayer.length; t++)
            if (e == this.PhotoClipLayer[t].id) return this.PhotoClipLayer[t];
        for (var t = 0; t < this.TileClipLayer.length; t++)
            if (e == this.TileClipLayer[t].id) return this.TileClipLayer[t];
        for (var t = 0; t < this.ModelClipLayer.length; t++)
            if (e == this.ModelClipLayer[t].id) return this.ModelClipLayer[t];
        return null
    }, ut.prototype.setLayerClipping = function(e, t) {
        for (var i = 0; i < this.PhotoClipLayer.length; i++) this.PhotoClipLayer[i][e] = t;
        for (var i = 0; i < this.TileClipLayer.length; i++) this.TileClipLayer[i][e] = t;
        for (var i = 0; i < this.ModelClipLayer.length; i++) this.ModelClipLayer[i][e] = t
    }, ut.prototype.initSchemeClipping = function(e, t) {
        var i = {};
        t && e && (i.layer = e, i.clipping = t, i.clippingCollection = new Cesium.ClippingPlaneCollection({
            planes: t,
            edgeWidth: 1,
            enabled: !0,
            edgeColor: Cesium.Color.WHITE
        }), i.init = !0, i.layer._tileset.clippingPlanes = i.clippingCollection, this.praScheme[i.layer.id] = i)
    }, ut.prototype.showSchemeClipping = function() {
        if (this.isSchemeShow) {
            this.isSchemeShow = !1;
            for (var e in this.praScheme) this.praScheme[e].init && (this.praScheme[e].layer._tileset.clippingPlanes.enabled = !1)
        } else {
            this.isSchemeShow = !0;
            for (var e in this.praScheme) this.praScheme[e].init ? this.praScheme[e].layer._tileset.clippingPlanes.enabled = !0 : (this.praScheme[e].layer._tileset.clippingPlanes && this.praScheme[e].layer._tileset.clippingPlanes.removeAll(), this.praScheme[e].init = !0, this.praScheme[e].layer._tileset.clippingPlanes = this.praScheme[e].clippingCollection)
        }
    }, ut.prototype.clearClipping = function() {
        if (this.getOSAndBrowser().indexOf("IE") > 0) this.clearTypeClipping(1);
        else {
            for (var e = this.ModelClipLayer.length, t = 0; t < e; t++) this.ModelClipLayer[t]._model.clippingPlanes && this.ModelClipLayer[t]._model.clippingPlanes.removeAll();
            for (var i = this.TileClipLayer.length, t = 0; t < i; t++) this.TileClipLayer[t]._tileset.clippingPlanes && (this.TileClipLayer[t]._tileset.clippingPlanes.enabled = !1);
            for (var n = this.PhotoClipLayer.length, t = 0; t < n; t++) this.PhotoClipLayer[t]._tileset.clippingPlanes && (this.PhotoClipLayer[t]._tileset.clippingPlanes.enabled = !1);
            this.viewer.scene.globe.clippingPlanes && this.viewer.scene.globe.clippingPlanes.removeAll()
        }
    }, ut.prototype.clearTypeClipping = function(e) {
        if (e) {
            for (var t = this.ModelClipLayer.length, i = 0; i < t; i++) this.ModelClipLayer[i]._model.clippingPlanes && (this.ModelClipLayer[i]._model.clippingPlanes.enabled = !1);
            for (var n = this.TileClipLayer.length, i = 0; i < n; i++) this.TileClipLayer[i]._tileset.clippingPlanes && (this.TileClipLayer[i]._tileset.clippingPlanes.enabled = !1)
        }
        for (var o = this.PhotoClipLayer.length, i = 0; i < o; i++) this.PhotoClipLayer[i]._tileset.clippingPlanes && (this.PhotoClipLayer[i]._tileset.clippingPlanes.enabled = !1);
        this.viewer.scene.globe.clippingPlanes && (this.viewer.scene.globe.clippingPlanes.enabled = !1)
    }, ut.prototype.drawClippingType = function(e) {
        var t = this,
            i = new Cesium.ScreenSpaceEventHandler(t.viewer.scene.canvas);
        t.handle = i;
        var n = [],
            o = void 0,
            s = 0;
        try {
            if (e) var r = function() {
                function e(e) {
                    this.options = {
                        id: "polyline1234567",
                        polyline: {
                            show: !0,
                            positions: [],
                            material: Cesium.Color.RED.withAlpha(.5),
                            width: 3
                        }
                    }, this.positions = e, this._init()
                }
                return e.prototype._init = function() {
                    var e = this,
                        i = function() {
                            return e.positions
                        };
                    this.options.polyline.positions = new Cesium.CallbackProperty(i, !1), t.viewer.entities.add(this.options)
                }, e
            }();
            else var a = function() {
                function e(e) {
                    this.options = {
                        id: "polygon1234567",
                        polygon: {
                            show: !0,
                            hierarchy: new Cesium.PolygonHierarchy(e),
                            material: Cesium.Color.RED.withAlpha(.3)
                        }
                    }, this.positions = e, this._init()
                }
                return e.prototype._init = function() {
                    var e = this,
                        i = function() {
                            return new Cesium.PolygonHierarchy(e.positions)
                        };
                    this.options.polygon.hierarchy = new Cesium.CallbackProperty(i, !1), t.viewer.entities.add(this.options)
                }, e
            }();
            i.setInputAction(function(o) {
                s++;
                var r, a = t.viewer.scene.pick(o.position);
                r = t.viewer.scene.pickPositionSupported && Cesium.defined(a) ? t.viewer.scene.pickPosition(o.position) : t.viewer.camera.pickEllipsoid(o.position), 0 == n.length && (t.clearTypeClipping(e), n.push(r.clone())), e && 2 == s && n.pop(), n.push(r);
                var l = new Cesium.Entity({
                    id: "point" + s,
                    position: r,
                    point: {
                        pixelSize: 12,
                        color: Cesium.Color.fromCssColorString("#FC36F0")
                    }
                });
                if (t.viewer.entities.add(l), t.pointEnt.push(l), e && 2 == s) {
                    i.destroy(), t.handle = null;
                    var c = t.pointEnt.length;
                    if (c > 0) {
                        for (var h = 0; h < c; h++) t.viewer.entities.remove(t.pointEnt[h]);
                        t.pointEnt = []
                    }
                    t.viewer.entities.removeById("polyline1234567") ? (t.drawClippingType(1), t.getPlaneAnlayse(n)) : t.InfoBox && t._containerCenterX && t._containerCenterY ? t.InfoBox.notify("info", {
                        size: "mini",
                        sound: !1,
                        delay: 1500,
                        position: {
                            left: t._containerCenterX - 180,
                            top: t._containerCenterY
                        },
                        msg: "异常结束，停止断面分析！"
                    }) : alert("异常结束，停止断面分析！")
                }
            }, Cesium.ScreenSpaceEventType.LEFT_CLICK), i.setInputAction(function(i) {
                var s = t.viewer.scene.camera.pickEllipsoid(i.endPosition, t.viewer.scene.globe.ellipsoid);
                n.length >= 2 && (Cesium.defined(o) ? (n.pop(), n.push(s)) : o = e ? new r(n) : new a(n))
            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), i.setInputAction(function(o) {
                if (n.splice(n.length - 2, 2), i.destroy(),
                    t.handle = null, e);
                else {
                    var s = t.pointEnt.length;
                    if (s > 0) {
                        for (var r = 0; r < s; r++) t.viewer.entities.remove(t.pointEnt[r]) || t.viewer.entities.remove(t.pointEnt[r]);
                        t.pointEnt = []
                    }
                    t.viewer.entities.removeById("polygon1234567") ? (t.getHoleAnlayse(n), t.drawClippingType(0)) : t.InfoBox && t._containerCenterX && t._containerCenterY ? t.InfoBox.notify("info", {
                        size: "mini",
                        sound: !1,
                        delay: 1500,
                        position: {
                            left: t._containerCenterX - 180,
                            top: t._containerCenterY
                        },
                        msg: "异常结束，停止挖洞分析！"
                    }) : alert("异常结束，停止挖洞分析！")
                }
            }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK), i.setInputAction(function(o) {
                if (i.destroy(), t.handle = null, e);
                else {
                    var s = t.pointEnt.length;
                    if (s > 0) {
                        for (var r = 0; r < s; r++) t.viewer.entities.remove(t.pointEnt[r]);
                        t.pointEnt = []
                    }
                    t.viewer.entities.removeById("polygon1234567") ? (t.getHoleAnlayse(n), t.drawClippingType(0)) : t.InfoBox && t._containerCenterX && t._containerCenterY ? t.InfoBox.notify("info", {
                        size: "mini",
                        sound: !1,
                        delay: 1500,
                        position: {
                            left: t._containerCenterX - 180,
                            top: t._containerCenterY
                        },
                        msg: "异常结束，停止挖洞分析！"
                    }) : alert("异常结束，停止挖洞分析！")
                }
            }, Cesium.ScreenSpaceEventType.RIGHT_CLICK)
        } catch (e) {
            console.log(e)
        }
    }, ut.prototype.isshowfundiv = function(e) {
        e ? (this.showScheme ? $("#clipping_toolbar").css({
            width: "370px"
        }) : $("#clipping_toolbar").css({
            width: "280px"
        }), $("#clipping_div_btn").show(), $("#clipping_open_btn").hide(), $("#clipping_close_btn").show()) : ($("#clipping_div_btn").hide(), $("#clipping_toolbar").css({
            width: "20px"
        }), $("#clipping_open_btn").show(), $("#clipping_close_btn").hide())
    }, ut.prototype.addClippingLayer = function(e, t) {
        "model" == t ? this.ModelClipLayer.push(e) : "tile" == t ? this.TileClipLayer.push(e) : "photo" == t && this.PhotoClipLayer.push(e)
    }, ut.prototype.anlayseModelLayer = function(e, t) {
        for (var i = this.ModelClipLayer.length, n = 0; n < i; n++) this.ModelClipLayer[n][t] && (this.ModelClipLayer[n]._model.clippingPlanes = e.clone())
    }, ut.prototype.anlayseTileLayer = function(e, t) {
        for (var i = this.TileClipLayer.length, n = 0; n < i; n++) this.TileClipLayer[n][t] && (this.TileClipLayer[n]._tileset.clippingPlanes = e.clone())
    }, ut.prototype.tileToparams = function(e) {
        var t = {};
        if (e && e.boundingSphere && e.boundingSphere.center) {
            var i = e.boundingSphere.center,
                n = Cesium.Cartographic.fromCartesian(i, Cesium.Ellipsoid.WGS84, new Cesium.Cartographic),
                o = Cesium.Math.toDegrees(n.latitude),
                s = Cesium.Math.toDegrees(n.longitude);
            t.lon = s, t.lat = o, t.height = n.height
        }
        if (e._root && e._root.transform) {
            var r = e._root.transform,
                a = Cesium.Matrix4.getTranslation(r, new Cesium.Cartesian3);
            if (0 == a.x && 0 == a.y && 0 == a.z) t.heading = 0;
            else {
                var l = Cesium.Transforms.eastNorthUpToFixedFrame(a),
                    c = Cesium.Matrix4.multiply(Cesium.Matrix4.inverse(l, new Cesium.Matrix4), r, new Cesium.Matrix4),
                    h = Cesium.Matrix4.getRotation(c, new Cesium.Matrix3);
                h = Cesium.Matrix3.transpose(h, h);
                var u = Cesium.Quaternion.fromRotationMatrix(h),
                    d = Cesium.HeadingPitchRoll.fromQuaternion(u),
                    p = Cesium.Math.toDegrees(d.heading);
                t.heading = p.toFixed(3)
            }
        } else t.heading = 0;
        return Cesium.Transforms.headingPitchRollToFixedFrame(Cesium.Cartesian3.fromDegrees(t.lon, t.lat, t.height), new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(t.heading), 0, 0))
    }, ut.prototype.anlaysePhotoLayer = function(e, t) {
        for (var i = this.PhotoClipLayer.length, n = 0; n < i; n++) this.PhotoClipLayer[n][t] && (this.PhotoClipLayer[n]._tileset.clippingPlanes = e.clone())
    }, ut.prototype.anlayseGlobeLayer = function(e) {
        this.viewer.scene.globe.clippingPlanes = e.clone()
    }, ut.prototype.getPlaneAnlayseNum = function(e) {
        var t = 0;
        if (e) {
            for (var i = 0; i < this.ModelClipLayer.length; i++) this.ModelClipLayer[i].clipplane && t++;
            for (var i = 0; i < this.TileClipLayer.length; i++) this.TileClipLayer[i].clipplane && t++
        }
        this.clippingGlode && t++;
        for (var i = 0; i < this.PhotoClipLayer.length; i++) e ? this.PhotoClipLayer[i].clipplane && t++ : this.PhotoClipLayer[i].cliphole && t++;
        return t
    }, ut.prototype.getPlaneAnlayse = function(e) {
        if (0 == this.getPlaneAnlayseNum(1)) return void alert("请添加断面图层");
        if (2 == e.length) {
            var t = this.viewer.scene.globe.ellipsoid.cartesianToCartographic(e[0]),
                i = Cesium.Math.toDegrees(t.longitude),
                n = this.viewer.scene.globe.ellipsoid.cartesianToCartographic(e[1]);
            if (i > Cesium.Math.toDegrees(n.longitude)) var o = this.getMatrix(e),
                s = this.getBBoxAnlayse(e, o);
            else var o = this.getMatrix([e[1], e[0]]),
                s = this.getBBoxAnlayse([e[1], e[0]], o)
        } else var o = this.getMatrix(e),
            s = this.getClipPlane(e, o, 1);
        var r = new Cesium.ClippingPlaneCollection({
            planes: s,
            modelMatrix: o,
            edgeWidth: 1,
            enabled: !0,
            edgeColor: Cesium.Color.WHITE
        });
        this.anlayseModelLayer(r, "clipplane"), this.anlayseTileLayer(r, "clipplane"), this.anlaysePhotoLayer(r, "clipplane"), this.clippingGlode && this.anlayseGlobeLayer(r)
    }, ut.prototype.getBBoxAnlayse = function(e, t) {
        for (var i = [], n = [], o = Cesium.Matrix4.inverse(t, new Cesium.Matrix4), s = e.length, r = [], a = 0; a < s; ++a) {
            if (0 == a) {
                var l = this.viewer.scene.globe.ellipsoid.cartesianToCartographic(e[a]),
                    c = Cesium.Math.toDegrees(l.latitude),
                    h = Cesium.Math.toDegrees(l.longitude),
                    u = l.height - 1e3,
                    d = Cesium.Cartesian3.fromDegrees(h, c, u);
                r.push(d);
                var p = Cesium.Matrix4.multiplyByPoint(o, d, new Cesium.Cartesian3);
                n.push(p)
            }
            var m = Cesium.Matrix4.multiplyByPoint(o, e[a], new Cesium.Cartesian3);
            n.push(m), r.push(e[a])
        }
        var f = Cesium.Cartesian3.subtract(n[0], n[1], new Cesium.Cartesian3);
        f = Cesium.Cartesian3.normalize(f, f);
        var g = Cesium.Cartesian3.subtract(n[2], n[1], new Cesium.Cartesian3);
        g = Cesium.Cartesian3.normalize(g, g);
        var v = Cesium.Cartesian3.cross(f, g, new Cesium.Cartesian3);
        n[1], dt(r, t);
        v = Cesium.Cartesian3.normalize(v, v);
        var C = Cesium.Plane.fromPointNormal(n[1], v);
        return i.push(C), i
    }, ut.prototype.getClipPlane = function(e, t, i) {
        for (var n = [], o = dt(points, t), s = Cesium.Matrix4.inverse(t, new Cesium.Matrix4), r = points.length, a = 0; a < r; ++a) {
            var l = (a + 1) % r;
            if (i && 0 == l) break;
            var c = viewer.scene.globe.ellipsoid.cartesianToCartographic(points[a]),
                h = Cesium.Math.toDegrees(c.latitude),
                u = Cesium.Math.toDegrees(c.longitude),
                d = c.height - 1e3,
                p = Cesium.Cartesian3.fromDegrees(u, h, d),
                m = Cesium.Matrix4.multiplyByPoint(s, p, new Cesium.Cartesian3),
                f = Cesium.Matrix4.multiplyByPoint(s, points[a], new Cesium.Cartesian3),
                g = Cesium.Matrix4.multiplyByPoint(s, points[l], new Cesium.Cartesian3),
                v = Cesium.Cartesian3.subtract(f, m, new Cesium.Cartesian3);
            v = Cesium.Cartesian3.normalize(v, v);
            var C = Cesium.Cartesian3.subtract(g, f, new Cesium.Cartesian3);
            C = Cesium.Cartesian3.normalize(C, C);
            var y = Cesium.Cartesian3.cross(v, C, new Cesium.Cartesian3);
            o || Cesium.Cartesian3.negate(y, y), y = Cesium.Cartesian3.normalize(y, y);
            var _ = Cesium.Plane.fromPointNormal(f, y);
            n.push(_)
        }
        return n
    }, ut.prototype.getMatrix = function(e) {
        var t = Cesium.Cartographic.fromCartesian(e[0]),
            i = parseFloat(Cesium.Math.toDegrees(t.longitude).toFixed(6)),
            n = parseFloat(Cesium.Math.toDegrees(t.latitude).toFixed(6)),
            o = parseFloat(t.height.toFixed(6));
        return Cesium.Transforms.eastNorthUpToFixedFrame(Cesium.Cartesian3.fromDegrees(i, n, o))
    }, ut.prototype.getHoleAnlayse = function(e) {
        if (0 == this.getPlaneAnlayseNum(0)) return void alert("请添加挖洞倾斜摄影图层");
        var t = this.getMatrix(e),
            i = this.getClipPlane(e, t, 0),
            n = new Cesium.ClippingPlaneCollection({
                planes: i,
                modelMatrix: t,
                edgeWidth: 1,
                enabled: !0,
                edgeColor: Cesium.Color.WHITE
            });
        this.anlaysePhotoLayer(n, "cliphole"), this.anlayseTileLayer(n, "cliphole"), this.anlayseModelLayer(n, "cliphole"), this.clippingGlode && this.anlayseGlobeLayer(n)
    }, ut.prototype.closeClippingWindow = function() {
        if (this.clearClipping(), this.handle) {
            this.viewer.entities.removeById("polyline1234567"), this.viewer.entities.removeById("polygon1234567"), this.handle.destroy(), this.handle = null;
            var e = this.pointEnt.length;
            if (e > 0) {
                for (var t = 0; t < e; t++) this.viewer.entities.remove(this.pointEnt[t]);
                this.pointEnt = []
            }
        }
    }, ut.prototype.closeClipping = function() {
        this.closeClippingWindow(), this.clippingWindow.windowHide()
    }, ut.prototype.getOSAndBrowser = function() {
        var e = navigator.platform,
            t = navigator.userAgent,
            i = "",
            n = "";
        e.indexOf("Win") > -1 ? t.indexOf("Windows NT 5.0") > -1 ? i += "Win2000" : t.indexOf("Windows NT 5.1") > -1 ? i += "WinXP" : t.indexOf("Windows NT 5.2") > -1 ? i += "Win2003" : t.indexOf("Windows NT 6.0") > -1 ? i += "WindowsVista" : t.indexOf("Windows NT 6.1") > -1 || t.indexOf("Windows 7") > -1 ? i += "Win7" : t.indexOf("Windows NT 6.2") > -1 || t.indexOf("Windows 8") > -1 ? i += "Win8" : t.indexOf("Windows NT 6.3") > -1 || t.indexOf("Windows 8.1") > -1 ? i += "Win8.1" : t.indexOf("Windows NT 10.0") > -1 || t.indexOf("Windows 10") > -1 ? i += "Win10" : i += "Other" : e.indexOf("Mac") > -1 ? i += "Mac" : e.indexOf("X11") > -1 ? i += "Unix" : e.indexOf("Linux") > -1 ? i += "Linux" : i += "Other", i += "/";
        var o = t.indexOf("Opera") > -1,
            s = t.indexOf("compatible") > -1 && t.indexOf("MSIE") > -1 && !o,
            r = t.toLowerCase().indexOf("edge") > -1 && !s,
            a = t.toLowerCase().indexOf("trident") > -1 && t.indexOf("rv") > -1;
        if (/[Ff]irefox(\/\d+\.\d+)/.test(t)) n = /([Ff]irefox)\/(\d+\.\d+)/.exec(t), i += n[1] + n[2];
        else if (s) {
            var l = "",
                c = new RegExp("MSIE (\\d+\\.\\d+);");
            c.test(t);
            var h = parseFloat(RegExp.$1);
            l = 7 == h ? "IE7" : 8 == h ? "IE8" : 9 == h ? "IE9" : 10 == h ? "IE10" : "0", i += l
        } else r ? i += "Edge" : a ? i += "IE11" : /[Cc]hrome\/\d+/.test(t) ? (n = /([Cc]hrome)\/(\d+)/.exec(t), i += n[1] + n[2]) : /[Vv]ersion\/\d+\.\d+\.\d+(\.\d)* *[Ss]afari/.test(t) ? (n = /[Vv]ersion\/(\d+\.\d+\.\d+)(\.\d)* *([Ss]afari)/.exec(t), i += n[3] + n[1]) : /[Oo]pera.+[Vv]ersion\/\d+\.\d+/.test(t) ? (n = /([Oo]pera).+[Vv]ersion\/(\d+)\.\d+/.exec(t), i += n[1] + n[2]) : i += "unknown";
        return i
    }, e.Viewer = r, e.Tool = h, e.WebMapCollection = C, e.VectorLayer = y, e.TerrainLayer = w, e.PhotogrammetryLayer = l, e.Model3DLayer = x, e.ImageryLayer = s, e.DynamicLayer = p, e.CitydbKmlLayer = rt, e.MarkerLayer = ct, e.ProjectCollection = v, e.Project = f, e.TransformUtils = wn, e.DistanceManager = gt, e.CameraTrackControls = c, e.MoveModel = ht, e.Clipping = ut, Object.defineProperty(e, "__esModule", {
        value: !0
    })
});